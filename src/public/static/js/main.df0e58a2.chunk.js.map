{"version":3,"sources":["Images/seal.jpg","Images/sign.jpg","Images/logo.png","Images/js.jpg","Images/mk.jpg","Images/proud.jpg","Images/scaff.jpg","Services/api.js","utils/setAuthorizationHeader.js","Services/types.js","Schemas/schemas.js","actions/actions.js","Components/Header/Header.js","Containers/AddUser/AddUserForm/AddUserForm.js","Containers/AddUser/AddUser.js","Containers/AddUser/AddUserForm/UpdateUserForm.js","Containers/AddUser/UpdateUser.js","Containers/Admin/AdminDashboard.js","actions/Product.js","Services/transactionapi.js","actions/Transaction.js","Containers/Billing/BillingForm/BillingForm.js","Containers/Billing/BillingTable.js","Containers/Billing/ProductBilling.js","Containers/LoginPage/LoginForm/LoginForm.js","Services/Roles.js","Components/loader/loader.js","Containers/LoginPage/LoginPage.js","Components/Alert/Alert.js","Containers/Material/MaterialForms/AddMaterialForm.js","Components/Table/DatatablePage.js","Containers/Material/AddMaterial.js","Containers/Material/MaterialForms/AddMaterialTypesForm.js","Containers/Material/AddMaterialType.js","Containers/Material/MaterialForms/UpdateMaterialForm.js","Containers/Material/UpdateMaterial.js","Containers/Material/MaterialForms/UpdateMaterialTypesForm.js","Containers/Material/UpdateMaterialType.js","Containers/Product/ProductForm/ProductForm.js","actions/uom.js","Containers/Product/Product.js","Containers/Product/ViewProduct.js","Containers/Product/ViewProductList.js","Containers/SetUp/Customer/AddCustomer/CustomerForm/CustomerForm.js","Containers/SetUp/Customer/ViewCustomerList.js","Services/customerapi.js","actions/customerContact.js","Containers/SetUp/Customer/Customer.js","Containers/SetUp/Customer/Transaction.js","Containers/SetUp/Customer/UpdateCustomer/CustomerForm/UpdateCustomerForm.js","Containers/SetUp/Customer/UpdateCustomer.js","Containers/SetUp/Customer/ViewCustomerTable.js","Containers/SetUp/CustomerInfo/ViewCustomerList.js","Containers/SetUp/CustomerInfo/CustomerInfo.js","Services/quotationapi.js","actions/quotation.js","Containers/SetUp/CustomerInfo/CustomerQuotation/CustomerQuotationList.js","Containers/SetUp/FinancialYear/AddYear/AddYearForm/AddYearForm.js","Containers/SetUp/FinancialYear/AddFinancialYear.js","actions/financialYearAdd.js","Services/challanapi.js","actions/challan.js","Containers/Transaction/Challan/Challan/ChallanForm.js","Containers/Transaction/Challan/Challan/AddChalan.js","Containers/Transaction/Challan/View/ViewChallan.js","Containers/Transaction/Challan/View/Component.js","Containers/Transaction/Challan/View/ViewChallanPdf.js","Containers/Transaction/Enquiry.js","Services/invoiceapi.js","actions/Invoice.js","Containers/Transaction/Invoice/Invoice/InvoiceForm.js","Containers/Transaction/Invoice/Invoice/AddInvoice.js","Containers/Transaction/Invoice/Invoice/ProformaInvoiceForm.js","Containers/Transaction/Invoice/Invoice/AddProformaInvoice.js","Containers/Transaction/Invoice/View/ViewInvoice.js","Containers/Transaction/Invoice/View/Component.js","Containers/Transaction/Invoice/View/ViewInvoicePdf.js","Containers/Transaction/Invoice/View/ViewProformaInvoice.js","Containers/Transaction/Invoice/View/Component2.js","Containers/Transaction/Invoice/View/ViewProformaInvoicePdf.js","Containers/Transaction/Item/Form/ItemList/AddItemListForm.js","Containers/Transaction/Item/ItemList/ViewMasterItemList.js","Containers/Transaction/Item/ItemList/AddMasterItemList.js","Containers/Transaction/Item/ItemList/MasterItemListValues.js","Containers/Transaction/Item/Form/ItemList/UpdateItemListForm.js","Containers/Transaction/Item/ItemList/UpdateMasterItemList.js","Containers/Transaction/Item/Form/MasterItemTypeForm.js","Containers/Transaction/Item/ItemType/ItemMasterType.js","Containers/Transaction/Item/ItemType/ItemMasterTypeList.js","Containers/Transaction/Item/Form/UpdateMasterItemTypeForm.js","Containers/Transaction/Item/ItemType/UpdateItemMasterType.js","Components/EditTable/EditTable.js","Services/locationapi.js","actions/Location.js","Containers/Transaction/ItemScreening/ReceiptScreen/ReceiptScreenForm/ReceiptScreenForm.js","Containers/Transaction/ItemScreening/ReceiptScreen/ReceiptScreenForm/ReceiptTable.js","Containers/Transaction/ItemScreening/ReceiptScreen/ReceiptScreen.js","Containers/Transaction/ItemScreening/ReceiptScreen/Component.js","Containers/Transaction/ItemScreening/ReceiptScreen/ViewReceipt.js","Services/moveorderapi.js","actions/moveorder.js","Containers/Transaction/MoveOrder/MoveOrderScreenForm/MoveOrderScreenForm.js","Containers/Transaction/MoveOrder/MoveOrderScreen.js","Containers/Transaction/MoveOrder/View/ViewMoveOrder.js","Containers/Transaction/OnHand/AddOnHandScreenForm/AddOnHandScreenForm.js","Containers/Transaction/OnHand/AddOnHand.js","Services/productionapi.js","actions/Production.js","Containers/Transaction/ProductionScreen/Production/ProductionForm.js","Containers/Transaction/ProductionScreen/Production/AddProduction.js","Containers/Transaction/ProductionScreen/View/ViewProudction.js","Containers/Transaction/PurchaseOrder/PurchaseOrderForm/PurchaseOrderForm.js","Services/supplierapi.js","actions/Supplier.js","Services/currency.js","actions/Currency.js","Containers/Transaction/PurchaseOrder/PurchaseOrder.js","Containers/Transaction/PurchaseOrder/ViewPurchaseOrderList.js","Containers/Transaction/PurchaseOrder/Component.js","Containers/Transaction/PurchaseOrder/ViewPurchaseOrderPdf.js","Containers/Transaction/Quotation/Quotation/QuotationForm/QuotationForm.js","Containers/Transaction/Quotation/Quotation/AddQuotation.js","Containers/Transaction/Quotation/View/ViewQuotation.js","Containers/Transaction/Quotation/View/Component.js","Containers/Transaction/Quotation/View/ViewQuotationPdf.js","Containers/Transaction/Supplier/SupplierForm/SupplierContact.js","Containers/Transaction/Supplier/SupplierContact/SupplierContact.js","Containers/Transaction/Supplier/SupplierForm/SupplierDetail.js","Containers/Transaction/Supplier/SupplierDetail/SupplierDetail.js","Containers/Transaction/Supplier/SupplierForm/SupplierDetailUpdate.js","Containers/Transaction/Supplier/SupplierDetail/SupplierDetailUpdate.js","Containers/Transaction/Supplier/SupplierDetail/Supplierlist.js","Containers/Transaction/TotalQuantityScreen/TotalQuantityForm/ItemQuantitySearch.js","Containers/Transaction/TotalQuantityScreen/TotalQuantity.js","Services/order.js","actions/order.js","Containers/Transaction/WorkOrder/Order/OrderForm.js","Containers/Transaction/WorkOrder/Order/AddOrder.js","Containers/Transaction/WorkOrder/View/ViewOrder.js","Containers/Transaction/WorkOrder/View/Component.js","Containers/Transaction/WorkOrder/View/ViewOrderPdf.js","Containers/View/AdminRole.js","Containers/View/EmployeeRole.js","Pages/BOMPage.js","Pages/Challan.js","Pages/CRMPage.js","Pages/CustomerPage.js","Pages/InventoryPage.js","Pages/InvoicePage.js","Pages/InvoicePage1.js","Pages/InvoicePage2.js","Pages/ItemsPage.js","Pages/ManufacturingPage.js","Pages/MoveOrder.js","Pages/OnHandPage.js","Pages/Production.js","Pages/PurchaceOrderPage.js","Pages/QuantityPage.js","Pages/QuotationPage.js","Pages/SupplierPage.js","Pages/TransactionPage.js","Pages/WorkOrder.js","Routes/GuestRoute.js","Routes/UserRoute.js","App.js","serviceWorker.js","Store/rootReducer.js","reducer/user.js","reducer/userlist.js","reducer/materialoptionlist.js","reducer/materiallistvalues.js","reducer/productlistvalues.js","reducer/masteritemtypenamevalue.js","reducer/masteritemlistnamevalue.js","reducer/suppliercontactlistvalue.js","reducer/supplierdetaillistvalue.js","reducer/uomlistvalue.js","reducer/currencylistvalue.js","reducer/locationlistvalue.js","reducer/purchaseorderlistvalue.js","reducer/receiptlistvalues.js","reducer/customerlistvalues.js","reducer/customertransationvalues.js","reducer/quotationlistvalues.js","reducer/invoicelistvalues.js","reducer/proformainvoicelistvalues.js","reducer/challanlistvalues.js","reducer/orderlistvalues.js","reducer/productionlistvalues.js","reducer/moveorderlistvalues.js","Store/store.js","Store/persistStore.js","index.js","Images/client.png"],"names":["module","exports","__webpack_require__","p","api","userRegister","userRegisterdata","axios","post","concat","process","then","res","data","userRecord","login","credentials","user","getUser","get","userdata","getUserbyid","id","userRecordData","updateUser","patch","success","addmaterialtype","materialdata","getmaterialstype","materiallist","updatematerialtype","addmaterial","getmaterial","updatematerial","addproduct","getproducts","productlist","addyear","checkexists","year","updateyear","updateid","catch","err","error","setAuthorizationHeader","token","arguments","length","undefined","defaults","headers","common","authorization","UOM_LIST","CURRENCY_LIST","Location_LIST","userSchema","schema","Entity","idAttribute","uomListSchema","materialOptionSchema","materialListSchema","productListSchema","masterItemTypeNameSchema","masterItemTypeListSchema","supplierContactListSchema","supplierDetailListSchema","currencyListSchema","locationListSchema","purchaseOrderListSchema","customerListSchema","customerTransactionSchema","quotationListSchema","invoiceListSchema","proformainvoiceListSchema","challanListSchema","orderListSchema","productionListSchema","moveorderListSchema","userLoggedIn","type","Header","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","logout","window","location","reload","history","push","toggle","bind","assertThisInitialized","state","isOpen","isAuthenticated","setState","react_default","a","createElement","Navbar","expand","className","NavbarBrand","tag","Link","to","src","logo","alt","style","width","NavbarToggler","onClick","Collapse","navbar","Nav","role","NavItem","NavLink","UncontrolledDropdown","nav","inNavbar","DropdownToggle","caret","DropdownMenu","right","DropdownItem","React","Component","withRouter","connect","e","dispatch","localStorage","removeItem","AddUserForm","title","firstname","lastname","email","phone","startdate","Date","enddate","username","password","repassword","active","persontype","department","job","errors","loading","onChange","objectSpread","defineProperty","target","name","value","handleValidSubmit","console","log","submit","myFormRef","reset","response","handleChangeStartDate","date","selectedDate","formattedDate","getDate","getMonth","getFullYear","handleChangeEndDate","handleInvalidSubmit","_this2","_this$state","Alert","color","availity_reactstrap_validation_lib","onValidSubmit","onInvalidSubmit","ref","el","Card","CardHeader","CardBody","Row","Col","sm","Label","for","validate","required","errorMessage","pattern","minLength","maxLength","react_datepicker_es","selected","autoComplete","minDate","dateFormat","maxDate","match","Button","disabled","AddUser","AddUser_AddUserForm_AddUserForm","UpdateUserForm","count","userRecordModified","userlist","UpdateUser","userid","params","AddUserForm_UpdateUserForm","AdminDashboard","react_router_dom","paddingTop","productlistvalues","productdata","productvalueFetched","normalize","getMaterialsTypes","materialsvalue","materialsdata","materialoption","getMaterial","materialslistvalue","materialsvalues","transactionapi","getUomDetails","uomlist","addMasterItemType","masterItemType","getMasterItemType","masteritemtypes","updateMasterItemType","addMasterItemList","url","method","Accept","Content-Type","masterItemList","getMasterItemList","masteritemlist","updatemasteritemlist","addPurchaseOrder","purchaseorderlist","updatePurchaseOrder","getPurchaseOrderList","searchponumber","ponumber","purchaseordervalue","addorupdateitemsinlocation","additemsinlocation","getitemlistavaliable","locationid","itemid","totalitemlistvalues","getReceiptList","receiptlist","getMasterItemTypes","masteritemtypenamevalue","masteritemtypenamedata","MasterItemTypeName","masteritemtypelistvalues","masteritemtypelistdata","MasterItemTypeList","getPurchaseOrder","purchaseorderlistvalues","purchaseorderlistdata","purchaseOrderListFetched","totalitemvaluesearch","ProductBilling","product","profit","qty","labourcost","materiallistvalues","createSelectItems","items","map","option","i","filter","productname","_id","key","masteritemdescription","values","textAlign","masteritemlistvalues","BillingTable","_this$props","selectedProduct","productformvalues","materialTotalCost","productMaterial","productMaterialData","parseFloat","productqty","product_id","masteritemcostperunit","reduce","b","subTotal","grandTotal","colSpan","masteritemname","masteritemuom","uomname","toFixed","parseInt","productlistvalue","gloabl","global","Breadcrumb","BreadcrumbItem","BillingForm","Billing_BillingTable","LoginForm","JSON","stringify","Roles","ADMIN","EMPLOYEE","ITADMIN","FINANCE","PURCHASE","SALES","STORE","PRODUCTION","CustomLoader","react_loader_spinner_default","height","LoginPage","dataHandler","loader_loader","LoginPage_LoginForm_LoginForm","Mob_JWT","decoded","jwtDecode","userinfo","AddMaterialForm","materialtype","materialname","materialdescription","materialuom","costperunit","materialrate","materialoptionlistvalues","DatatablePage","columns","columnvalue","rows","rowvalues","mdbreact_esm","striped","bordered","small","AddMaterial","updateButton","path","addMaterial","view","MaterialForms_AddMaterialForm","Table_DatatablePage","label","field","sort","AddMaterialTypesForm","material","AddMaterialType","materialoptions","addMaterialTypes","size","MaterialForms_AddMaterialTypesForm","UpdateMaterialForm","materialvalues","updateMaterial","updatematerialdetails","materialid","MaterialForms_UpdateMaterialForm","UpdateMaterialTypesForm","dataRecord","materialoptionobjectlist","UpdateMaterialType","updateMaterialType","MaterialForms_UpdateMaterialTypesForm","ProductForm","initialState","createSelectItems3","optionvalue","uomlistvalues","masteritemtypename","split","createSelectItems2","createSelectunfinishedItems","masteritemtype","handleClick","toConsumableArray","products","productsqty","productsuom","productsqtyinmeter","handleChange","index","materiallistvaluesObject","ProductqtyhandleChange","arr","item","productsweight","masteritemunitwt","ProductuomhandleChange","ProductqtyinmeterhandleChange","removeClick","removeProduct","splice","productMaterials","forEach","v","obj","alert","toggelbutton","getUnitmeasures","uomdata","message","_this3","Modal","ModalHeader","ModalBody","ModalFooter","_React$createElement3","marginTop","paddingLeft","getUomList","uomlistvalue","uomListFetched","Product","Product_ProductForm_ProductForm","propTypes","PropTypes","func","isRequired","ViewProduct","productMaterialslist","materialitemtype","tablerows","itemlist","marginBottom","fontSize","fontWeight","marginRight","Table","ViewProductList","CustomerForm","customernumber","customername","customercontactnumber","customergstnumber","customeraddress1","customeraddress2","city","pincode","country","codate","getTime","deliveryAddress","address1","address2","visible","sameAsBilling","suppliercontactlistvalue","onDeliveryAddressChange","val","onShowAlert","setTimeout","keys","customerlistvalues","toString","ViewCustomerList","searchcustomername","searchfromdate","searchtodate","backupcustomerlistvalues","fromdatetimestamp","todatetimestamp","componentDidMount","getTransaction","filterCustomer","customervalues","customerdata","Transaction","setItem","dateName","dateValue","getDateByMMDDYYYY","filterBydates","initializeCustomers","ev","_this4","trim","filtereddata","toLowerCase","indexOf","date1","date2","_this5","customer","comparedate","_this$state2","customerBlock","customerapi","addcustomer","getcustomer","customerlist","updatecustomer","getcustomerTransaction","getCustomerList","customerlistvalue","customerListFetched","Customer","addCustomerContact","AddCustomer_CustomerForm_CustomerForm","enquirydate","quotationdate","podate","enquirytimestamp","quotationtimestamp","podatetimestamp","ponum","customerName","getItem","transactionID","customertransationvalues","backupcustomertransationvalues","initializeTransactions","poreceived","updatePO","podates","put","onChange1","onChange2","customerid","Transactionhistory","enq_Date","_this6","modaldata","_this7","placeholder","customerTransactionBlock","quote","PO","invoice","dc","quotation","Qno","po","margin","marginLeft","background","getCustomerTransaction","customerTransactionFetched","UpdateCustomerForm","updateCustomerContact","CustomerForm_UpdateCustomerForm","ViewCustomerTable","Customer_ViewCustomerList","CustomerInfo","CustomerInfo_ViewCustomerList","quotationapi","addquotation","quotationdata","updatequotation","getquotation","quotationlist","searchquotation","customerquotationlist","quotationCreated","quotationlistvalues","quotationFetched","CustomerQuotationList","AddYearForm","exists","updated","currentyear","AddFinancialYear","updateYear","addYear","AddYear_AddYearForm_AddYearForm","challanapi","challan","addchallan","challandata","updatechallan","getchallan","challanlist","challanCreated","getChallan","challanlistvalues","challanFetched","ChallanForm","selectedItemlist","itemname","itemdescription","itemtype","itemrate","itemuom","itemlocation","quantity","totalcost","remarks","customerdetail","deliverychallanno","toaddress","mobilenumber","site","vehiclenumber","gstno","otherreference","customerobjects","supplierdetaillistvalue","supplierdetaillistvalueobject","masteritemlistvaluesobject","currencylistvalues","uom","locationlistvalue","successmsg","counts","handleChallanDate","handlePODate","handleChange2","selected_id","totalValue","totalvalue","createSelectcustomer","selectitemchange","selected_item","masteritemrate","ID","locationChange","selected_location","onhandlerChange","onSubjectHandler","filterItems","createSelectItemTypes","createSelectCurrencyItems","currencyname","createSelectUomItems","createSelectLocationItems","locationname","quantityChange","remarkChange","unitChange","AddedIteminfo","_this$state$data","supplierdetail","getDCDetails","getChallandata","founddata","newState","assign","addeditemlist","itemarray","localeCompare","customerID","readOnly","currencylistvalue","purchaseorderlistvalue","AddChallan","updateChallan","addChallan","Challan_ChallanForm","ViewChallan","quotationvalue","styles","StyleSheet","create","textcenter","textright","textleft","paddingleft","pagepadding","padding","section","position","display","flexDirection","overflow","section_column","myHeight","headerfont","descriptionText","headerfont2","headerfontleft","billingaddress","shippingaddress","row","justifyContent","dcaddress","dcaddress_left","view_border","border","flexGrow","view_border_left","borderLeft","borderTop","borderBottom","view_border_right","borderRight","column","headerwidth","headerwidthdate","headerwidthlogo","header_name","header_sub_name","paddingHorizontal","header_sub_name_phone","header_tintext","header_sub_name3","header_sub_nameB","flex","header_sub_nameA","headerwidthAddress","refstyle","paddingBottom","headerpadding","flexgrow","fontsize18","kindattend","yourref","main","tableheaderbgcolor","backgroundColor","footerfixed","bottom","dc_header","dc_gst","Small","_ref","children","react_pdf_browser_es","Medium","_ref3","textDecorationLine","Bold","_ref5","_ref6","MyDocument","_ref7","data_cond","toAD","totalrs","taxableAmount","taxableamount","moment","format","grandtotal","purchaseorderdate","deliveryaddress","vendorcode","freightcharges","subtotal","cgst","sgst","igst","total","deliverychallannumber","goodsDescription","invoicenumber","roundoffamount","mobileno","purchaseordernumber","tax","tableComponentTwo","datalength","wrap","react_pdf_table_lib","weighting","getContent","r","slno","itemimage","weighteach","itemdiscount","Component_Bold","unit","stye","paddingRight","Component_Small","Component_Medium","Component_Header","wordWrap","ViewChallanPdf","status","link","quotationid","requestdeliverydate","masteritemimage","dynamicClick","document","getElementsByClassName","getElementById","click","href","download","View_Component","EnquiryPage","update","enquirylistvalues","backupenquirylistvalues","errorMsg","eno","company","detail","enquiryFrom","getEnquiries","addenquiry","addnewenquiry","updateenquiry","enquirylist","enquirydata","enquiryvalues","reverse","enquiry","errormessage","float","invoiceapi","addinvoice","invoicedata","updateinvoice","getinvoice","invoicelist","getproformainvoice","invoiceCreated","invoicelistvalues","invoiceFetched","InvoiceForm","transaction","_data","_customerdetail","hsncode","saccode","masteritemtypelistvaluesobject","_objectSpread2","sub","taxable","Number","calculatePercentageAmount","ttl","gst","gt","roa","calculateRoundoffTotal","_objectSpread7","onCustomerChange","onRemarksChange","handleDate","handleWorkorderDate","handleDespathdate","purchaseDate","invocieDate","bool","discountpercentagevalue","discountvalue","totalvaluecost","itemdiscountChange","discount","unitcost","particularindextotalvalue","_objectSpread15","updateQuotation","saveDynamicPonum","createChallanList","handleChallanChange","selecteddeliveryChallan","selectedChallan","getInvoiceDetails","lastIndexOf","invoicedate","deliverychallandata","workorderno","workorderdate","despathdate","removaltime","transportationcharge","advanceamountreceived","_React$createElement","quotationnumber","AddInvoice","valid","Invoice_InvoiceForm","ProformaInvoiceForm","proformainvoicelist","transportationgst","transportchargerequired","AddProformaInvoice","Invoice_ProformaInvoiceForm","ViewInvoice","invoiceid","originalInvoice","profomaInvoice","_pagepadding","boxShadow","headerfont4","headerfont5","headerfont3","seal","invoice_header","nobordertable","borderWidth","borderRightWidth","borderBottomWidth","Description","_ref2","SmallBold","_ref4","amountinwords","Rs","amount","words","Array","number","join","n_length","words_string","n_array","received_n_array","substr","j","cgstval","sgstval","igstval","n","op","nums","whole","substring","fraction","RsPaise","View_Component_Small","alignItems","Component_Description","View_Component_SmallBold","ViewInvoicePdf","Invoice_View_Component","ViewProformaInvoice","sessionStorage","getProformaInvoice","proformainvoicelistvalues","proformainvoiceFetched","MyDocument2","financialYear","financialyear","total2","transportationgstper","transportationchargegst","totalaftertransportcharge","Component2_Small","Component2_Description","Component2_SmallBold","sign","ViewProformaInvoicePdf","parse","Component2","AddItemListForm","masteritemshortdescription","permeter","perfeet","perinch","masteritemimagefile","filename","_objectSpread3","onItemTypeChange","selecteditemtype","selecteditemtypevalue","selectitemid","selecteditemvalues","fileSelectedHandler","files","file_size","file_name","file_type","filesize","hasExtension","formdata","FormData","append","fileName","exts","RegExp","replace","test","encType","accept","cursor","ViewMasterItemList","masteritemdata","AddmasterItemList","ItemList_AddItemListForm","errorHandler","MasterItemListValues","class","ItemList_ViewMasterItemList","UpdateItemListForm","itemImage","imageChanged","itemimg","maxWidth","maxHeight","UpdateMasterItemList","ItemList_UpdateItemListForm","MasterItemTypeForm","MasterItemTypename","MasterItemType","Form_MasterItemTypeForm","ItemMasterTypeList","masteritemtypesvalues","masteritemtypedata","UpdateMasterItemTypeForm","masteritemtypenamevalueobjectlist","UpdateItemMasterType","updateMasterItemTypes","masteritemid","Form_UpdateMasterItemTypeForm","EditTable","poid","poitemid","itemquantity","receivedqty","recevingqty","totalqty","receiptnumber","selectedItem","sucess","loadingvalue","selected_qty","iteminfo","itemlistsubmit","selectedItemlistvalues","tableBody","nowDate","min","max","locationapi","getLocationList","locationlist","locationdata","locationListFetched","ReceiptScreenForm","onhandleChange","ReceiptTable","receiptlistitems","receiptlisttable","receiptvalue","loc","ReceiptScreen","getReceiptlist","searchPoNumber","podata","poItem","datavalue","asyncToGenerator","regenerator_default","mark","_callee","searchporesult","_context","prev","next","sent","searchdata","abrupt","stop","_x","apply","savereport","ReceiptScreenForm_ReceiptTable","ReceiptScreen_ReceiptScreenForm_ReceiptScreenForm","Components_EditTable_EditTable","orderlistvalues","today","ReceiptScreen_Component_Small","ReceiptScreen_Component_Bold","ReceiptScreen_Component_Header","poqty","receiptDate","availqty","ViewReceiptPdf","poreceiptvalues","itemcode","TotalRecQty","ReceiptScreen_Component","moveorderapi","moveorder","addmoveorder","moveorderdata","getmoveorder","moveorderlist","addMoveOrder","moverorderlistvalues","moverorderlist","getMoveOrder","moveorderFetched","MoveOrderScreenForm","availableQuantity","moveorderno","fromaddress","tolocationlist","handleChangeDeliveryDate","it","itemdesc","onhandlerFromChange","onhandlerToChange","createToLocationList","moveorderlistvalues","getMovedata","overflowX","MoveOrderScreen","MoveOrder_MoveOrderScreenForm_MoveOrderScreenForm","ViewProduction","AddOnHandScreenForm","isAdded","result","entities","AddOnHand","OnHand_AddOnHandScreenForm_AddOnHandScreenForm","productionapi","addproduction","productiondata","getproduction","productionlist","productionlistvalues","productionFetched","ProductionForm","totalweight","readystock","firstround","secondround","thirdround","productionorderno","subAssembly","dummyProductMapping","assembly","products2","options","selectedIndex","text","productMaterial2","found","calculationArray","calculationdata","quantityPerMeter","quantityPerKg","thickness","masteritemdescription2","weightChange","stockChange","secondChange","firstChange","thirdChange","toggelreload","onthicknessChange","mainindex","onQuantityChange","onQuantityChangeMeter","calc","kg","onQuantityChangeKg","onTotalChange","addItemComp","changeQuantity","getProddata","maninindex","AddProduction","Production_ProductionForm","ViewProudction","productiondate","description","qtyAvaillength","isViewList","productionTodayList","updateTransaction","toggle2","onhandlerChange2","subitem","usedqty","transactionHistrory","view2","viewTransaction","addTransaction","headerBlock","contentBlock","PurchaseOrderForm","isEditdone","suppliernumber","suppliername","supplieraddress1","supplieraddress2","suppliergstnumber","refno","subject","suppliercontactid","quotationno","currency","scheduledays","schedulepayment","createSelectSupplier","createSelectSupplierContact","suppliercontactname","_this$state$data2","getPODetails","podetail","supplierid","referenceno","currencyid","itemnameinfo","supplierapi","addSupplierContact","supplierContactdata","getSupplierContact","suppliercontactlist","addsupplierdetails","getSupplierDetails","supplierdetaillist","updateSupplierContact","suppliercontactlistdata","suppplierContactListFetched","supplierdetaillistdata","suppplierDetailListFetched","getCurrencyList","currencylist","currencydata","currencyListFetched","purchaseOrder","PurchaseOrder_PurchaseOrderForm_PurchaseOrderForm","ViewPurchaseOrderlist","purchaseorder","address","suppliercity","supplierstate","supplierpincode","suppliercountry","columnSection","padd6","padding2","headerwidthNew","fontsize18bold","totaleachitem","selectecontactlist","selectedcontactlist","suppliercontactnumber","PurchaseOrder_Component_SmallBold","PurchaseOrder_Component_Header","PurchaseOrder_Component_Small","PurchaseOrder_Component_Description","client","ViewPurchaseOrderPdf","purchaseorderid","selectedcontact","contactid","PurchaseOrder_Component","QuotationForm","isRemovedCalled","isVisible","itemdiscountamount","tcharge","transitinsurance","ws","loadingcharge","selectitemchange2","totaldiscountcost","getQuotationDetails","customerNumber","customerGST","customerAddress","dataelem","F","AddQuotation","Quotation_QuotationForm_QuotationForm","ViewQuotation","tableHeader","cutoff","whiteSpace","wordBreak","bgblue","padding5","fontbold","smallicon","brandname","padding1","flexview","RedBold","BlackBold","customeraddress","loadingcharges","tchargegst","subtotalgst","totalincludegst","Quotation_View_Component_SmallBold","Component_RedBold","proud","makeInIdia","Quotation_View_Component_Small","justDial","scaff","View_Component_Header","Component_BlackBold","Quotation_View_Component","SupplierContactForm","SupplierContact","SupplierForm_SupplierContact","SupplierDetail","suppliercontactnamelist","suppliercontactdesignation","suppliercontactemail","supplierContacthandleChange","removeContact","contactnameChange","contactdesignationChange","contactnumberChange","contactemailChange","supplierContactinfo","suppliercontactarray","suppliercontactdesignationarray","suppliercontactnumberarray","suppliercontactemailarray","addSupplierDetails","SupplierForm_SupplierDetail","SupplierDetailUpdateForm","mongoid","SupplierDetailUpdate","updateSupplierDetails","supplierdetailid","SupplierForm_SupplierDetailUpdate","Supplierlist","supplierdata","supplierAddress","ItemQuantitySearch","TotalQuantity","TotalQuantityForm_ItemQuantitySearch","order","addorder","orderdata","updateaddorder","getorder","orderlist","orderCreated","orderFetched","OrderForm","companydetails","contactperson","officeno","deliveryschedule","orderdate","distance","sitecontactperson","pono","handleChangeDeliveryschedule","getWorkorderDetails","getOrderData","_React$createElement2","AddOrder","Order_OrderForm","ViewOrder","updateworkorder","companyname","totalwt","WorkOrder_View_Component_SmallBold","ViewOrderPdf","WorkOrder_View_Component","AdminRole","startdat","userlistvalue","userFetched","EmployeeRole","BOMPage","ChallanPage","padding-top","CRMPage","CustomerPage","InventoryPage","top","InvoicePage","InvoicePage1","InvoicePage2","ItemsPage","ManufacturingPage","MoveOrder","OnHandPage","ProductionPage","PurchaceOrderPage","QuantityPage","QuotationPage","SupplierPage","TransactionPage","adminMenu","Fragment","financeMenu","purchaseMenu","salesMenu","storeMenu","productionMenu","WorkOrderPage","component","rest","objectWithoutProperties","react_router","render","roles","includes","App","Components_Header_Header","exact","Routes_GuestRoute","Routes_UserRoute","ViewAdmin","ViewEmployee","ProductList","UpdateMaterial","ViewMoveOrder","AddMasterItemList","MasterItemList","UpdateMasterItemType","PurchaseOrder","ViewPurchaseOrderList","SupplierList","AddCustomer","UpdateCustomer","ViewQuotationPdf","AddChalan","Boolean","hostname","appReducer","combineReducers","action","storage","users","receiptlistvalues","rootReducer","persistConfig","LocalStorage","persistedReducer","persistReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","logger","persistStore","library","add","faHome","faDollyFlatbed","faCube","faKaaba","faUsers","faUser","faUsersCog","faUserFriends","faCalendarPlus","ReactDOM","es","integration_react","persistor","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.df0e58a2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/seal.0511c619.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sign.83a51cee.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo.fd12c247.png\";","module.exports = __webpack_public_path__ + \"static/media/js.15986e52.jpg\";","module.exports = __webpack_public_path__ + \"static/media/mk.e7f890af.jpg\";","module.exports = __webpack_public_path__ + \"static/media/proud.b1a70432.jpg\";","module.exports = __webpack_public_path__ + \"static/media/scaff.184bf216.jpg\";","import axios from \"axios\";\n\nexport default {\n  user: {\n    userRegister: userRegisterdata => {\n      return axios\n        .post(`${process.env.REACT_APP_BASE_URL}/api/auth`, {\n          userRegisterdata\n        })\n        .then(res => {\n          return res.data.userRecord;\n        });\n    },\n    login: credentials => {\n      return axios\n        .post(`${process.env.REACT_APP_BASE_URL}/api/login`, {\n          credentials\n        })\n        .then(res => {\n          return res.data.user;\n        });\n    },\n    getUser: () => {\n      return axios\n        .get(`${process.env.REACT_APP_BASE_URL}/api/getuser`)\n        .then(res => {\n          return res.data.userdata;\n        });\n    },\n    getUserbyid: id => {\n      return axios\n        .get(`${process.env.REACT_APP_BASE_URL}/api/getuserbyid?id=${id}`)\n        .then(res => {\n          return res.data.userRecordData;\n        });\n    },\n    updateUser: data => {\n      return axios\n        .patch(\n          `${process.env.REACT_APP_BASE_URL}/api/updateuser?id=${data.id}`,\n          {\n            data\n          }\n        )\n        .then(res => {\n          return res.data.success;\n        });\n    }\n  },\n  material: {\n    addmaterialtype: data => {\n      return axios\n        .post(`${process.env.REACT_APP_BASE_URL}/materialtype/addmaterial`, {\n          data\n        })\n        .then(res => {\n          return res.data.materialdata;\n        });\n    },\n    getmaterialstype: data => {\n      return axios\n        .get(`${process.env.REACT_APP_BASE_URL}/materialtype/getmaterials`)\n        .then(res => {\n          return res.data.materiallist;\n        });\n    },\n    updatematerialtype: data => {\n      return axios\n        .patch(\n          `${process.env.REACT_APP_BASE_URL}/materialtype/updatematerialtype?id=${data.id}`,\n          {\n            data\n          }\n        )\n        .then(res => {\n          return res.data.success;\n        });\n    },\n    addmaterial: data => {\n      return axios\n        .post(`${process.env.REACT_APP_BASE_URL}/material/addmaterial`, {\n          data\n        })\n        .then(res => {\n          return res.data.materialdata;\n        });\n    },\n    getmaterial: () => {\n      return axios\n        .get(`${process.env.REACT_APP_BASE_URL}/material/getmaterials`)\n        .then(res => {\n          return res.data.materiallist;\n        });\n    },\n    updatematerial: data => {\n      return axios\n        .patch(\n          `${process.env.REACT_APP_BASE_URL}/material/updatematerial?id=${data.id}`,\n          {\n            data\n          }\n        )\n        .then(res => {\n          return res.data.success;\n        });\n    }\n  },\n  product: {\n    addproduct: data => {\n      return axios\n        .post(`${process.env.REACT_APP_BASE_URL}/product/addproduct`, {\n          data\n        })\n        .then(res => {\n          return res.data.materialdata;\n        });\n    },\n    getproducts: () => {\n      return axios\n        .get(`${process.env.REACT_APP_BASE_URL}/product/getproducts`)\n        .then(res => {\n          return res.data.productlist;\n        });\n    }\n  },\n  year: {\n    addyear: data => {\n      return axios\n        .post(`${process.env.REACT_APP_BASE_URL}/year/addyear`, {\n          data\n        })\n        .then(res => {\n          return res.data.success;\n        });\n    },\n    checkexists: () => {\n      return axios\n        .get(`${process.env.REACT_APP_BASE_URL}/year/getyear`)\n        .then(res => {\n          return res.data.year;\n        });\n    },\n    updateyear: data => {\n      return axios\n      .patch(\n        `${process.env.REACT_APP_BASE_URL}/year/updateyear?id=${data.updateid}`,\n        {\n          data\n        }\n      )\n      .then(res => {\n        return res.data.success;\n      })\n      .catch(err => {\n        return err.data.error;\n      });\n    }\n  }\n};\n","import axios from \"axios\";\nexport default (token = null) => {\n  if (token) {\n    axios.defaults.headers.common.authorization = `Bearer ${token}`;\n  } else {\n    delete axios.headers.common.authorization;\n  }\n};\n","export const USER_LOGGED_IN = 'USER_LOGGED_IN';\nexport const USER_LOGGED_OUT = 'USER_LOGGED_OUT';\nexport const USER_FETCHED = 'USER_FETCHED';\nexport const MATERIAL_OPTIONS = 'MATERIAL_OPTIONS';\nexport const MATERIAL_VALUES_FETCHED = 'MATERIAL_VALUES_FETCHED';\nexport const PRODUCT_VALUES_FETCHED = 'PRODUCT_VALUES_FETCHED';\nexport const MASTER_ITEM_TYPES = 'MASTER_ITEM_TYPES';\nexport const MASTER_ITEM_LIST = 'MASTER_ITEM_LIST';\nexport const SUPPLIER_CONTACT_LIST = 'SUPPLIER_CONTACT_LIST';\nexport const SUPPLIER_DETAIL_LIST = 'SUPPLIER_DETAIL_LIST';\nexport const UOM_LIST = 'UOM_LIST';\nexport const CURRENCY_LIST = 'CURRENCY_LIST';\nexport const Location_LIST = 'LOCATION_LIST';\nexport const PURCHASE_ORDER_LIST = 'PURCHASE_ORDER_LIST';\nexport const PO_RECEIPT_LIST = 'PO_RECEIPT_LIST';\nexport const ADD_CUSTOMER_CONTACT = 'ADD_CUSTOMER_CONTACT';\nexport const CUSTOMER_CONTACT_FETCHED = 'CUSTOMER_CONTACT_FETCHED';\nexport const CUSTOMERTRANSACTION_FETCHED = 'CUSTOMERTRANSACTION_FETCHED';\nexport const ADD_CUSTOMER_TRANSACTION = 'ADD_CUSTOMER_TRANSACTION';\n\nexport const QUOTATION_FETCHED = 'QUOTATION_FETCHED';\nexport const ADD_QUOTATION = 'ADD_QUOTATION';\n\nexport const INVOICE_FETCHED = 'INVOICE_FETCHED';\nexport const PROFORMAINVOICE_FETCHED = 'PROFORMAINVOICE_FETCHED';\nexport const ADD_PROFORMA_INVOICE = 'ADD_PROFORMA_INVOICE';\n\nexport const ADD_INVOICE = 'ADD_INVOICE';\n\nexport const CHALLAN_FETCHED = 'CHALLAN_FETCHED';\nexport const ADD_CHALLAN = 'ADD_CHALAN';\n\nexport const ORDER_FETCHED = 'ORDER_FETCHED';\nexport const ADD_ORDER = 'ADD_ORDER';\n\nexport const PRODUCTION_FETCHED = 'PRODUCTION_FETCHED';\nexport const ADD_PRODUCTION = 'ADD_PRODUCTION';\n\nexport const MOVEORDER_FETCHED = 'MOVEORDER_FETCHED';\nexport const ADD_MOVEORDER = 'ADD_MOVEORDER';\n","import { schema } from 'normalizr';\n\nexport const userSchema = new schema.Entity('users', {}, { idAttribute: 'id' });\n\nexport const uomListSchema = new schema.Entity(\n  'uomlistvalue',\n  {},\n  { idAttribute: 'id' }\n);\n\nexport const materialOptionSchema = new schema.Entity(\n  'materialoptions',\n  {},\n  { idAttribute: 'id' }\n);\n\nexport const materialListSchema = new schema.Entity(\n  'materialslistvalue',\n  {},\n  { idAttribute: 'id' }\n);\n\nexport const productListSchema = new schema.Entity(\n  'productlistvalues',\n  {},\n  { idAttribute: 'id' }\n);\n\nexport const masterItemTypeNameSchema = new schema.Entity(\n  'masteritemtypenamevalue',\n  {},\n  { idAttribute: 'id' }\n);\n\nexport const masterItemTypeListSchema = new schema.Entity(\n  'masteritemtypelistvalues',\n  {},\n  { idAttribute: 'id' }\n);\n\nexport const supplierContactListSchema = new schema.Entity(\n  'suppliercontactlistvalue',\n  {},\n  { idAttribute: 'id' }\n);\n\nexport const supplierDetailListSchema = new schema.Entity(\n  'supplierdetaillistvalue',\n  {},\n  { idAttribute: 'id' }\n);\n\nexport const currencyListSchema = new schema.Entity(\n  'currencylistvalue',\n  {},\n  { idAttribute: 'id' }\n);\nexport const locationListSchema = new schema.Entity(\n  'locationlistvalue',\n  {},\n  { idAttribute: 'id' }\n);\n\nexport const purchaseOrderListSchema = new schema.Entity(\n  'purchaseorderlistvalue',\n  {},\n  { idAttribute: 'id' }\n);\n\nexport const receiptListSchema = new schema.Entity(\n  'receiptlistvalues',\n  {},\n  { idAttribute: 'id' }\n);\n\nexport const customerListSchema = new schema.Entity(\n  'customerlistvalues',\n  {},\n  { idAttribute: 'id' }\n);\n\nexport const customerTransactionSchema = new schema.Entity(\n  'customertransationvalues',\n  {},\n  { idAttribute: 'customerid' }\n);\n\nexport const quotationListSchema = new schema.Entity(\n  'quotationlistvalues',\n  {},\n  { idAttribute: '_id' }\n);\n\nexport const invoiceListSchema = new schema.Entity(\n  'invoicelistvalues',\n  {},\n  { idAttribute: '_id' }\n);\n\nexport const proformainvoiceListSchema = new schema.Entity(\n  'proformainvoicelistvalues',\n  {},\n  { idAttribute: '_id' }\n);\n\nexport const challanListSchema = new schema.Entity(\n  'challanlistvalues',\n  {},\n  { idAttribute: '_id' }\n);\nexport const orderListSchema = new schema.Entity(\n  'orderlistvalues',\n  {},\n  { idAttribute: '_id' }\n);\nexport const productionListSchema = new schema.Entity(\n  'productionlistvalues',\n  {},\n  { idAttribute: '_id' }\n);\nexport const moveorderListSchema = new schema.Entity(\n  'moveorderlistvalues',\n  {},\n  { idAttribute: '_id' }\n);\n","import { normalize } from \"normalizr\";\nimport api from \"../Services/api\";\nimport setAuthorizationHeader from \"../utils/setAuthorizationHeader\";\nimport jwtDecode from \"jwt-decode\";\nimport {\n  USER_LOGGED_IN,\n  USER_LOGGED_OUT,\n  USER_FETCHED\n} from \"../Services/types\";\nimport { userSchema } from \"../Schemas/schemas\";\n\nexport const userLoggedIn = user => {\n  return {\n    type: USER_LOGGED_IN,\n    user: user\n  };\n};\n\nexport const userLoggedOut = () => {\n  return {\n    type: USER_LOGGED_OUT,\n    user: {}\n  };\n};\n\nexport const userFetched = userlist => {\n  return {\n    type: USER_FETCHED,\n    userlist\n  };\n};\n\nexport const userRegister = data => {\n  return dispatch => {\n    return api.user.userRegister(data);\n  };\n};\n\nexport const getUser = () => {\n  console.log(\"dispatch action calling\");\n  return dispatch => {\n    return api.user.getUser().then(userlist => {\n      const userlistvalue = userlist.userdata;\n      return dispatch(userFetched(normalize(userlistvalue, [userSchema])));\n    });\n  };\n};\n\nexport const updateUser = data => {\n  return dispatch => {\n    return api.user.updateUser(data);\n  };\n};\n\nexport const login = credentials => {\n  return dispatch => {\n    return api.user.login(credentials).then(user => {\n      localStorage.Mob_JWT = user.token;\n      setAuthorizationHeader(user.token);\n      var decoded = jwtDecode(localStorage.Mob_JWT);\n      console.log(\"Decoded \", decoded)\n      const userinfo = {\n        email: decoded.email,\n        role: decoded.role,\n        token: localStorage.Mob_JWT\n      };\n      dispatch(userLoggedIn(userinfo));\n    });\n  };\n};\n\nexport const logout = e => {\n  return dispatch => {\n    localStorage.removeItem(\"Mob_JWT\");\n    dispatch(userLoggedOut());\n  };\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { logout } from '../../actions/actions';\nimport logo from '../../Images/logo.png';\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem\n} from 'reactstrap';\nimport { withRouter } from 'react-router-dom';\n\nclass Header extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.toggle = this.toggle.bind(this);\n    this.state = {\n      isOpen: false,\n      isAuthenticated: this.props.isAuthenticated\n    };\n  }\n  toggle() {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  }\n\n  logout = () => {\n    this.props.logout();\n    window.location.reload();\n    this.props.history.push('/login');\n  };\n  render() {\n    return (\n      <div>\n        <Navbar  expand='md'>\n          <div className='container'>\n            <NavbarBrand tag={Link} to='/'>\n              <div>\n                <img src={logo} alt='scaffolding' style={{ width: '90px' }} />\n              </div>\n            </NavbarBrand>\n            <NavbarToggler onClick={this.toggle} />\n            <Collapse isOpen={this.state.isOpen} navbar>\n              <Nav className='ml-auto' navbar>\n                {!!(\n                  this.props.isAuthenticated && this.props.role == 'admin'\n                ) && (\n                  <NavItem>\n                    <NavLink tag={Link} to='/admin_dashboard'>\n                      <i className='fas fa-home fa-2x'></i>\n                    </NavLink>\n                  </NavItem>\n                )}\n                {!!(\n                  this.props.isAuthenticated && this.props.role == 'management' || this.props.role == 'itadmin'\n                ) && (\n                  <UncontrolledDropdown nav inNavbar>\n                    <DropdownToggle nav caret>\n                      Users\n                    </DropdownToggle>\n                    <DropdownMenu right>\n                      <DropdownItem tag={Link} to='/adduser'>\n                        Add User\n                      </DropdownItem>\n                      <DropdownItem tag={Link} to='/adminlist'>\n                        Registered user details\n                      </DropdownItem>\n                    </DropdownMenu>\n                  </UncontrolledDropdown>\n                )}\n                {/* {!!(this.props.isAuthenticated && this.props.role == \"admin\") &&\n              <UncontrolledDropdown nav inNavbar>\n                <DropdownToggle nav caret>\n                  Material & product\n                </DropdownToggle>\n                <DropdownMenu right>\n                  <DropdownItem tag={Link} to=\"/addmaterialtype\">\n                    Add MaterialTypes \n                  </DropdownItem>\n                  <DropdownItem tag={Link} to=\"/addmaterial\">\n                    Add Material \n                  </DropdownItem>\n                  <DropdownItem tag={Link} to=\"/addproduct\">\n                    Add Product \n                  </DropdownItem>\n                  <DropdownItem tag={Link} to=\"/viewproductlist\">\n                    View Product \n                  </DropdownItem>\n                  <DropdownItem tag={Link} to=\"/productbilling\">\n                    Product Billing \n                  </DropdownItem>  \n                </DropdownMenu>\n              </UncontrolledDropdown>\n              } */}\n                {this.props.isAuthenticated ? (\n                  <NavItem>\n                    <NavLink tag={Link} onClick={this.logout}>\n                      Logout\n                    </NavLink>\n                  </NavItem>\n                ) : (\n                  <NavItem>\n                    <NavLink tag={Link} to='/login'>\n                      Login\n                    </NavLink>\n                  </NavItem>\n                )}\n              </Nav>\n            </Collapse>\n          </div>\n        </Navbar>\n      </div>\n    );\n  }\n}\n\nHeader.propTypes = {\n  isAuthenticated: PropTypes.bool.isRequired,\n  role: PropTypes.string.isRequired,\n  logout: PropTypes.func.isRequired\n};\n\nfunction mapStateToProps(state) {\n  if (state && state.user) {\n    return {\n      isAuthenticated: !!state.user.token,\n      role: state.user.role\n    };\n  } else {\n    return {\n      isAuthenticated: false,\n      role: 'admin'\n    };\n  }\n}\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    { logout }\n  )(Header)\n);\n","import React from 'react';\nimport { AvForm, AvField, AvGroup } from 'availity-reactstrap-validation';\nimport { Button, Label, Alert } from 'reactstrap';\nimport { Card, CardBody, CardHeader, Row, Col } from 'reactstrap';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport PropTypes from 'prop-types';\n\nclass AddUserForm extends React.Component {\n  state = {\n    data: {\n      title: 'Mr',\n      firstname: '',\n      lastname: '',\n      email: '',\n      phone: '',\n      startdate: new Date(),\n      enddate: null,\n      username: 'nA',\n      password: '',\n      repassword: '',\n      active: '1',\n      persontype: 'admin',\n      department: '1',\n      job: '1',\n      location: '1'\n    },\n    errors: {},\n    loading: false,\n    success: false\n  };\n  onChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n  handleValidSubmit = () => {\n    console.log(this.state.data);\n    this.setState({ loading: true });\n    this.props\n      .submit(this.state.data)\n      .then(() => {\n        this.setState({ loading: false, errors: {}, success: true });\n        this.myFormRef.reset();\n      })\n      .catch(err => {\n        this.setState({ errors: err.response.data.errors, loading: false });\n      });\n  };\n  handleChangeStartDate = date => {\n    const selectedDate = new Date(date);\n    const formattedDate = `${selectedDate.getDate()}/${selectedDate.getMonth() +\n      1}/${selectedDate.getFullYear()}`;\n    console.log(formattedDate);\n    this.setState({\n      data: {\n        ...this.state.data,\n        startdate: date\n      }\n    });\n  };\n\n  handleChangeEndDate = date => {\n    this.setState({\n      data: {\n        ...this.state.data,\n        enddate: date\n      }\n    });\n  };\n\n  handleInvalidSubmit = () => {\n    console.log('invalid submit');\n  };\n  render() {\n    const { data, errors, loading, success } = this.state;\n    return (\n      <div className='container'>\n        <div>\n          {!!success ? <Alert color='info'>user is added</Alert> : null}\n          {!!errors.email ? <Alert color='danger'>{errors.email}</Alert> : null}\n          {!!errors.username ? (\n            <Alert color='danger'>{errors.username}</Alert>\n          ) : null}\n        </div>\n        <AvForm\n          onValidSubmit={this.handleValidSubmit}\n          onInvalidSubmit={this.handleInvalidSubmit}\n          ref={el => (this.myFormRef = el)}\n        >\n          <Card>\n            <CardHeader>Personal Details</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={6}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='title'>Title</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      type='select'\n                      name='title'\n                      onChange={this.onChange}\n                    >\n                      <option value='mr'>Mr</option>\n                      <option value='ms'>Ms</option>\n                    </AvField>\n                  </AvGroup>\n                  <AvGroup>\n                    <Label className='small-font-size' for='firstname'>First Name</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      name='firstname'\n                      type='text'\n                      id='firstname'\n                      value={data.firstname}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter firstname'\n                        },\n                        pattern: {\n                          value: '^[a-zA-Z]',\n                          errorMessage: 'Please enter valid name'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                  <AvGroup>\n                    <Label className='small-font-size' for='lastname'>Last Name</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      name='lastname'\n                      type='text'\n                      id='lastname'\n                      value={data.lastname}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter lastname'\n                        },\n                        pattern: {\n                          value: '^[a-zA-Z]',\n                          errorMessage: 'Please enter valid name'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                  <AvGroup>\n                    <Label className='small-font-size' for='persontype'>Role</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      type='select'\n                      name='persontype'\n                      id='persontype'\n                      onChange={this.onChange}\n                      required={true}\n                      value={data.persontype}\n                    >\n                      <option value='finance'>Finance</option>\n                      <option value='sales'>Sales</option>\n                      <option value='purchase'>Purchase</option>\n                      <option value='stores'>Stores</option>\n                      <option value='production'>Production</option>\n                      <option value='management'>Management</option>\n                      <option value='itadmin'>IT Admin</option>\n                    </AvField>\n                  </AvGroup>\n                  <AvGroup>\n                    <Label className='small-font-size' for='password'>Password</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      name='password'\n                      type='password'\n                      id='password'\n                      value={data.password}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter a password'\n                        }\n                       \n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={6}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='Email'>Email</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      name='email'\n                      id='Email'\n                      type='email'\n                      value={data.email}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter a Email'\n                        },\n                        pattern: {\n                          value:\n                            \"^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$\",\n                          errorMessage: 'Please enter valid Email'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                  <AvGroup>\n                    <Label className='small-font-size' for='phone'>Phone</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      type='text'\n                      name='phone'\n                      id='phone'\n                      value={data.phone}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter your phone number'\n                        },\n                        pattern: {\n                          value: '^[0-9]+$',\n                          errorMessage:\n                            'Your phone number must be composed only with numbers'\n                        },\n                        minLength: {\n                          value: 10,\n                          errorMessage:\n                            'Your phone number must be between 10 and 12 numbers'\n                        },\n                        maxLength: {\n                          value: 12,\n                          errorMessage:\n                            'Your phone number be between 10 and 12 numbers'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                  <div className='form-group'>\n                    <Label className='small-font-size' for='startdate'>Start Date</Label>\n                    <span className='required-label'>*</span>\n                    <div>\n                      <DatePicker\n                        selected={data.startdate}\n                        onChange={this.handleChangeStartDate}\n                        className='form-control'\n                        autoComplete=\"new-password\"\n                        minDate={new Date()}\n                        dateFormat='dd/MM/yyyy'\n                        maxDate={new Date()}\n                        id='startdate'\n                      />\n                    </div>\n                  </div>\n                  <div className='form-group'>\n                    <Label className='small-font-size' for='enddate'>End Date</Label>\n                    <div>\n                      <DatePicker\n                        minDate={new Date()}\n                        dateFormat='dd/MM/yyyy'\n                        autoComplete=\"new-password\"\n                        selected={data.enddate}\n                        onChange={this.handleChangeEndDate}\n                        className='form-control'\n                        id='enddate'\n                      />\n                    </div>\n                  </div>\n                  <AvGroup>\n                    <Label className='small-font-size' for='password'>Re Password</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      name='repassword'\n                      type='password'\n                      id='re-password'\n                      value={data.repassword}\n                      onChange={this.onChange}\n                      validate={{\n                        match: { value: 'password' },\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter a password'\n                        }\n                      \n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n              </Row>\n            </CardBody>\n          </Card>\n          {/* <Card className=\"mg-20\">\n            <CardHeader>Employee Details</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={6}>\n                  <AvGroup>\n                    <Label for=\"persontype\">Person Type</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      type=\"select\"\n                      name=\"persontype\"\n                      id=\"persontype\"\n                      onChange={this.onChange}\n                      required={true}\n                      value={data.persontype}\n                    >\n                      <option value=\"admin\">Admin</option>\n                      <option value=\"employee\">Employee</option>\n                    </AvField>\n                  </AvGroup>\n                  <AvGroup>\n                    <Label for=\"department\">Department</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      type=\"select\"\n                      name=\"department\"\n                      onChange={this.onChange}\n                      required={true}\n                      value={data.department}\n                    >\n                      <option value=\"1\">1</option>\n                      <option value=\"2\">2</option>\n                    </AvField>\n                  </AvGroup>\n                </Col>\n                <Col sm={6}>\n                  <AvGroup>\n                    <Label for=\"job\">Job</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      type=\"select\"\n                      name=\"job\"\n                      onChange={this.onChange}\n                      required={true}\n                      value={data.job}\n                    >\n                      <option value=\"1\">1</option>\n                      <option value=\"2\">2</option>\n                    </AvField>\n                  </AvGroup>\n                  <AvGroup>\n                    <Label for=\"location\">Location</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      type=\"select\"\n                      name=\"location\"\n                      onChange={this.onChange}\n                      required={true}\n                      value={data.location}\n                    >\n                      <option value=\"1\">1</option>\n                      <option value=\"2\">2</option>\n                    </AvField>\n                  </AvGroup>\n                </Col>\n              </Row>\n            </CardBody>\n          </Card> */}\n          <div className='mg-20'>\n            <Button color='primary' disabled={loading} className='lgn-loader'>\n              Submit\n              {loading}\n            </Button>\n          </div>\n        </AvForm>\n      </div>\n    );\n  }\n}\n\nAddUserForm.propTypes = {\n  submit: PropTypes.func.isRequired\n};\n\nexport default AddUserForm;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { userRegister } from \"../../actions/actions\";\nimport AddUserForm from \"./AddUserForm/AddUserForm\";\n\nclass AddUser extends React.Component {\n  submit = data => this.props.userRegister(data);\n\n  render() {\n    return (\n      <div className=\"container mg-20\">\n        <AddUserForm submit={this.submit} />\n      </div>\n    );\n  }\n}\n\nAddUser.propTypes = {\n  userRegister: PropTypes.func.isRequired\n};\nexport default connect(\n  null,\n  { userRegister }\n)(AddUser);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { AvForm, AvField, AvGroup } from 'availity-reactstrap-validation';\nimport { Button, Label, Alert } from 'reactstrap';\nimport { Card, CardBody, CardHeader, Row, Col } from 'reactstrap';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport PropTypes from 'prop-types';\n\nclass UpdateUserForm extends React.Component {\n  state = {\n    data: {\n      id: '',\n      title: '',\n      firstname: this.props.firstname,\n      lastname: '',\n      email: '',\n      phone: '',\n      startdate: new Date(),\n      enddate: '',\n      username: '',\n      password: '',\n      repassword: '',\n      active: '',\n      persontype: '',\n      department: '',\n      job: '',\n      location: ''\n    },\n    errors: {},\n    loading: false,\n    success: false,\n    count: ''\n  };\n  onChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  componentWillReceiveProps(props) {\n    const userRecord = props.userRecord;\n    const userRecordModified = userRecord;\n    userRecordModified.startdate = new Date(userRecord.startdate);\n    // userRecordModified.enddate = new Date(userRecord.enddate);\n    userRecordModified.enddate =\n      userRecord.enddate === null ? null : new Date(userRecord.enddate);\n    this.setState({ ...this.state.data, data: userRecordModified });\n  }\n  handleValidSubmit = () => {\n    console.log(this.state.data);\n    this.setState({ loading: true });\n    this.props\n      .submit(this.state.data)\n      .then(data => {\n        console.log('updateuserform page');\n        console.log(data);\n        this.setState({ loading: false, errors: {}, success: true });\n      })\n      .catch(err => {\n        this.setState({ errors: err.response.data.errors, loading: false });\n      });\n  };\n  handleChangeStartDate = date => {\n    const selectedDate = new Date(date);\n    const formattedDate = `${selectedDate.getDate()}/${selectedDate.getMonth() +\n      1}/${selectedDate.getFullYear()}`;\n    console.log(formattedDate);\n    this.setState({\n      data: {\n        ...this.state.data,\n        startdate: date\n      }\n    });\n  };\n\n  handleChangeEndDate = date => {\n    this.setState({\n      data: {\n        ...this.state.data,\n        enddate: date\n      }\n    });\n  };\n\n  handleInvalidSubmit = () => {\n    console.log('invalid submit');\n  };\n  render() {\n    const { data, errors, loading, success } = this.state;\n    return (\n      <div className='container'>\n        <div>\n          {!!success ? (\n            <Alert color='info'>User details is updated successfully</Alert>\n          ) : null}\n          {!!errors.email ? <Alert color='danger'>{errors.email}</Alert> : null}\n          {!!errors.username ? (\n            <Alert color='danger'>{errors.username}</Alert>\n          ) : null}\n        </div>\n        <AvForm\n          onValidSubmit={this.handleValidSubmit}\n          onInvalidSubmit={this.handleInvalidSubmit}\n          ref={el => (this.myFormRef = el)}\n        >\n          <Card>\n            <CardHeader>Personal Details</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={6}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='title'>Title</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      type='select'\n                      name='title'\n                      onChange={this.onChange}\n                      value={data.title}\n                    >\n                      <option value='mr'>Mr</option>\n                      <option value='ms'>Ms</option>\n                    </AvField>\n                  </AvGroup>\n                  <AvGroup>\n                    <Label className='small-font-size' for='firstname'>First Name</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      name='firstname'\n                      type='text'\n                      id='firstname'\n                      value={data.firstname}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter firstname'\n                        },\n                        pattern: {\n                          value: '^[a-zA-Z]',\n                          errorMessage: 'Please enter valid name'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                  <AvGroup>\n                    <Label className='small-font-size' for='lastname'>Last Name</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      name='lastname'\n                      type='text'\n                      id='lastname'\n                      value={data.lastname}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter lastname'\n                        },\n            \n                        pattern: {\n                          value: '^[a-zA-Z]',\n                          errorMessage: 'Please enter valid name'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                  <div className='form-group'>\n                    <Label className='small-font-size' for='startdate'>Start Date</Label>\n                    <span className='required-label'>*</span>\n                    <div>\n                      <DatePicker\n                        selected={data.startdate}\n                        onChange={this.handleChangeStartDate}\n                        className='form-control'\n                        autoComplete=\"new-password\"\n                        minDate={new Date()}\n                        dateFormat='dd/MM/yyyy'\n                        maxDate={new Date()}\n                        disabled={true}\n                        id='startdate'\n                      />\n                    </div>\n                  </div>\n                </Col>\n                <Col sm={6}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='Email'>Email</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      name='email'\n                      id='Email'\n                      type='email'\n                      value={data.email}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter a Email'\n                        },\n                        pattern: {\n                          value:\n                            \"^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$\",\n                          errorMessage: 'Please enter valid Email'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                  <AvGroup>\n                    <Label className='small-font-size' for='phone'>Phone</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      type='text'\n                      name='phone'\n                      id='phone'\n                      value={data.phone}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter your phone number'\n                        },\n                        pattern: {\n                          value: '^[0-9]+$',\n                          errorMessage:\n                            'Your phone number must be composed only with numbers'\n                        },\n                        minLength: {\n                          value: 10,\n                          errorMessage:\n                            'Your phone number must be between 10 and 12 numbers'\n                        },\n                        maxLength: {\n                          value: 12,\n                          errorMessage:\n                            'Your phone number be between 10 and 12 numbers'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                  <AvGroup>\n                    <Label className='small-font-size' for='persontype'>Role</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      type='select'\n                      name='persontype'\n                      id='persontype'\n                      onChange={this.onChange}\n                      required={true}\n                      value={data.persontype}\n                    >\n                      <option value='finance'>Finance</option>\n                      <option value='sales'>Sales</option>\n                      <option value='purchase'>Purchase</option>\n                      <option value='stores'>Stores</option>\n                      <option value='production'>Production</option>\n                      <option value='management'>Management</option>\n                      <option value='itadmin'>IT Admin</option>\n                    </AvField>\n                  </AvGroup>\n                  <div className='form-group'>\n                    <Label className='small-font-size' for='enddate'>End Date</Label>\n                    <div>\n                      <DatePicker\n                        minDate={new Date()}\n                        dateFormat='dd/MM/yyyy'\n                        autoComplete=\"new-password\"\n                        selected={data.enddate}\n                        onChange={this.handleChangeEndDate}\n                        className='form-control'\n                        id='enddate'\n                      />\n                    </div>\n                  </div>\n                </Col>\n              </Row>\n            </CardBody>\n          </Card>\n          {/* <Card className=\"mg-20\">\n            <CardHeader>Employee Details</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={6}>\n                  <AvGroup>\n                    <Label for=\"persontype\">Person Type</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      type=\"select\"\n                      name=\"persontype\"\n                      id=\"persontype\"\n                      onChange={this.onChange}\n                      value={data.persontype}\n                    >\n                      <option value=\"admin\">Admin</option>\n                      <option value=\"employee\">Employee</option>\n                    </AvField>\n                  </AvGroup>\n                  <AvGroup>\n                    <Label for=\"department\">Department</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      type=\"select\"\n                      name=\"department\"\n                      onChange={this.onChange}\n                      value={data.department}\n                    >\n                      <option value=\"1\">1</option>\n                      <option value=\"2\">2</option>\n                    </AvField>\n                  </AvGroup>\n                </Col>\n                <Col sm={6}>\n                  <AvGroup>\n                    <Label for=\"job\">Job</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      type=\"select\"\n                      name=\"job\"\n                      onChange={this.onChange}\n                      value={data.job}\n                    >\n                      <option value=\"1\">1</option>\n                      <option value=\"2\">2</option>\n                    </AvField>\n                  </AvGroup>\n                  <AvGroup>\n                    <Label for=\"location\">Location</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      type=\"select\"\n                      name=\"location\"\n                      onChange={this.onChange}\n                      value={data.location}\n                    >\n                      <option value=\"1\">1</option>\n                      <option value=\"2\">2</option>\n                    </AvField>\n                  </AvGroup>\n                </Col>\n              </Row>\n            </CardBody>\n          </Card> */}\n          <div className='mg-20'>\n            <Button color='primary' disabled={loading} className='lgn-loader'>\n              Update\n              {/* {loading} */}\n            </Button>\n          </div>\n        </AvForm>\n      </div>\n    );\n  }\n}\nUpdateUserForm.propTypes = {\n  submit: PropTypes.func.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    userlist: state.userlist\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  {}\n)(UpdateUserForm);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport UpdateUserForm from \"./AddUserForm/UpdateUserForm\";\n// import api from \"../api\";\nimport { updateUser } from \"../../actions/actions\";\n\nclass UpdateUser extends React.Component {\n  state = {\n    userRecord: \"\"\n  };\n\n  componentDidMount() {\n    const userid = this.props.match.params.id;\n    const userRecord = this.props.userlist[userid];\n    this.setState({ userRecord });\n    // api.user.getUserbyid(userid)\n    // .then((userRecord)=>{\n    //     this.setState({userRecord});\n    // })\n    // .catch((err)=>{\n    //     console.log(\"updateuserfile err\");\n    //     console.log(err);\n    // });\n  }\n\n  submit = data => this.props.updateUser(data);\n\n  render() {\n    const { userRecord, userid } = this.state;\n    return (\n      <div className=\"container mg-20\">\n        <UpdateUserForm userRecord={userRecord} submit={this.submit} />\n      </div>\n    );\n  }\n}\n\nUpdateUser.propTypes = {\n  userlist: PropTypes.object.isRequired,\n  submit: PropTypes.func.isRequired,\n  userRecord: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    firstname: PropTypes.string.isRequired,\n    lastname: PropTypes.string.isRequired,\n    email: PropTypes.string.isRequired,\n    phone: PropTypes.string.isRequired,\n    startdate: PropTypes.string.isRequired,\n    enddate: PropTypes.string.isRequired,\n    username: PropTypes.string.isRequired,\n    persontype: PropTypes.string.isRequired,\n    active: PropTypes.string.isRequired,\n    department: PropTypes.string.isRequired,\n    job: PropTypes.string.isRequired,\n    location: PropTypes.string.isRequired\n  }).isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    userlist: state.userlist\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { updateUser }\n)(UpdateUser);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nclass AdminDashboard extends React.Component {\n  render() {\n    return (\n      <div className=\"container mg-20\">\n        <div className=\"admin-dashboard-icons\">\n          <ul className=\"clearfix\">\n            <li className=\"bg-colo-lg-red\">\n              <div className=\"icon-eleme\">\n                <Link to=\"/inventory_page\">\n                  <i className=\"fas fa-dolly-flatbed fa-3x\"></i>\n                  <div style={{ paddingTop: \"5px\" }}>\n                    <span>Setup</span>\n                  </div>\n                </Link>\n              </div>\n            </li>\n            <li className=\"bg-color-lg-blue\">\n              <div className=\"icon-eleme\">\n                <Link to=\"/transaction_page\">\n                  <i className=\"fas fa-cubes fa-3x\"></i>\n                  <div style={{ paddingTop: \"5px\" }}>\n                    <span>Transactions</span>\n                  </div>\n                </Link>\n              </div>\n            </li>\n\n            {/* <li className=\"bg-color-lg-pk\">\n              <div className=\"icon-eleme\">\n                <Link to=\"/\">\n                  <i className=\"fas fa-user fa-3x\"></i>\n                </Link>\n              </div>\n            </li>\n            <li className=\"bg-color-lg-org\">\n              <div className=\"icon-eleme\">\n                <Link to=\"/\">\n                  <i className=\"fas fa-users-cog fa-3x\"></i>\n                </Link>\n              </div>\n            </li> */}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AdminDashboard;\n","import { normalize } from \"normalizr\";\nimport api from \"../Services/api\";\nimport {\n  MATERIAL_OPTIONS,\n  MATERIAL_VALUES_FETCHED,\n  PRODUCT_VALUES_FETCHED\n} from \"../Services/types\";\nimport {\n  materialOptionSchema,\n  materialListSchema,\n  productListSchema\n} from \"../Schemas/schemas\";\n\nexport const productvalueFetched = productlistvalues => {\n  return {\n    type: PRODUCT_VALUES_FETCHED,\n    productlistvalues\n  };\n};\nexport const materialoptionFetched = materialoption => {\n  return {\n    type: MATERIAL_OPTIONS,\n    materialoption\n  };\n};\n\nexport const materialsFetched = materialsvalues => {\n  return {\n    type: MATERIAL_VALUES_FETCHED,\n    materialsvalues\n  };\n};\n\nexport const addproduct = data => {\n  return dispatch => {\n    return api.product.addproduct(data);\n  };\n};\n\nexport const getproducts = data => {\n  return dispatch => {\n    return api.product.getproducts(data).then(data => {\n      const productlistvalues = data.productdata;\n      return dispatch(\n        productvalueFetched(normalize(productlistvalues, [productListSchema]))\n      );\n    });\n  };\n};\n\nexport const addMaterialTypes = data => {\n  return dispatch => {\n    return api.material.addmaterialtype(data);\n  };\n};\n\nexport const updateMaterialType = data => {\n  return dispatch => {\n    return api.material.updatematerialtype(data);\n  };\n};\n\nexport const getMaterialsTypes = () => {\n  return dispatch => {\n    return api.material.getmaterialstype().then(materiallist => {\n      const materialsvalue = materiallist.materialsdata;\n      return dispatch(\n        materialoptionFetched(normalize(materialsvalue, [materialOptionSchema]))\n      );\n    });\n  };\n};\n\nexport const addMaterial = data => {\n  return dispatch => {\n    return api.material.addmaterial(data);\n  };\n};\n\nexport const getMaterial = () => {\n  return dispatch => {\n    return api.material.getmaterial().then(materiallist => {\n      const materialslistvalue = materiallist.materialsdata;\n      return dispatch(\n        materialsFetched(normalize(materialslistvalue, [materialListSchema]))\n      );\n    });\n  };\n};\n\nexport const updatematerialdetails = data => {\n  return dispatch => {\n    return api.material.updatematerial(data);\n  };\n};\n","import axios from \"axios\";\n\nexport default {\n  uom: {\n    getUomDetails: () => {\n      return axios\n        .get(`${process.env.REACT_APP_BASE_URL}/unitofmeasure/getuom`)\n        .then(res => {\n          return res.data.uomlist;\n        });\n    }\n  },\n  transaction: {\n    addMasterItemType: data => {\n      return axios\n        .post(\n          `${process.env.REACT_APP_BASE_URL}/transaction/addmasteritemtype`,\n          {\n            data\n          }\n        )\n        .then(res => {\n          return res.data.masterItemType;\n        });\n    },\n    getMasterItemType: () => {\n      return axios\n        .get(`${process.env.REACT_APP_BASE_URL}/transaction/getmasteritemtype`)\n        .then(res => {\n          return res.data.masteritemtypes;\n        });\n    },\n    updateMasterItemType: data => {\n      return axios\n        .patch(\n          `${process.env.REACT_APP_BASE_URL}/transaction/updatemasteritemtype?id=${data.id}`,\n          {\n            data\n          }\n        )\n        .then(res => {\n          return res.data.success;\n        });\n    }\n  },\n  transactionMasterItemList: {\n    addMasterItemList: data => {\n      return axios({\n        url: `${process.env.REACT_APP_BASE_URL}/transaction/masterItemList/addmasteritemlist`,\n        method: \"POST\",\n        data: data,\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      }).then(res => {\n        return res.data.masterItemList;\n      });\n    },\n    getMasterItemList: () => {\n      return axios\n        .get(\n          `${process.env.REACT_APP_BASE_URL}/transaction/masterItemList/getmasteritemlist`\n        )\n        .then(res => {\n          return res.data.masteritemlist;\n        });\n    },\n    updatemasteritemlist: data => {\n      return axios({\n        url: `${process.env.REACT_APP_BASE_URL}/transaction/masterItemList/updatemasteritemlist?id=${data.id}`,\n        method: \"PATCH\",\n        data,\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      }).then(res => {\n        return res.data.masterItemList;\n      });\n    }\n  },\n  purchaseorder: {\n    addPurchaseOrder: data => {\n      return axios\n        .post(\n          `${process.env.REACT_APP_BASE_URL}/purchaseorder/addpurchaseorder`,\n          {\n            data\n          }\n        )\n        .then(res => {\n          return res.data.purchaseorderlist;\n        });\n    },\n    updatePurchaseOrder: data =>{\n      console.log(data)\n      return axios\n      .post(\n        `${process.env.REACT_APP_BASE_URL}/purchaseorder/updatepo`,\n        {\n          data\n        }\n      )\n      .then(res => {\n        return res;\n      });\n    },\n    getPurchaseOrderList: () => {\n      return axios\n        .get(\n          `${process.env.REACT_APP_BASE_URL}/purchaseorder/getpurchaseorderrlist`\n        )\n        .then(res => {\n          return res.data.purchaseorderlist;\n        });\n    },\n    searchponumber: data => {\n      return axios\n        .get(\n          `${process.env.REACT_APP_BASE_URL}/purchaseorder/searchpurchaseorderrlist/?q=${data.ponumber}`\n        )\n        .then(res => {\n          return res.data.purchaseordervalue;\n        });\n    }\n  },\n  addorupdateitemsinlocation: {\n    addorupdateitemsinlocation: data => {\n      return axios\n        .post(\n          `${process.env.REACT_APP_BASE_URL}/addorupdateitemsinlocation/addorupdateitems`,\n          {\n            data\n          }\n        )\n        .then(res => {\n          return res.data.success;\n        });\n    },\n    additemsinlocation: data => {\n      return axios\n        .post(\n          `${process.env.REACT_APP_BASE_URL}/addorupdateitemsinlocation/additems`,\n          {\n            data\n          }\n        )\n        .then(res => {\n          return res.data.success;\n        });\n    },\n    getitemlistavaliable: data => {\n      return axios\n        .get(\n          `${process.env.REACT_APP_BASE_URL}/addorupdateitemsinlocation/getitemlistavaliable/?locationid=${data.locationid}&itemid=${data.itemid}`\n        )\n        .then(res => {\n          return res.data.totalitemlistvalues;\n        });\n    }\n  },\n  receipt: {\n    getReceiptList: data => {\n      return axios\n        .get(\n          `${process.env.REACT_APP_BASE_URL}/receiptinfo/getreceiptinfolist/?q=${data.ponumber}`\n        )\n        .then(res => {\n          return res.data.receiptlist;\n        });\n    }\n  }\n};\n","import { normalize } from \"normalizr\";\nimport api from \"../Services/transactionapi\";\nimport {\n  MASTER_ITEM_TYPES,\n  MASTER_ITEM_LIST,\n  PURCHASE_ORDER_LIST,\n  PO_RECEIPT_LIST\n} from \"../Services/types\";\nimport {\n  masterItemTypeNameSchema,\n  masterItemTypeListSchema,\n  purchaseOrderListSchema,\n  receiptListSchema\n} from \"../Schemas/schemas\";\n\nexport const masterItemTypeNameFetched = MasterItemTypeName => {\n  return {\n    type: MASTER_ITEM_TYPES,\n    MasterItemTypeName\n  };\n};\n\nexport const masterItemTypeListFetched = MasterItemTypeList => {\n  return {\n    type: MASTER_ITEM_LIST,\n    MasterItemTypeList\n  };\n};\n\nexport const purchaseOrderListFetched = purchaseorderlistvalues => {\n  return {\n    type: PURCHASE_ORDER_LIST,\n    purchaseorderlistvalues\n  };\n};\n\nexport const ReceiptListFetched = receiptlistvalues => {\n  return {\n    type: PO_RECEIPT_LIST,\n    receiptlistvalues\n  };\n};\nexport const addMasterItemType = data => {\n  return dispatch => {\n    return api.transaction.addMasterItemType(data);\n  };\n};\n\nexport const updateMasterItemTypes = data => {\n  return dispatch => {\n    return api.transaction.updateMasterItemType(data);\n  };\n};\n\nexport const updatemasteritemlist = data => {\n  return dispatch => {\n    return api.transactionMasterItemList.updatemasteritemlist(data);\n  };\n};\nexport const getMasterItemTypes = () => {\n  return dispatch => {\n    return api.transaction.getMasterItemType().then(masteritemtypes => {\n      const masteritemtypenamevalue = masteritemtypes.masteritemtypenamedata;\n      return dispatch(\n        masterItemTypeNameFetched(\n          normalize(masteritemtypenamevalue, [masterItemTypeNameSchema])\n        )\n      );\n    });\n  };\n};\n\nexport const addMasterItemList = data => {\n  return dispatch => {\n    return api.transactionMasterItemList.addMasterItemList(data);\n  };\n};\n\nexport const getMasterItemList = () => {\n  return dispatch => {\n    return api.transactionMasterItemList\n      .getMasterItemList()\n      .then(masteritemlist => {\n        const masteritemtypelistvalues = masteritemlist.masteritemtypelistdata;\n        return dispatch(\n          masterItemTypeListFetched(\n            normalize(masteritemtypelistvalues, [masterItemTypeListSchema])\n          )\n        );\n      });\n  };\n};\n\nexport const addPurchaseOrder = data => {\n  return dispatch => {\n    return api.purchaseorder.addPurchaseOrder(data);\n  };\n};\n\n\nexport const updatePurchaseOrder = data => {\n  return dispatch => {\n    return api.purchaseorder.updatePurchaseOrder(data);\n  };\n};\n\nexport const getPurchaseOrder = data => {\n  return dispatch => {\n    return api.purchaseorder.getPurchaseOrderList().then(purchaseorderlist => {\n      const purchaseorderlistvalues = purchaseorderlist.purchaseorderlistdata;\n      return dispatch(\n        purchaseOrderListFetched(\n          normalize(purchaseorderlistvalues, [purchaseOrderListSchema])\n        )\n      );\n    });\n  };\n};\n\nexport const searchPoNumber = data => {\n  return dispatch => {\n    return api.purchaseorder.searchponumber(data);\n  };\n};\n\nexport const addorupdateitemsinlocation = data => {\n  return dispatch => {\n    return api.addorupdateitemsinlocation.addorupdateitemsinlocation(data);\n  };\n};\n\nexport const additemsinlocation = data => {\n  return dispatch => {\n    return api.addorupdateitemsinlocation.additemsinlocation(data);\n  };\n};\n\nexport const getReceiptlist = data => {\n  return dispatch => {\n    return api.receipt.getReceiptList(data);\n    // .then(receiptlist => {\n    //   if (receiptlist.count > 0) {\n    //     const receiptlistvalues = receiptlist.receiptlist;\n    //     return dispatch(\n    //       ReceiptListFetched(normalize(receiptlistvalues, [receiptListSchema]))\n    //     );\n    //   }\n    //   return receiptlist;\n    // });\n  };\n};\nexport const totalitemvaluesearch = data => {\n  return dispatch => {\n    return api.addorupdateitemsinlocation.getitemlistavaliable(data);\n  };\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport {\n  Button,\n  Label,\n  Alert,\n  Card,\n  CardBody,\n  CardHeader,\n  Row,\n  Col\n} from \"reactstrap\";\n\nclass ProductBilling extends React.Component {\n  state = {\n    data: {\n      product: \"\",\n      profit: \"\",\n      qty: \"\",\n      labourcost: \"\"\n    },\n    productlistvalues: [],\n    errors: {},\n    materiallistvalues: {},\n    loading: false,\n    success: false\n  };\n\n  componentDidMount() {\n    const productlistvalues = Object.values(this.props.productlistvalues);\n    this.setState({ ...this.state, productlistvalues });\n  }\n\n  componentWillReceiveProps(props) {\n    const productlistvalues = Object.values(props.productlistvalues);\n    const materiallistvalues = props.materiallistvalues;\n    this.setState({ ...this.state, productlistvalues, materiallistvalues });\n  }\n\n  createSelectItems = () => {\n    let items = [];\n    const productlistvalues = this.state.productlistvalues;\n    const materiallistvalues = this.state.materiallistvalues;\n    productlistvalues\n      .map((option, i) => option)\n      .filter((option, i) => {\n        if (materiallistvalues[option.productname._id]) {\n          items.push(\n            <option key={i} value={option.id}>\n              {materiallistvalues[option.productname._id].masteritemdescription}\n            </option>\n          );\n        }\n      });\n    return items;\n  };\n\n  onChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  handleValidSubmit = () => {\n    this.setState({ loading: true });\n    const data = this.props.submit(this.state.data);\n    console.log(data);\n    if (data) {\n      this.setState({ loading: false, errors: {}, success: true });\n    }\n  };\n\n  render() {\n    const { data, errors, loading, success } = this.state;\n    return (\n      <div>\n        <AvForm\n          onValidSubmit={this.handleValidSubmit}\n          onInvalidSubmit={this.handleInvalidSubmit}\n          ref={el => (this.myFormRef = el)}\n        >\n          <Card>\n            <CardHeader>Product Billing</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={6}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"product\">Product Id</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      type=\"select\"\n                      name=\"product\"\n                      onChange={this.onChange}\n                      required={true}\n                    >\n                      <option value=\"\">Please select value</option>\n                      {this.createSelectItems()}\n                    </AvField>\n                  </AvGroup>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"profit\">Profit %</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      name=\"profit\"\n                      type=\"text\"\n                      id=\"profit\"\n                      value={data.profit}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: \"Please enter profit value\"\n                        },\n                        minLength: {\n                          value: 1,\n                          errorMessage:\n                            \"profit value should contain atleast 1 charcter\"\n                        },\n                        pattern: {\n                          value: \"^[0-9]\",\n                          errorMessage: \"Please enter valid number\"\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={6}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"qty\">Quantity</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      name=\"qty\"\n                      type=\"text\"\n                      id=\"qty\"\n                      value={data.qty}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: \"Please enter product quantity value\"\n                        },\n                        minLength: {\n                          value: 1,\n                          errorMessage:\n                            \"quantity value should contain atleast 1 charcter\"\n                        },\n                        pattern: {\n                          value: \"^[0-9]\",\n                          errorMessage: \"Please enter valid number\"\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"labourcost\">Labour Cost</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      name=\"labourcost\"\n                      type=\"text\"\n                      id=\"labourcost\"\n                      value={data.labourcost}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: \"Please enter labour cost value\"\n                        },\n                        minLength: {\n                          value: 1,\n                          errorMessage:\n                            \"labour cost value should contain atleast 1 charcter\"\n                        },\n                        pattern: {\n                          value: \"^[0-9]\",\n                          errorMessage: \"Please enter valid number\"\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n              </Row>\n            </CardBody>\n          </Card>\n          <div className=\"mg-20\" style={{'textAlign':'center'}}>\n            <Button color=\"primary\" disabled={loading} className=\"lgn-loader\">\n              Submit\n              {/* {loading} */}\n            </Button>\n          </div>\n        </AvForm>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    productlistvalues: state.productlistvalues,\n    materiallistvalues: state.masteritemlistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  null\n)(ProductBilling);\n","import React from \"react\";\n\nclass BillingTable extends React.Component {\n  render() {\n    const {\n      selectedProduct,\n      productformvalues,\n      materiallistvalues\n    } = this.props;\n    const materialTotalCost =\n      selectedProduct.productMaterial\n        .map((productMaterialData, i) => {\n          return (\n            parseFloat(productMaterialData.productqty) *\n            // parseFloat(productMaterialData.product_id.materialrate) *\n            parseFloat(productMaterialData.product_id.masteritemcostperunit)\n          );\n        })\n        .reduce((a, b) => a + b, 0) * parseFloat(productformvalues.qty);\n    const subTotal =\n      materialTotalCost + parseFloat(productformvalues.labourcost);\n    const profit = (parseFloat(productformvalues.profit) / 100) * subTotal;\n    const grandTotal = subTotal + profit;\n    return (\n      <div>\n        <table className=\"table table-bordered\">\n          <thead>\n            <tr>\n              <th>Product Name</th>\n              <th colSpan=\"4\">\n                {\n                  materiallistvalues[selectedProduct.productname._id]\n                    .masteritemdescription\n                }\n              </th>\n            </tr>\n            <tr>\n              <th>Item Name</th>\n              <th>UOM</th>\n              <th>Unit per Cost</th>\n              <th>Item Qty</th>\n              <th>Total Cost</th>\n            </tr>\n          </thead>\n          <tbody>\n            {selectedProduct.productMaterial.map((productMaterialData, i) => {\n              return (\n                <tr>\n                  <td>{productMaterialData.product_id.masteritemname}</td>\n                  <td>\n                    {productMaterialData.product_id.masteritemuom.uomname}\n                  </td>\n                  <td>\n                    {productMaterialData.product_id.masteritemcostperunit}\n                  </td>\n                  <td>{productMaterialData.productqty}</td>\n                  <td>\n                    {parseFloat(productMaterialData.productqty).toFixed(2) *\n                      // parseFloat(productMaterialData.product_id.materialrate) *\n                      parseFloat(\n                        productMaterialData.product_id.masteritemcostperunit\n                      ).toFixed(2)}\n                  </td>\n                </tr>\n              );\n            })}\n            <tr>\n              <td colSpan=\"4\">Product Quantity</td>\n              <td>{parseFloat(productformvalues.qty)}</td>\n            </tr>\n            <tr>\n              <td colSpan=\"4\">Material Total Cost</td>\n              <td>{materialTotalCost}</td>\n            </tr>\n            <tr>\n              <td colSpan=\"4\">Labour charge</td>\n              <td>{parseInt(productformvalues.labourcost)}</td>\n            </tr>\n            <tr>\n              <td colSpan=\"4\">Sub Total</td>\n              <td>{subTotal}</td>\n            </tr>\n            <tr>\n              <td colSpan=\"4\">Profit % </td>\n              <td>{profit}</td>\n            </tr>\n            <tr>\n              <td colSpan=\"4\">Grand Total</td>\n\n              <td>{grandTotal}</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default BillingTable;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport { Alert } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport { getproducts } from \"../../actions/Product\";\nimport { getMasterItemList } from \"../../actions/Transaction\";\nimport BillingForm from \"./BillingForm/BillingForm\";\nimport BillingTable from \"./BillingTable\";\n\nclass ProductBilling extends React.Component {\n  state = {\n    productformvalues: {},\n    productlistvalue: {},\n    materiallistvalues: {},\n    selectedProduct: \"\"\n  };\n  componentDidMount() {\n    this.props.getproducts();\n    this.props.getMasterItemList();\n  }\n  componentWillReceiveProps(props) {\n    const productlistvalues = props.productlistvalues;\n    const materiallistvalues = props.materiallistvalues;\n    this.setState({ ...this.state, productlistvalues, materiallistvalues });\n  }\n  submit = productformvalues => {\n    const selectedProduct = this.props.productlistvalues[\n      productformvalues.product\n    ];\n    if (selectedProduct) {\n      this.setState({ ...this.state, productformvalues, selectedProduct });\n      return {\n        success: { gloabl: \"data exist\" }\n      };\n    } else {\n      return {\n        errors: { global: \"something went wrong\" }\n      };\n    }\n  };\n\n  render() {\n    const {\n      selectedProduct,\n      productformvalues,\n      materiallistvalues\n    } = this.state;\n\n    return (\n      <div className=\"container mg-20\">\n        <div>\n          <Breadcrumb>\n            <BreadcrumbItem>\n            <Link to=\"/inventory_page\">Setup</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Item Cost</BreadcrumbItem>\n          </Breadcrumb>\n        </div>\n        <BillingForm submit={this.submit} />\n        {!!selectedProduct && (\n          <BillingTable\n            selectedProduct={selectedProduct}\n            productformvalues={productformvalues}\n            materiallistvalues={materiallistvalues}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    productlistvalues: state.productlistvalues,\n    materiallistvalues: state.masteritemlistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { getproducts, getMasterItemList }\n)(ProductBilling);\n","import React from \"react\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport { Button, Label, Alert } from \"reactstrap\";\nimport PropTypes from \"prop-types\";\nimport \"./LoginForm.scss\";\n\nclass LoginForm extends React.Component {\n  state = {\n    data: {\n      email: \"\",\n      password: \"\"\n    },\n    errors: {},\n    loading: false\n  };\n  onChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  handleValidSubmit = () => {\n    this.setState({ loading: true });\n    this.props.submit(this.state.data).catch(err => {\n      console.log(JSON.stringify(err))\n      this.setState({ errors: err.response.data.errors, loading: false });\n      this.props.error(false);\n    });\n  };\n  handleInvalidSubmit = () => {\n    console.log(\"invalid submit\");\n  };\n  render() {\n    const { data, errors, loading } = this.state;\n    return (\n      <div className=\"center login-form-parent mg-20\">\n        <AvForm\n          onValidSubmit={this.handleValidSubmit}\n          onInvalidSubmit={this.handleInvalidSubmit}\n          ref={el => (this.myFormRef = el)}\n        >\n          <AvGroup>\n            <div>\n              {!!errors.global ? (\n                <Alert color=\"danger\">{errors.global}</Alert>\n              ) : null}\n\n              {!!errors.email ? (\n                <Alert color=\"danger\">{errors.email}</Alert>\n              ) : null}\n            </div>\n            <Label className='small-font-size' for=\"Email\">Email</Label>\n            <span className=\"required-label\">*</span>\n            <AvField\n              name=\"email\"\n              id=\"Email\"\n              type=\"email\"\n              value={data.email}\n              onChange={this.onChange}\n              validate={{\n                required: {\n                  value: true,\n                  errorMessage: \"Please enter a Email\"\n                },\n                pattern: {\n                  value:\n                    \"^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$\",\n                  errorMessage: \"Please enter valid Email\"\n                }\n              }}\n            />\n          </AvGroup>\n          <AvGroup>\n            <Label className='small-font-size' for=\"password\">Password</Label>\n            <span className=\"required-label\">*</span>\n            <AvField\n              name=\"password\"\n              type=\"password\"\n              id=\"password\"\n              value={data.password}\n              onChange={this.onChange}\n              validate={{\n                required: {\n                  value: true,\n                  errorMessage: \"Please enter a password\"\n                }\n              }}\n            />\n          </AvGroup>\n          <div style={{ textAlign: \"center\" }}>\n            <Button color=\"primary\" disabled={loading} className=\"lgn-loader\">\n              Submit\n              {/* {loading} */}\n            </Button>\n          </div>\n        </AvForm>\n      </div>\n    );\n  }\n}\n\nLoginForm.propTypes = {\n  submit: PropTypes.func.isRequired\n};\n\nexport default LoginForm;\n","export const Roles = {\n  ADMIN: 'management',\n  EMPLOYEE: 'employee',\n  ITADMIN: 'itadmin',\n  FINANCE: 'finance',\n  PURCHASE: 'purchase',\n  SALES: 'sales',\n  STORE: 'stores',\n  PRODUCTION:'production'\n};\n","import React from \"react\";\nimport Loader from 'react-loader-spinner'\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\"\nimport \"./loader.css\";\nclass CustomLoader extends React.Component {\n    render() {\n        return(\n         <Loader className=\"loaderposition\"\n            type=\"ThreeDots\"\n            color=\"#ed272f\"\n            height=\"100\"\n            width=\"100\"\n         />\n        );\n       }\n}\n\nexport default CustomLoader;","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport LoginForm from './LoginForm/LoginForm';\nimport { login } from '../../actions/actions';\nimport { Roles } from '../../Services/Roles';\nimport CustomLoader from '../../Components/loader/loader';\nimport Alert2 from '../../Components/Alert/Alert';\n\nclass LoginPage extends React.Component {\n  state = {\n    loading: false\n  };\n  submit = data => {\n    this.dataHandler(true);\n    return this.props.login(data).then(() => {\n\n      this.dataHandler(false);\n      console.log(this.props.role)\n      if (this.props.role === Roles.ADMIN) {\n        // return this.props.history.push(`/adduser`);\n        return this.props.history.push(`/admin_dashboard`);\n      } else if (this.props.role === Roles.ITADMIN) {\n        return this.props.history.push(`/adminlist`);\n      } else if (\n        this.props.role === Roles.FINANCE ||\n        this.props.role === Roles.PURCHASE ||\n        this.props.role === Roles.SALES ||\n        this.props.role === Roles.STORE ||\n        this.props.role === Roles.PRODUCTION\n      ) {\n        return this.props.history.push(`/transaction_page`);\n      } else {\n\n        return this.props.history.push(`/admin_dashboard`);\n      }\n    });\n  };\n\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n\n  render() {\n    const { loading } = this.state;\n    return (\n      <div className='container'>\n        {loading ? <CustomLoader /> : null}\n\n        <LoginForm submit={this.submit} error={this.dataHandler} />\n      </div>\n    );\n  }\n}\n\nLoginPage.propTypes = {\n  role: PropTypes.string.isRequired,\n  login: PropTypes.func.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }).isRequired,\n  submit: PropTypes.string.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    role: state.user.role\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { login }\n)(LoginPage);\n","import React from \"react\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\n\nclass Alert2 extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modal: true\n    };\n\n    this.toggle = this.toggle.bind(this);\n  }\n\n  toggle() {\n    this.setState(prevState => ({\n      modal: !prevState.modal\n    }));\n  }\n  render() {\n    return (\n      <div>\n        {/* <Button color=\"danger\" onClick={this.toggle}>\n          {this.props.buttonLabel}\n        </Button> */}\n        <Modal\n          isOpen={this.state.modal}\n          toggle={this.toggle}\n          className={this.props.className}\n        >\n          <ModalHeader toggle={this.toggle}>Pondhan Scaffolding</ModalHeader>\n          <ModalBody>\n          {this.props.errormessage}\n          </ModalBody>\n          <ModalFooter>\n           \n            <Button color=\"secondary\" onClick={this.toggle}>\n              Close\n            </Button>\n          </ModalFooter>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default Alert2;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport { Button, Label, Alert } from \"reactstrap\";\nimport { Card, CardBody, CardHeader, Row, Col } from \"reactstrap\";\nimport PropTypes from \"prop-types\";\n\nclass AddMaterialForm extends React.Component {\n  state = {\n    data: {\n      materialtype: \"\",\n      materialname: \"\",\n      materialdescription: \"\",\n      materialuom: \"\",\n      costperunit: null,\n      materialrate: null\n    },\n    materialoptionlistvalues: [],\n    errors: {},\n    loading: false,\n    success: false\n  };\n\n  onChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  componentDidMount() {\n    const materialoptionlistvalues = Object.values(\n      this.props.materialoptionlistvalues\n    );\n    this.setState({ ...this.state, materialoptionlistvalues });\n  }\n\n  componentWillReceiveProps(props) {\n    const materialoptionlistvalues = Object.values(\n      props.materialoptionlistvalues\n    );\n    console.log(materialoptionlistvalues);\n    this.setState({ ...this.state, materialoptionlistvalues });\n  }\n\n  createSelectItems = () => {\n    let items = [];\n    const materialoptionlistvalues = this.state.materialoptionlistvalues;\n    materialoptionlistvalues.map((option, i) => {\n      console.log(option);\n      items.push(\n        <option key={i} value={option.id}>\n          {option.materialname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  handleValidSubmit = () => {\n    console.log(this.state.data);\n    this.setState({ loading: true });\n    this.props\n      .submit(this.state.data)\n      .then(() => {\n        this.setState({ loading: false, errors: {}, success: true });\n        this.myFormRef.reset();\n      })\n      .catch(err => {\n        this.setState({ errors: err.response.data.errors, loading: false });\n      });\n  };\n\n  handleInvalidSubmit = () => {\n    console.log(\"invalid submit\");\n  };\n\n  render() {\n    const { data, errors, loading, success } = this.state;\n    return (\n      <div>\n        <div>\n          {!!success ? (\n            <Alert color=\"info\">Material is added successfully.</Alert>\n          ) : null}\n        </div>\n        <AvForm\n          onValidSubmit={this.handleValidSubmit}\n          onInvalidSubmit={this.handleInvalidSubmit}\n          ref={el => (this.myFormRef = el)}\n        >\n          <Card>\n            <CardHeader>Add Item</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={6}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"materialname\">Item Name</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      name=\"materialname\"\n                      type=\"text\"\n                      id=\"materialname\"\n                      value={data.materialname}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: \"Please enter Itemname\"\n                        },\n                    \n                        pattern: {\n                          value: \"^[a-zA-Z]\",\n                          errorMessage: \"Please enter valid Itemname\"\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"materialtype\">Item Type</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      type=\"select\"\n                      name=\"materialtype\"\n                      onChange={this.onChange}\n                    >\n                      <option value=\"\">select</option>\n                      {/* <option value=\"5d10915e7ba4981da4e679f6\">rawmaterial</option>\n                                                <option value=\"5d10908a7ba4981da4e679f5\">subassembly</option> */}\n                      {this.createSelectItems()}\n                    </AvField>\n                  </AvGroup>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"materialuom\">Item unit of measure</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      type=\"select\"\n                      name=\"materialuom\"\n                      onChange={this.onChange}\n                    >\n                      <option value=\"\">Please select value</option>\n                      <option value=\"kg\">Kg</option>\n                      <option value=\"liter\">Liter</option>\n                      <option value=\"kg\">EA</option>\n                    </AvField>\n                  </AvGroup>\n                </Col>\n                <Col sm={6}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"materialdescription\">Item Description</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      name=\"materialdescription\"\n                      type=\"text\"\n                      id=\"materialdescription\"\n                      value={data.materialdescription}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: \"Please enter itemdescription\"\n                        },\n                  \n                        pattern: {\n                          value: \"^[a-zA-Z]\",\n                          errorMessage: \"Please enter valid itemdescription\"\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"materialrate\">Item Rate</Label>\n                    <AvField\n                      name=\"materialrate\"\n                      type=\"text\"\n                      id=\"materialrate\"\n                      value={data.materialrate}\n                      onChange={this.onChange}\n                      validate={{\n                       \n                        pattern: {\n                          value: \"^[0-9]*$\",\n                          errorMessage: \"Please enter valid Itemrate\"\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"costperunit\">cost per unit</Label>\n                    <AvField\n                      name=\"costperunit\"\n                      type=\"text\"\n                      id=\"costperunit\"\n                      value={data.costperunit}\n                      onChange={this.onChange}\n                      validate={{\n                   \n                        pattern: {\n                          value: \"^[0-9]*$\",\n                          errorMessage: \"Please enter valid costperunit\"\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n              </Row>\n            </CardBody>\n          </Card>\n          <div className=\"mg-20\">\n            <Button color=\"primary\" disabled={loading} className=\"lgn-loader\">\n              Submit\n              {/* {loading} */}\n            </Button>\n          </div>\n        </AvForm>\n      </div>\n    );\n  }\n}\n\nAddMaterialForm.propTypes = {\n  submit: PropTypes.func.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    materialoptionlistvalues: state.materialoption\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  null\n)(AddMaterialForm);\n","import React from \"react\";\nimport { MDBDataTable } from \"mdbreact\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\nimport \"mdbreact/dist/css/mdb.css\";\nimport \"./DataTable.css\";\n\nconst DatatablePage = props => {\n  const data = {\n    columns: props.columnvalue,\n    rows: props.rowvalues\n  };\n\n  return (\n    <MDBDataTable\n      striped\n      bordered\n      small\n      data={data}\n      className={props.className}\n    />\n  );\n};\n\nexport default DatatablePage;\n","import React from \"react\";\nimport AddMaterialForm from \"./MaterialForms/AddMaterialForm\";\nimport { Link } from \"react-router-dom\";\nimport { Button, Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport {\n  addMaterial,\n  getMaterial,\n  getMaterialsTypes\n} from \"../../actions/Product\";\nimport DataTable from \"../../Components/Table/DatatablePage\";\n\nclass AddMaterial extends React.Component {\n  state = {\n    materiallist: \"\",\n    count: \"\"\n  };\n\n  componentDidMount() {\n    this.props.getMaterial();\n    this.props.getMaterialsTypes();\n  }\n\n  updateButton = id => {\n    let path = `/update_material/${id}`;\n    this.props.history.push(path);\n  };\n\n  componentWillReceiveProps(props) {\n    const materiallistvalues = Object.values(props.materiallistvalues);\n    const materiallist = materiallistvalues.map((materialdata, i) => {\n      return {\n        materialtype: materialdata.materialtype.materialname,\n        materialname: materialdata.materialname,\n        materialdescription: materialdata.materialdescription,\n        materialuom: materialdata.materialuom,\n        materialrate: materialdata.materialrate,\n        costperunit: materialdata.costperunit,\n        view: (\n          <Button\n            color=\"primary\"\n            onClick={() => {\n              this.updateButton(materialdata.id);\n            }}\n          >\n            View / Edit\n          </Button>\n        )\n      };\n    });\n    const count = materiallistvalues.length;\n    this.setState({ ...this.state, materiallist, count });\n  }\n\n  submit = data => {\n    return this.props.addMaterial(data).then(data => {\n      this.props.getMaterial();\n      return data;\n    });\n  };\n  render() {\n    const { count, materiallist } = this.state;\n    const columnvalue = [\n      {\n        label: \"Item Type\",\n        field: \"material Type\",\n        sort: \"asc\",\n        width: 75\n      },\n      {\n        label: \"Item Name\",\n        field: \"materialname\",\n        sort: \"asc\",\n        width: 75\n      },\n      {\n        label: \"Item Description\",\n        field: \"materialdescription\",\n        sort: \"asc\",\n        width: 75\n      },\n      {\n        label: \"unit of measure\",\n        field: \"materialuom\",\n        sort: \"asc\",\n        width: 75\n      },\n      {\n        label: \"Item Rate\",\n        field: \"materialrate\",\n        sort: \"asc\",\n        width: 50\n      },\n      {\n        label: \"cost per unit\",\n        field: \"costperunit\",\n        sort: \"asc\",\n        width: 50\n      },\n      {\n        label: \"view / Edit\",\n        field: \"view\",\n        sort: \"asc\",\n        width: 100\n      }\n    ];\n    return (\n      <div className=\"container mg-20\">\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to=\"/inventory_page\">Inventory</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>Add Item</BreadcrumbItem>\n        </Breadcrumb>\n        <AddMaterialForm submit={this.submit} />\n        <div>\n          {count > 0 && (\n            <div className=\"container mg-20\">\n              <DataTable columnvalue={columnvalue} rowvalues={materiallist} />\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nAddMaterial.propTypes = {\n  addMaterial: PropTypes.func.isRequired,\n  getMaterial: PropTypes.func.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    materiallistvalues: state.materiallistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { addMaterial, getMaterial, getMaterialsTypes }\n)(AddMaterial);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport { Button, Label, Alert } from \"reactstrap\";\nimport { Card,CardBody,CardHeader,Row, Col } from 'reactstrap';\n\nclass AddMaterialTypesForm extends React.Component{\n    state={\n        data:{\n            material:\"\"\n        },\n        errors:{},\n        loading:false,\n        success:false\n    }\n    onChange = e => {\n        this.setState({\n          ...this.state,\n          data: { ...this.state.data, [e.target.name]: e.target.value }\n        });\n    };\n\n    handleValidSubmit = () => {\n        console.log(this.state.data);\n        this.setState({ loading: true });\n        this.props\n          .submit(this.state.data)\n          .then(() => {\n            this.setState({ loading: false,errors:{},success:true});\n            this.myFormRef.reset();\n          })\n          .catch((err) =>{\n            this.setState({ errors: err.response.data.errors, loading: false }) \n          });\n    };\n\n    render(){\n        const { data, errors, loading, success } = this.state;\n        return(\n            <div>\n                {!!success ? (\n                    <Alert color=\"info\">Material details is Added successfully</Alert>\n                ) : null}\n                {!!errors.materialname ? (\n                    <Alert color=\"danger\">Material data already exist.</Alert>\n                ) : null}\n                <AvForm\n                    onValidSubmit={this.handleValidSubmit}\n                    onInvalidSubmit={this.handleInvalidSubmit}\n                    ref={el => (this.myFormRef = el)}\n                >\n                    <Card>\n                        <CardHeader>Add Item Type</CardHeader>\n                        <CardBody>\n                        <Row>\n                            <Col sm={6}>\n                                <AvGroup>\n                                    <Label className='small-font-size' for=\"material\">Item</Label><span className=\"required-label\">*</span>\n                                    <AvField\n                                        name=\"material\"\n                                        type=\"text\"\n                                        id=\"material\"\n                                        value={data.option}\n                                        onChange={this.onChange}\n                                        validate={{\n                                            required: {\n                                            value: true,\n                                            errorMessage: \"Please enter Item\"\n                                            },\n                                   \n                                            pattern: {\n                                            value:\n                                                \"^[a-zA-Z]\",\n                                            errorMessage:\n                                                \"Please enter valid materialname\"\n                                            }\n                                        }}\n                                    />   \n                                </AvGroup>\n                            </Col>\n                            <Col sm={6}>\n                                <AvGroup className=\"mg-20\">\n                                    <Button color=\"primary\" disabled={loading} className=\"lgn-loader\">\n                                        Submit\n                                        {/* {loading} */}\n                                    </Button>\n                                </AvGroup>\n                            </Col>\n                        </Row>\n                        </CardBody>\n                    </Card>\n                </AvForm>                        \n            </div>\n        );\n    }\n}\n\nAddMaterialTypesForm.propTypes = {\n    submit: PropTypes.func.isRequired\n};\n\nexport default AddMaterialTypesForm;","import React from \"react\";\nimport { Button, Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { MDBBtn } from \"mdbreact\";\nimport PropTypes from \"prop-types\";\nimport AddMaterialOptions from \"./MaterialForms/AddMaterialTypesForm\";\nimport DataTable from \"../../Components/Table/DatatablePage\";\nimport { addMaterialTypes, getMaterialsTypes } from \"../../actions/Product\";\n\nclass AddMaterialType extends React.Component {\n  state = {\n    count: \"\",\n    materialoptions: []\n  };\n  componentDidMount() {\n    this.props.getMaterialsTypes();\n  }\n\n  updateButton = id => {\n    let path = `/update_itemtype/${id}`;\n    this.props.history.push(path);\n  };\n  componentWillReceiveProps(props) {\n    const materialoptionslist = Object.values(props.materialoptions);\n    const materialoptions = materialoptionslist.map((materialdata, i) => {\n      return {\n        materialname: materialdata.materialname,\n        view: (\n          <MDBBtn\n            color=\"info\"\n            size=\"sm\"\n            onClick={() => {\n              this.updateButton(materialdata.id);\n            }}\n          >\n            view / Edit\n          </MDBBtn>\n        )\n      };\n    });\n    const count = materialoptions.length;\n    this.setState({ ...this.state, materialoptions, count });\n  }\n  submit = data => {\n    return this.props.addMaterialTypes(data).then(data => {\n      this.props.getMaterialsTypes();\n      return data;\n    });\n  };\n  render() {\n    const { count, materialoptions } = this.state;\n    const columnvalue = [\n      {\n        label: \"Item Types\",\n        field: \"materialname\",\n        sort: \"asc\",\n        width: 100\n      },\n      {\n        label: \"View/Edit\",\n        field: \"view\",\n        sort: \"asc\",\n        width: 100\n      }\n    ];\n    return (\n      <div>\n        <div className=\"container mg-20\">\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to=\"/inventory_page\">Inventory</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Add Item Type</BreadcrumbItem>\n          </Breadcrumb>\n\n          <AddMaterialOptions submit={this.submit} />\n        </div>\n        {count > 0 && (\n          <div className=\"container mg-20\">\n            <DataTable columnvalue={columnvalue} rowvalues={materialoptions} />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nAddMaterialType.propTypes = {\n  addMaterialTypes: PropTypes.func.isRequired,\n  getMaterialsTypes: PropTypes.func.isRequired,\n  materialoptions: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    materialname: PropTypes.string.isRequired\n  }).isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }).isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    materialoptions: state.materialoption\n  };\n}\nexport default connect(\n  mapStateToProps,\n  { addMaterialTypes, getMaterialsTypes }\n)(AddMaterialType);\n","import React from \"react\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport { Button, Label, Alert } from \"reactstrap\";\nimport { Card, CardBody, CardHeader, Row, Col } from \"reactstrap\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nclass UpdateMaterialForm extends React.Component {\n  state = {\n    data: {\n      materialtype: \"\",\n      materialname: \"\",\n      materialdescription: \"\",\n      materialuom: \"\",\n      costperunit: \"\",\n      materialrate: \"1\"\n    },\n\n    errors: {},\n    materialoptionlistvalues: [],\n    loading: false,\n    success: false\n  };\n\n  componentWillReceiveProps(props) {\n    const data = props.materialvalues;\n    data.materialtype = props.materialvalues.materialtype._id;\n\n    const materialoptionlistvalues = Object.values(\n      props.materialoptionlistvalues\n    );\n    console.log(materialoptionlistvalues);\n    this.setState({ ...this.state, materialoptionlistvalues, data });\n  }\n\n  onChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  handleValidSubmit = () => {\n    this.setState({ loading: true });\n    this.props\n      .submit(this.state.data)\n      .then(() => {\n        this.setState({ loading: false, errors: {}, success: true });\n      })\n      .catch(err => {\n        this.setState({ errors: err.response.data.errors, loading: false });\n      });\n  };\n\n  createSelectItems = () => {\n    let items = [];\n    const materialoptionlistvalues = this.state.materialoptionlistvalues;\n    materialoptionlistvalues.map((option, i) => {\n      console.log(option);\n      items.push(\n        <option key={i} value={option.id}>\n          {option.materialname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  handleInvalidSubmit = () => {\n    console.log(\"invalid submit\");\n  };\n\n  render() {\n    const { data, errors, loading, success } = this.state;\n    return (\n      <div>\n        <div>\n          {!!success ? (\n            <Alert color=\"info\">Item is updated successfully.</Alert>\n          ) : null}\n        </div>\n        <AvForm\n          onValidSubmit={this.handleValidSubmit}\n          onInvalidSubmit={this.handleInvalidSubmit}\n        >\n          <Card>\n            <CardHeader>Add Material</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={6}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"materialname\">Item Name</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      name=\"materialname\"\n                      type=\"text\"\n                      id=\"materialname\"\n                      value={data.materialname}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: \"Please enter itemname\"\n                        },\n                     \n                        pattern: {\n                          value: \"^[a-zA-Z]\",\n                          errorMessage: \"Please enter valid materialname\"\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"materialtype\">Item Type</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      type=\"select\"\n                      name=\"materialtype\"\n                      onChange={this.onChange}\n                      value={data.materialtype}\n                    >\n                      {/* <option value=\"5d10915e7ba4981da4e679f6\">rawmaterial</option>\n                                                <option value=\"5d10908a7ba4981da4e679f5\">subassembly</option> */}\n                      {this.createSelectItems()}\n                    </AvField>\n                  </AvGroup>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"materialuom\">item unit of measure</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      type=\"select\"\n                      name=\"materialuom\"\n                      onChange={this.onChange}\n                      value={data.materialuom}\n                    >\n                      <option value=\"kg\">Kg</option>\n                      <option value=\"liter\">Liter</option>\n                      <option value=\"ea\">EA</option>\n                    </AvField>\n                  </AvGroup>\n                </Col>\n                <Col sm={6}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"materialdescription\">Item Description</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      name=\"materialdescription\"\n                      type=\"text\"\n                      id=\"materialdescription\"\n                      value={data.materialdescription}\n                      onChange={this.onChange}\n                      validate={{\n                      \n                        pattern: {\n                          value: \"^[a-zA-Z]\",\n                          errorMessage: \"Please enter valid itemdescription\"\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"materialrate\">item Rate</Label>\n                    <AvField\n                      name=\"materialrate\"\n                      type=\"text\"\n                      id=\"materialrate\"\n                      value={data.materialrate}\n                      onChange={this.onChange}\n                      validate={{\n                 \n                        pattern: {\n                          value: \"^[0-9]*$\",\n                          errorMessage: \"Please enter valid itemrate\"\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"costperunit\">cost per unit</Label>\n                    <AvField\n                      name=\"costperunit\"\n                      type=\"text\"\n                      id=\"costperunit\"\n                      value={data.costperunit}\n                      onChange={this.onChange}\n                      validate={{\n                    \n                        pattern: {\n                          value: \"^[0-9]*$\",\n                          errorMessage: \"Please enter valid costperunit\"\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n              </Row>\n            </CardBody>\n          </Card>\n          <div className=\"mg-20\">\n            <Button color=\"primary\" disabled={loading} className=\"lgn-loader\">\n              update\n              {/* {loading} */}\n            </Button>\n          </div>\n        </AvForm>\n      </div>\n    );\n  }\n}\n\nUpdateMaterialForm.propTypes = {\n  submit: PropTypes.func.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    materialoptionlistvalues: state.materialoption\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  null\n)(UpdateMaterialForm);\n","import React from \"react\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport UpdateMaterialForm from \"./MaterialForms/UpdateMaterialForm\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { updatematerialdetails, getMaterial } from \"../../actions/Product\";\n\nclass updateMaterial extends React.Component {\n  state = {\n    materialvalues: \"\"\n  };\n\n  componentDidMount() {\n    this.props.getMaterial();\n    const materialid = this.props.match.params.id;\n    const materialvalues = this.props.materiallistvalues[materialid];\n    this.setState({ materialvalues });\n  }\n\n  submit = data => {\n    return this.props.updatematerialdetails(data).then(data => {\n      this.props.getMaterial();\n      return data;\n    });\n  };\n  render() {\n    const { materialvalues } = this.state;\n    return (\n      <div className=\"container mg-20\">\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to=\"/inventory_page\">Inventory</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/additem\">Add Item</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>Update Item </BreadcrumbItem>\n        </Breadcrumb>\n        <UpdateMaterialForm\n          submit={this.submit}\n          materialvalues={materialvalues}\n        />\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    materiallistvalues: state.materiallistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { updatematerialdetails, getMaterial }\n)(updateMaterial);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport { Button, Label, Alert } from \"reactstrap\";\nimport { Card,CardBody,CardHeader,Row, Col } from 'reactstrap';\n\nclass UpdateMaterialTypesForm extends React.Component{\n    state={\n        data:{\n            materialname:this.props.materialoption.materialname,\n            id:this.props.materialoption.id\n        },\n        errors:{},\n        loading:false,\n        success:false\n    }\n    onChange = e => {\n        this.setState({\n          ...this.state,\n          data: { ...this.state.data, [e.target.name]: e.target.value }\n        });\n    };\n\n    componentWillReceiveProps(props){\n        const dataRecord = props.materialoption;\n        this.setState({...this.state.data, data:dataRecord});\n    }\n\n    handleValidSubmit = () => {\n        this.setState({ loading: true });\n        this.props\n          .submit(this.state.data)\n          .then(() => {\n            this.setState({ loading: false,errors:{},success:true});\n            // this.myFormRef.reset();\n          })\n          .catch((err) =>{\n            this.setState({ errors: err.response.data.errors, loading: false }) \n          });\n    };\n\n    render(){\n        console.log(this.props);\n        const { data, errors, loading, success } = this.state;\n        return(\n            <div>\n                {!!success ? (\n                    <Alert color=\"info\">Item details is updated successfully</Alert>\n                ) : null}\n                {!!errors.materialname ? (\n                    <Alert color=\"danger\">Item data already exist.</Alert>\n                ) : null}\n                {!!errors.global ? (\n                    <Alert color=\"danger\">Something went wrong,Please try again later.</Alert>\n                ) : null}\n                <AvForm\n                    onValidSubmit={this.handleValidSubmit}\n                    onInvalidSubmit={this.handleInvalidSubmit}\n                    ref={el => (this.myFormRef = el)}\n                >\n                    <Card>\n                        <CardHeader>Update Item</CardHeader>\n                        <CardBody>\n                        <Row>\n                            <Col sm={6}>\n                                <AvGroup>\n                                    <Label className='small-font-size' for=\"material\">Item</Label><span className=\"required-label\">*</span>\n                                    <AvField\n                                        name=\"materialname\"\n                                        type=\"text\"\n                                        id=\"material\"\n                                        value={data.materialname}\n                                        onChange={this.onChange}\n                                        validate={{\n                                            required: {\n                                            value: true,\n                                            errorMessage: \"Please enter Item name\"\n                                            },\n                                      \n                                            pattern: {\n                                            value:\n                                                \"^[a-zA-Z]\",\n                                            errorMessage:\n                                                \"Please enter valid item name\"\n                                            }\n                                        }}\n                                    />   \n                                </AvGroup>\n                            </Col>\n                        </Row>\n                        </CardBody>\n                    </Card>\n                    <div className=\"mg-20\">\n                        <Button color=\"primary\" disabled={loading} className=\"lgn-loader\">\n                            update\n                            {/* {loading} */}\n                        </Button>\n                    </div>\n                </AvForm>                        \n            </div>\n        );\n    }\n}\n\nUpdateMaterialTypesForm.propTypes = {\n    submit: PropTypes.func.isRequired\n};\n\nfunction mapStateToProps(state) {\n    return {\n      materialoptionobjectlist: state.materialoption\n    };\n}\n\nexport default connect(mapStateToProps,{})(UpdateMaterialTypesForm);","import React from \"react\";\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport UpdateMaterialTypeForm from \"./MaterialForms/UpdateMaterialTypesForm\";\nimport { updateMaterialType,getMaterialsTypes } from \"../../actions/Product\";\n\nclass UpdateMaterialType extends React.Component{\n    state={\n        materialoption:''\n    }\n    \n    componentDidMount(){\n        const materialid = this.props.match.params.id;\n        const materialoption = this.props.materialoptions[materialid];\n        this.setState({materialoption});\n    }\n\n    submit = (data) => this.props.updateMaterialType(data);\n\n\n    render(){\n        const { materialoption } = this.state;\n        return(\n            <div className=\"container mg-20\">\n                <Breadcrumb>\n                    <BreadcrumbItem><Link to=\"/inventory_page\">Inventory</Link></BreadcrumbItem>\n                    <BreadcrumbItem><Link to=\"/add_itemtype\">Item type</Link></BreadcrumbItem>\n                    <BreadcrumbItem active>Item View/Edit</BreadcrumbItem>\n                </Breadcrumb>\n                <UpdateMaterialTypeForm materialoption={materialoption} submit={this.submit} />\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state){\n    return{\n        materialoptions: state.materialoption\n    }\n}\n\nexport default connect(mapStateToProps,{updateMaterialType,getMaterialsTypes})(UpdateMaterialType);","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport {\n  Button,\n  Label,\n  Alert,\n  Card,\n  CardBody,\n  CardHeader,\n  Row,\n  Col,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from \"reactstrap\";\nimport PropTypes from \"prop-types\";\nimport axios from \"axios\";\n\nclass ProductForm extends React.Component {\n  state = this.initialState;\n\n  get initialState() {\n    return {\n      data: {\n        productname: \"\",\n        values: [\"\"],\n        products: [\"\"],\n        productsqty: [\"\"],\n        productsuom: [\"\"],\n        productsqtyinmeter: [\"\"],\n        productsweight: [\"\"]\n      },\n      materiallistvalues: [],\n      uomlistvalues:[],\n      materiallistvaluesObject: {},\n      loading: false,\n      errors: {},\n      success: false\n    };\n  }\n  componentDidMount() {\n    const materiallistvaluesObject = this.props.materiallistvalues;\n    const materiallistvalues = Object.values(this.props.materiallistvalues);\n    this.setState({\n      ...this.state,\n      materiallistvalues,\n      materiallistvaluesObject\n    });\n    this.getUnitmeasures()\n  }\n\n  componentWillReceiveProps(props) {\n    const materiallistvaluesObject = this.props.materiallistvalues;\n    const materiallistvalues = Object.values(props.materiallistvalues);\n    //const uomlistvalues = Object.values(props.uomlistvalues);\n    // console.log(uomlistvalues);\n    this.setState({\n      ...this.state,\n      materiallistvalues,\n      materiallistvaluesObject\n    });\n  }\n\n\n\n  getUnitmeasures(){\n    \n    this.setState({ loading: true });\n \n    axios\n    .get(`${process.env.REACT_APP_BASE_URL}/unitofmeasure/getuom`)\n    .then(res => {\n      console.log(res.data)\n      if(res.data.uomlist.uomdata.length > 0){\n        this.setState({\n          uomlistvalues:res.data.uomlist.uomdata\n        });\n      }\n      this.setState({ loading: false });\n    },\n    error =>{\n      this.setState({ loading: false });\n      this.setState({ success: false, message:'Server error.' });\n    });\n  }\n\n\n  createSelectItems3 = optionvalue => {\n\n    let items = [];\n    const uomlistvalues = this.state.uomlistvalues\n    uomlistvalues.filter((option, i) => {\n      items.push(\n        <option key={i} value={option.uomname}>\n          {option.uomname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  createSelectItems = optionvalue => {\n\n    let items = [];\n    // const materiallistvalues = [\n    //   {\n    //     'id': '1',\n    //     'itemname': 'Props'\n    //   },\n    //   {\n    //     'id': '2',\n    //     'itemname': 'MS Span'\n    //   },\n    //   {\n    //     'id': '3',\n    //     'itemname': 'MS Centering sheet'\n    //   },\n    //   {\n    //     'id': '4',\n    //     'itemname': 'Cuplock Vertical'\n    //   },\n    //   {\n    //     'id': '5',\n    //     'itemname': 'Cuoplock horizontal'\n    //   },\n    //   {\n    //     'id': '6',\n    //     'itemname': 'H Frame Scaffolding'\n    //   },\n    //   {\n    //     'id': '7',\n    //     'itemname': 'U Jack/ Base Jack'\n    //   },\n    //   {\n    //     'id': '8',\n    //     'itemname': 'Spigot pins'\n    //   },\n    //   {\n    //     'id': '9',\n    //     'itemname': 'Pressed swivel cuplers'\n    //   },\n    //   {\n    //     'id': '10',\n    //     'itemname': 'pressed right cuplers'\n    //   },\n    //   {\n    //     'id': '11',\n    //     'itemname': 'Pressed swivel cuplers'\n    //   },\n    //   {\n    //     'id': '12',\n    //     'itemname': 'Shttering clamps'\n    //   }\n    // ]\n    const materiallistvalues = this.state.materiallistvalues;\n    console.log(\"__MATERIAL_LIST_VALUES___\");\n    console.log(materiallistvalues);\n    materiallistvalues.filter((option, i) => {\n      if(option.masteritemtypename != \"\"){\n        if(option.masteritemtypename.split('')[0] == \"3\"){\n          items.push(\n            <option key={i} value={option.masteritemdescription}>\n              {option.masteritemdescription}\n            </option>\n          );\n        }\n      }\n   \n    });\n    return items;\n  };\n\n\n  createSelectItems2 = optionvalue => {\n\n    let items = [];\n    // const materiallistvalues = [\n    //   {\n    //     'itemname': '50 NB H.R. Tubes'\n    //   },\n    //   {\n    //     'itemname': '40 NB H.R. Tubes'\n    //   },\n    //   {\n    //     'itemname': '6 mm MS Plate'\n    //   },\n    //   {\n    //     'itemname': 'Prop nut'\n    //   },\n    //   {\n    //     'itemname': 'H.R sheet'\n    //   },\n    //   {\n    //     'itemname': 'Dia10 mm MS rod'\n    //   },\n    //   {\n    //     'itemname': '65mm*6mm MS Flat'\n    //   },\n    //   {\n    //     'itemname': '32mm*5mm MS Flat'\n    //   },\n    //   {\n    //     'itemname': '75mm*75mm*8mm L Angle'\n    //   },\n    //   {\n    //     'itemname': '3/4\" MS span Bolt'\n    //   },\n    //   {\n    //     'itemname': '3/4\" MS Hexagonal nut'\n    //   },\n    //   {\n    //     'itemname': 'H.R. Sheet'\n    //   },\n    //   {\n    //     'itemname': '25mm*25mm*5mm L angle.'\n    //   },\n    //   {\n    //     'itemname': '40 NB H.R. Tubes'\n    //   },\n    //   {\n    //     'itemname': 'Top cup'\n    //   },\n    //   {\n    //     'itemname': 'Bottom cup'\n    //   },\n    //   {\n    //     'itemname': 'Dia 8 mm Rod'\n    //   },\n    //   {\n    //     'itemname': '20 NB H.R Tubes'\n    //   },\n    //   {\n    //     'itemname': 'Ledger blade'\n    //   },\n    //   {\n    //     'itemname': 'locking pins'\n    //   },\n    //   {\n    //     'itemname': 'Dia 32 mm MS rod'\n    //   },\n    //   {\n    //     'itemname': 'MS pLate'\n    //   },\n    //   {\n    //     'itemname': 'Cup nuts'\n    //   },\n    //   {\n    //     'itemname': 'dia 38 OD pipe'\n    //   },\n    //   {\n    //     'itemname': '40mm*40mm'\n    //   },\n    //   {\n    //     'itemname': '40mm*50mm'\n    //   },\n    //   {\n    //     'itemname': '32mm*5mm Ms flat'\n    //   }\n\n    // ]\n    const materiallistvalues = this.state.materiallistvalues;\n    materiallistvalues.filter((option, i) => {\n      items.push(\n        <option key={i} value={option.masteritemdescription}>\n          {option.masteritemdescription}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  createSelectunfinishedItems = optionvalue => {\n    let items = [];\n    const materiallistvalues = this.state.materiallistvalues;\n    materiallistvalues.filter((option, i) => {\n      if (option.masteritemtype.masteritemtypename !== optionvalue) {\n        items.push(\n          <option key={i} value={option.id}>\n            {option.masteritemtypename}\n          </option>\n        );\n      }\n    });\n    return items;\n  };\n\n  onChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  handleClick = e => {\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        values: [...this.state.data.values, \"\"],\n        products: [...this.state.data.products, \"\"],\n        productsqty: [...this.state.data.productsqty, \"\"],\n        productsuom: [...this.state.data.productsuom, \"\"],\n        productsqtyinmeter: [...this.state.data.productsqtyinmeter, \"\"]\n      }\n    });\n  };\n  handleChange = (e, index) => {\n    this.state.data.products[index] = e.target.value;\n    const materialuom = this.state.materiallistvaluesObject[\n      this.state.data.products[index]\n    ];\n    this.state.data.productsqty[index] = \"1\";\n    this.state.data.productsuom[index] = materialuom.masteritemuom.uomname;\n    this.state.data.productsqtyinmeter[index] = \"\"\n    \n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        products: this.state.data.products,\n        productsuom: this.state.data.productsuom,\n        productsqty: this.state.data.productsqty,\n        productsqtyinmeter: this.state.data.productsqtyinmeter\n      }\n    });\n  };\n\n  ProductqtyhandleChange = (e, index) => {\n    console.log(index);\n    let arr = this.state.materiallistvalues.filter((item) =>{\n      return item.masteritemdescription == e.target.value\n    })\n    console.log(arr)\n    this.state.data.productsqty[index] = e.target.value;\n    this.state.data.productsweight[index] = \n    arr.length > 0 ? (arr[0].masteritemunitwt != 'undefined' && arr[0].masteritemunitwt != 'null' && arr[0].masteritemunitwt != '' ? arr[0].masteritemunitwt : 0) : 0\n    \n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, \n        productsqty: this.state.data.productsqty,\n        productsweight: this.state.data.productsweight\n      }\n    },() =>{\n      console.log(this.state.data)\n    });\n  };\n\n  ProductuomhandleChange = (e, index) => {\n    console.log(index);\n    this.state.data.productsuom[index] = e.target.value;\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, productsuom: this.state.data.productsuom }\n    });\n  };\n  \n  ProductqtyinmeterhandleChange = (e, index) => {\n    console.log(e.target.value);\n    this.state.data.productsqtyinmeter[index] = e.target.value;\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, productsqtyinmeter: this.state.data.productsqtyinmeter }\n    });\n  };\n  \n  removeClick = (e, index) => {\n    const removeProduct = { ...this.state.data };\n    const products = removeProduct.products;\n    const productsqty = removeProduct.productsqty;\n    const productsuom = removeProduct.productsuom;\n    const productsqtyinmeter = removeProduct.productsqtyinmeter;\n    const values = removeProduct.values;\n    products.splice(index, 1);\n    productsqty.splice(index, 1);\n    productsuom.splice(index, 1);\n    productsqtyinmeter.splice(index, 1);\n    values.splice(index, 1);\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, products, productsqty, productsuom,productsqtyinmeter, values }\n    });\n  };\n  onChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n  handleValidSubmit = () => {\n    console.log(\"product form data\");\n    console.log(this.state.data);\n    const products = this.state.data.products;\n    const productsqty = this.state.data.productsqty;\n    console.log(productsqty)\n    let productMaterials = [];\n    products.forEach(function (v, i) {\n      var obj = {};\n      obj.product_id = v;\n      obj.productqty = productsqty[i];\n      productMaterials.push(obj);\n    });\n\n    const data = { ...this.state.data, productMaterials };\n    delete data.products;\n    delete data.productsqty;\n    this.setState({ loading: true });\n    this.props\n      .submit(data)\n      .then(() => {\n        this.setState({\n          loading: false,\n          errors: {},\n          success: true,\n          data: {\n            productname: \"\",\n            values: [\"\"],\n            products: [\"\"],\n            productsqty: [\"\"],\n            productsuom: [\"\"],\n            productsqtyinmeter: [\"\"]\n          },\n          materiallistvalues: this.initialState.materiallistvalues,\n          materiallistvaluesObject: this.initialState.materiallistvaluesObject\n        });\n        this.myFormRef.reset();\n\n      })\n      .catch(err => {\n        alert(\"Same product sub assembly is already added.\")\n        window.location.reload()\n        this.setState({ errors: err.response.data.errors, loading: false });\n      });\n  };\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n  toggelbutton = () => {\n    this.setState({ ...this.state, success: false });\n    window.location.reload()\n  }\n  handleInvalidSubmit = () => {\n    console.log(\"invalid submit\");\n  };\n  render() {\n    const { data, errors, loading, success,uomlistvalues } = this.state;\n    console.log(\"__STATE_VALUE___DATA_\");\n    console.log(data);\n    return (\n      <div>\n        {!!success ? (\n          // <Alert color=\"info\">Product detail is added successfully.</Alert>\n          <Modal\n            isOpen={success}\n            toggle={this.toggle}\n            className={this.props.className}\n          >\n            <ModalHeader toggle={this.toggle} className='small-font-size-bold'>Subassembly</ModalHeader>\n            <ModalBody >Subassembly is added successfully.</ModalBody>\n            <ModalFooter>\n              <Button color=\"primary\" onClick={this.toggelbutton}>\n                Ok\n              </Button>{\" \"}\n\n            </ModalFooter>\n          </Modal>\n        ) : null}\n        {!!errors.productname ? (\n          <Alert Label color=\"danger\">Product Name must be unique id.</Alert>\n        ) : null}\n        <AvForm\n          onValidSubmit={this.handleValidSubmit}\n          onInvalidSubmit={this.handleInvalidSubmit}\n          ref={el => (this.myFormRef = el)}\n        >\n          <Card>\n            <CardHeader className='small-font-size-bold'>Product Details</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"productname\" Label>Product Name</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      Label\n                      type=\"select\"\n                      name=\"productname\"\n                      id=\"productname\"\n                      onChange={this.onChange}\n                      required={true}\n                    >\n                      <option value=\"\">select</option>\n          \n                      {this.createSelectItems(\"FinishedGoods\")}\n                    </AvField>\n                  </AvGroup>\n                </Col>\n              </Row>\n              <Row>\n                <Col sm={12}>\n                  <div>\n                    <div className=\"mg-20\">\n                      <Button color=\"info\" onClick={this.handleClick}>\n                        Add Component\n                      </Button>\n                    </div>\n                  </div>\n                </Col>\n              </Row>\n\n              {data.values.map((value, index) => {\n                return (<Row key={index}>\n                  <Col sm={2}>\n                    <AvGroup>\n                      <Label className='small-font-size' for={`Material-qty+${index}`}>\n                        Sub assembly\n                  </Label>\n                      <span className=\"required-label\">*</span>\n          \n\n                      <AvField\n                        Label\n                        type=\"select\"\n                        name=\"material_qty\"\n                        id={`Material-qty+${index}`}\n                        value={data.productsqty[index] || null}\n                        onChange={e =>\n                          this.ProductqtyhandleChange(e, index)\n                        }\n                      >\n                        <option value=\"\">select</option>\n             \n                        {this.createSelectItems2(\"\")}\n                      </AvField>\n                    </AvGroup>\n\n\n                  </Col>\n                  <Col sm={2}>\n                    <AvGroup>\n                      <Label className='small-font-size' for={`Material-qtymeter+${index}`}>\n                        Quantity\n                  </Label>\n                      <span className=\"required-label\">*</span>\n          \n                    <AvField\n                      Label\n                      type=\"text\"\n                      name=\"Material-qtymeter\"\n                      id={`Material-qtymeter+${index}`}\n                      onChange={this.onChange}\n                      value={data.productsqtyinmeter[index]}\n                      onChange={e =>\n                        this.ProductqtyinmeterhandleChange(e, index)\n                      }\n                    >\n                     \n                    </AvField>\n                 \n                    </AvGroup>\n                  </Col>\n\n                  <Col sm={2}>\n                    <AvGroup>\n                      <Label className='small-font-size' for={`Material-uom+${index}`}>\n                        UOM\n                  </Label>\n                      <span className=\"required-label\">*</span>\n          \n                    <AvField\n                      Label\n                      type=\"select\"\n                      name=\"Material-uom\"\n                      id={`Material-uom+${index}`}\n                      onChange={this.onChange}\n                      value={data.productsuom[index]}\n                      onChange={e =>\n                        this.ProductuomhandleChange(e, index)\n                      }\n                    >\n                      <option value=\"\">Select unit</option>\n          \n                      {this.createSelectItems3(\"FinishedGoods\")}\n                    </AvField>\n                 \n                    </AvGroup>\n                  </Col>\n\n                  \n                  <Col sm={2}>\n                    <AvGroup style={{ marginTop: \"28px\" }}>\n                      <Button\n                        Label\n                        Label\n                        color='danger'\n                        type=\"button\"\n                        onClick={e => this.removeClick(e, index)}\n                      >\n                        -\n                  </Button>\n\n                    </AvGroup>\n\n                  </Col>\n                </Row>)\n              })}\n              {/* <div>\n                                    <button onClick={this.handleSubmit}>submit</button>\n                                </div> */}\n\n            </CardBody>\n          </Card>\n          <div className=\"mg-20\" style={{paddingLeft: 15, paddingTop: 10}}>\n            <Button color=\"primary\" disabled={loading} className=\"lgn-loader small-font-size\">\n              Submit\n              {/* {loading} */}\n            </Button>\n          </div>\n        </AvForm>\n      </div>\n    );\n  }\n}\n\nProductForm.propTypes = {\n  submit: PropTypes.func.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    materiallistvalues: state.masteritemlistvalues\n    // masteritemlistvalues: state.masteritemlistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  null\n)(ProductForm);\n","import { normalize } from \"normalizr\";\nimport api from \"../Services/transactionapi\";\nimport { UOM_LIST } from \"../Services/types\";\nimport { uomListSchema } from \"../Schemas/schemas\";\n\nfunction uomListFetched(uomlist) {\n  return {\n    type: UOM_LIST,\n    uomlist\n  };\n}\n\nexport const getUomList = () => {\n  return dispatch => {\n    return api.uom.getUomDetails().then(uomlist => {\n      const uomlistvalue = uomlist.uomdata;\n      return dispatch(uomListFetched(normalize(uomlistvalue, [uomListSchema])));\n    });\n  };\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport ProductForm from \"./ProductForm/ProductForm\";\nimport { addproduct } from \"../../actions/Product\";\nimport { getMasterItemList } from \"../../actions/Transaction\";\nimport { getUomList } from \"../../actions/uom\";\nimport CustomLoader from \"../../Components/loader/loader\";\n\nclass Product extends React.Component {\n  state = {\n    loading: false\n  };\n  componentDidMount() {\n    //this.props.getUomList();\n    this.props.getMasterItemList();\n  }\n  submit = data => {\n    this.dataHandler(true);\n    return this.props\n      .addproduct(data)\n      .then(data => {\n        this.dataHandler(false);\n        return data;\n      })\n      .catch(err => {\n        this.dataHandler(false);\n        throw err;\n      });\n  };\n\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n  render() {\n    const { loading } = this.state;\n    return (\n      <div className=\"container mg-20\">\n        {loading ? <CustomLoader /> : null}\n        <Breadcrumb>\n          <BreadcrumbItem  Label>\n            <Link to=\"/inventory_page\">Setup</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem  Label active>Add Subassembly</BreadcrumbItem>\n        </Breadcrumb>\n        <ProductForm submit={this.submit} />\n      </div>\n    );\n  }\n}\n\nProductForm.propTypes = {\n  addproduct: PropTypes.func.isRequired\n};\n\nexport default connect(\n  null,\n  { addproduct, getMasterItemList,getUomList }\n)(Product);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Breadcrumb, BreadcrumbItem, Table } from \"reactstrap\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport DataTable from \"../../Components/Table/DatatablePage\";\nimport axios from \"axios\";\n\nclass ViewProduct extends React.Component {\n  state = {\n    productlistvalue: \"\",\n    productMaterialslist: [],\n    productname: \"\"\n  };\n  componentDidMount() {\n    axios\n      .get(`${process.env.REACT_APP_BASE_URL}/product/getproduct/${this.props.match.params.id}`)\n      .then(res => {\n\n        console.log(res)\n        if (res.data.productlist.productdata.length > 0) {\n          let product = res.data.productlist.productdata[0]\n          let obj = {}, arr = []\n          const productname = product.productname;\n\n          for (var i = 0; i < product.productMaterial.length; i++) {\n            obj = {}\n            obj['materialitemtype'] = product.productname;\n            obj['materialname'] = product.productMaterial[i].productqty;\n            obj['materialuom'] = product.productsuom[i];\n            obj['productqty'] = product.productsqtyinmeter[i]\n            arr.push(obj)\n          }\n\n          this.setState({ 'productname': productname, 'productMaterialslist': arr });\n        }\n\n      },\n        error => {\n\n          alert(\"Server error\")\n        });\n\n    /* const productid = this.props.match.params.id;\n     const productlistvalue = this.props.productlistvalues[productid];\n     const productname = productlistvalue.productname.masteritemdescription;\n     const productMaterialslist = productlistvalue.productMaterial.map(\n       productMaterialData => {\n         let totalcost =\n           parseFloat(productMaterialData.productqty) *\n           parseFloat(productMaterialData.product_id.masteritemcostperunit);\n         let materialcostperunit =\n           productMaterialData.product_id.masteritemcostperunit;\n         return {\n           materialitemtype:\n             productMaterialData.product_id.masteritemtype.masteritemtypename,\n           materialname: productMaterialData.product_id.masteritemname,\n \n           materialdescription:\n             productMaterialData.product_id.masteritemdescription,\n \n           materialuom: productMaterialData.product_id.masteritemuom.uomname,\n           materialcostperunit:\n             materialcostperunit !== \"null\" ? materialcostperunit : \" \",\n           materialqty: productMaterialData.productqty,\n           totalcost: isNaN(totalcost) ? \" \" : totalcost\n         };\n       }\n     );\n     this.setState({ ...this.state, productMaterialslist, productname });*/\n  }\n  render() {\n    const { productMaterialslist, productname } = this.state;\n    let product;\n    if (productMaterialslist.length) {\n      product = productMaterialslist[0].materialitemtype;\n    }\n\n    const tablerows = productMaterialslist.map((itemlist, i) => {\n      return (\n        <tr key={i}>\n          {/* <td>{itemlist.materialitemtype}</td> */}\n          <td style={{textAlign:'left'}}>{itemlist.materialname}</td>\n          <td style={{textAlign:'left'}}>{itemlist.materialuom}</td>\n          <td style={{textAlign:'left'}}>{itemlist.productqty}</td>\n          \n          {/* <td>{itemlist.materialcostperunit}</td>\n          <td>{itemlist.materialqty}</td>\n          <td>{itemlist.totalcost}</td> */}\n        </tr>\n      );\n    });\n    return (\n      <div className=\"container mg-20\">\n        <div>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to=\"/inventory_page\">Setup</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link to=\"/viewproductlist\">View subassembly</Link>\n            </BreadcrumbItem>\n\n          </Breadcrumb>\n        </div>\n        {/* <h5>Product Name: {productname}</h5> */}\n        {/* <DataTable columnvalue={columnvalue} rowvalues={productMaterialslist} /> */}\n        <div style={{\n              marginBottom: 16}}>\n          <span\n            style={{\n              fontSize: 12,\n              fontWeight: 900,\n              marginRight: 16\n            }}>Product</span>\n          <span\n            style={{\n              fontSize: 12\n            }}>{product ? product : ''}</span>\n        </div>\n        <Table bordered style={{'width':'40%'}}>\n          <thead>\n            <tr>\n              {/* <th>Product Type</th> */}\n              <th>Subassembly</th>\n\n              <th>UOM</th>\n              <th>Quantity</th>\n              {/* (Meter) */}\n              {/* <th>Unit Cost</th>\n              <th>Item QTY</th>\n              <th>Total cost</th> */}\n            </tr>\n          </thead>\n          <tbody>{tablerows}</tbody>\n        </Table>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    productlistvalues: state.productlistvalues,\n    materiallistvalues: state.materiallistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  null\n)(ViewProduct);\n","import React from \"react\";\nimport { Alert, Button } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport { getproducts } from \"../../actions/Product\";\nimport DataTable from \"../../Components/Table/DatatablePage\";\nimport CustomLoader from \"../../Components/loader/loader\";\n\nclass ViewProductList extends React.Component {\n  state = {\n    loading: false,\n    count: \"\",\n    productlistvalues: \"\"\n  };\n  componentDidMount() {\n    this.props.getproducts();\n    this.dataHandler(true);\n  }\n  updateButton = id => {\n    let path = `/viewproduct/${id}`;\n    this.props.history.push(path);\n  };\n  componentWillReceiveProps(props) {\n    const productlist = Object.values(props.productlistvalues);\n    const productlistvalues = productlist.map((productdata, i) => {\n      console.log(productdata)\n      return {\n        materialname: productdata.productname,\n        view: (\n          <Button\n            Label\n            color=\"primary\"\n            onClick={() => {\n              this.updateButton(productdata.id);\n            }}\n          >\n            View Sub assembly\n          </Button>\n        )\n      };\n    });\n    const count = productlistvalues.length;\n    this.setState({ ...this.state, count, productlistvalues });\n    this.dataHandler(false);\n  }\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n  render() {\n    const { loading, count, productlistvalues } = this.state;\n    const columnvalue = [\n      {\n        label: \"Product Name\",\n        field: \"productname\",\n        sort: \"asc\",\n        width: 10\n      },\n      {\n        label: \"View\",\n        field: \"view\",\n        sort: \"asc\",\n        width: 10\n      }\n    ];\n    return (\n      <div className=\"container mg-20\">\n        {loading ? <CustomLoader /> : null}\n        <div>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to=\"/inventory_page\">Setup</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>View Products</BreadcrumbItem>\n          </Breadcrumb>\n        </div>\n        {count > 0 ? (\n          <DataTable columnvalue={columnvalue} \n          rowvalues={productlistvalues}\n          className=\"viewproductlist\" />\n        ) : null}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    productlistvalues: state.productlistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { getproducts }\n)(ViewProductList);\n","import { AvField, AvForm, AvGroup } from 'availity-reactstrap-validation';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport {\n  Alert, Button, Card,\n  CardBody,\n  CardHeader, Col, Label, Modal, ModalBody,\n  ModalFooter, ModalHeader, Row\n} from 'reactstrap';\n\nclass CustomerForm extends React.Component {\n  state = {\n    data: {\n      customernumber: '',\n      customername: '',\n      customercontactnumber: '',\n      customergstnumber: '',\n      customeraddress1: '',\n      customeraddress2: '',\n      city: '',\n      pincode: '',\n      state: '',\n      country: '',\n      codate: new Date().getTime(),\n      deliveryAddress: {\n        address1: '',\n        address2: '',\n        city: '',\n        pincode: '',\n        state: '',\n        country: ''\n      }\n    },\n    errors: {},\n    loading: false,\n    success: false,\n    visible: false,\n    sameAsBilling: false,\n    suppliercontactlistvalue: []\n  };\n  componentWillReceiveProps(props) {\n    const customerlistvalues = Object.keys(props.customerlistvalues);\n    const count = customerlistvalues.length;\n    const customernumber = count ? 1001 + count : 1001;\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        customernumber\n      }\n    });\n  }\n  onChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n  onDeliveryAddressChange = e => {\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        deliveryAddress: {\n          ...this.state.data.deliveryAddress,\n          [e.target.name]: e.target.value\n        }\n      }\n    });\n  };\n  sameAsBilling = e => {\n    let val = e.target.value === 'false' ? true : false;\n    this.setState({ ...this.state, sameAsBilling: val });\n    if (val) {\n      this.setState({\n        ...this.state,\n        data: {\n          ...this.state.data,\n          deliveryAddress: {\n            address1: this.state.data.customeraddress1,\n            address2: this.state.data.customeraddress2,\n            city: this.state.data.city,\n            pincode: this.state.data.pincode,\n            state: this.state.data.state,\n            country: this.state.data.country\n          }\n        }\n      });\n    }\n  };\n  handleValidSubmit = () => {\n    this.setState({ loading: true });\n    const { data } = this.state;\n    console.log(JSON.stringify(data));\n    this.props\n      .submit(data)\n      .then(data => {\n        this.setState({ success: true, loading: false, errors: {} });\n        this.onShowAlert();\n        this.myFormRef.reset();\n      })\n      .catch(err => {\n        this.setState({ errors: err.response.data.errors, loading: false });\n        this.onShowAlert();\n      });\n  };\n\n  onShowAlert = () => {\n    this.setState({ visible: true }, () => {\n      window.setTimeout(() => {\n        this.setState({ visible: false });\n      }, 5000);\n    });\n  };\n\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n\n  render() {\n    const {\n      data,\n      errors,\n      loading,\n      success,\n      visible,\n      sameAsBilling\n    } = this.state;\n    return (\n      <div>\n        <div>\n          {!!success ? (\n            // <Alert color=\"info\" isOpen={visible}>\n            //   Customer is added successfully.\n            // </Alert>\n            <Modal\n              isOpen={success}\n              toggle={this.toggle}\n              className={this.props.className}\n            >\n              <ModalHeader toggle={this.toggle}>Item Type</ModalHeader>\n              <ModalBody>Customer is added successfully</ModalBody>\n              <ModalFooter>\n                <Button color='primary' onClick={this.toggle}>\n                  Ok\n                </Button>\n              </ModalFooter>\n            </Modal>\n          ) : null}\n          {!!errors.customernumber ? (\n            <Alert color='danger' isOpen={visible}>\n              Customer Number should be unique value.\n            </Alert>\n          ) : null}\n        </div>\n        <AvForm\n          onValidSubmit={this.handleValidSubmit}\n          onInvalidSubmit={this.handleInvalidSubmit}\n          ref={el => (this.myFormRef = el)}\n        >\n          <Card>\n            <CardHeader>Customer Details</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='customernumber'>Customer Number</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      name='customernumber'\n                      type='number'\n                      id='customernumber'\n                      value={data.customernumber.toString()}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter Customer Number'\n                        },\n                        pattern: {\n                          value: '^[0-9]+$',\n                          errorMessage: 'Please enter valid Number'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='customername'>Customer Name</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      name='customername'\n                      type='text'\n                      id='customername'\n                      value={data.customername}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter Customer Name'\n                        }\n                    \n                        // pattern: {\n                        //   value: '^[a-zA-Z ]+$',\n                        //   errorMessage: 'Please enter valid Supplier Name'\n                        // }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='customercontactnumber'>Contact Number </Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      name='customercontactnumber'\n                      type='text'\n                      id='customercontactnumber'\n                      value={data.customercontactnumber}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter Customer contact number'\n                        },\n                        pattern: {\n                          value: '^[0-9]+$',\n                          errorMessage:\n                            'Your phone number must be composed only with numbers'\n                        },\n                        minLength: {\n                          value: 10,\n                          errorMessage:\n                            'Your phone number must be between 10 and 12 numbers'\n                        },\n                        maxLength: {\n                          value: 12,\n                          errorMessage:\n                            'Your phone number be between 10 and 12 numbers'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='customergstnumber'>Customer GSTN </Label>\n                    <AvField\n                      name='customergstnumber'\n                      type='text'\n                      id='customergstnumber'\n                      value={data.customergstnumber}\n                      onChange={this.onChange}\n                      validate={{\n                        minLength: {\n                          value: 15,\n                          errorMessage:\n                            'Customer GST Number should contain 15 characters'\n                        },\n                        maxLength: {\n                          value: 15,\n                          errorMessage:\n                            'Customer GST Number should contain 15 characters'\n                        },\n                        pattern: {\n                          value: '^[a-zA-z0-9]+$',\n                          errorMessage: 'Please enter valid GST Number'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n              </Row>\n              <Card>\n                <CardHeader>Billing Address</CardHeader>\n                <CardBody>\n                  <Row>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for='customeraddress1'>Address 1</Label>\n                        <AvField\n                          name='customeraddress1'\n                          type='text'\n                          id='customeraddress1'\n                          value={data.customeraddress1}\n                          onChange={this.onChange}\n                      \n                        />\n                      </AvGroup>\n                    </Col>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for='customeraddress2'>Address 2</Label>\n                        <AvField\n                          name='customeraddress2'\n                          type='text'\n                          id='customeraddress2'\n                          value={data.customeraddress2}\n                          onChange={this.onChange}\n                        \n                        />\n                      </AvGroup>\n                    </Col>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for='city'>City</Label>\n                        <AvField\n                          name='city'\n                          type='text'\n                          id='city'\n                          value={data.city}\n                          onChange={this.onChange}\n                          validate={{\n                            minLength: {\n                              value: 1,\n                              errorMessage:\n                                'city Name should contain between 1 to 50 characters'\n                            },\n                            maxLength: {\n                              value: 50,\n                              errorMessage:\n                                'city Name should contain between 1 to 50 characters'\n                            },\n                            pattern: {\n                              value: '^[a-zA-z ]+$',\n                              errorMessage: 'Please enter valid city Name'\n                            }\n                          }}\n                        />\n                      </AvGroup>\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for='pincode'>Pin Code</Label>\n                        <AvField\n                          name='pincode'\n                          type='text'\n                          id='pincode'\n                          value={data.pincode}\n                          onChange={this.onChange}\n                          validate={{\n                            minLength: {\n                              value: 6,\n                              errorMessage:\n                                'Pincode should contain atleast 6 characters'\n                            },\n                            maxLength: {\n                              value: 10,\n                              errorMessage:\n                                'Pincode should contain between 6 to 10 characters'\n                            },\n                            pattern: {\n                              value: '^[0-9]+$',\n                              errorMessage: 'Please enter valid PinCode'\n                            }\n                          }}\n                        />\n                      </AvGroup>\n                    </Col>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for='state'>State</Label>\n                        <AvField\n                          name='state'\n                          type='text'\n                          id='state'\n                          value={data.state}\n                          onChange={this.onChange}\n                          validate={{\n                            minLength: {\n                              value: 1,\n                              errorMessage:\n                                'State Name should contain between 1 to 50 characters'\n                            },\n                            maxLength: {\n                              value: 50,\n                              errorMessage:\n                                'State Name should contain between 1 to 50 characters'\n                            },\n                            pattern: {\n                              value: '^[a-zA-z ]+$',\n                              errorMessage: 'Please enter valid State Name'\n                            }\n                          }}\n                        />\n                      </AvGroup>\n                    </Col>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for='country'>Country</Label>\n                        <AvField\n                          name='country'\n                          type='text'\n                          id='country'\n                          value={data.country}\n                          onChange={this.onChange}\n                          validate={{\n                            minLength: {\n                              value: 1,\n                              errorMessage:\n                                'Country Name should contain between 1 to 50 characters'\n                            },\n                            maxLength: {\n                              value: 50,\n                              errorMessage:\n                                'Country Name should contain between 1 to 50 characters'\n                            },\n                            pattern: {\n                              value: '^[a-zA-z ]+$',\n                              errorMessage: 'Please enter valid Country Name'\n                            }\n                          }}\n                        />\n                      </AvGroup>\n                    </Col>\n                  </Row>\n                </CardBody>\n              </Card>\n              {/* Delivery Address */}\n              <Card>\n                <CardHeader>\n                  Delivery Address ({' '}\n                  <input\n                    type='checkbox'\n                    className='same_checkbox'\n                    value={sameAsBilling}\n                    name='same'\n                    onChange={this.sameAsBilling}\n                  ></input>{' '}\n                  Same as billing address)\n                </CardHeader>\n                <CardBody>\n                  <Row>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for='address1'>Address 1</Label>\n                        <AvField\n                          name='address1'\n                          type='text'\n                          id='customeraddress1'\n                          value={data.deliveryAddress.address1}\n                          onChange={this.onDeliveryAddressChange}\n                        \n                        />\n                      </AvGroup>\n                    </Col>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for='address2'>Address 2</Label>\n                        <AvField\n                          name='address2'\n                          type='text'\n                          id='customeraddress2'\n                          value={data.deliveryAddress.address2}\n                          onChange={this.onDeliveryAddressChange}\n                         \n                        />\n                      </AvGroup>\n                    </Col>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for='city'>City</Label>\n                        <AvField\n                          name='city'\n                          type='text'\n                          id='city'\n                          value={data.deliveryAddress.city}\n                          onChange={this.onDeliveryAddressChange}\n                          validate={{\n                            minLength: {\n                              value: 1,\n                              errorMessage:\n                                'city Name should contain atleast 1 characters'\n                            },\n                            maxLength: {\n                              value: 50,\n                              errorMessage:\n                                'city Name should contain between 1 to 50 characters'\n                            },\n                            pattern: {\n                              value: '^[a-zA-z ]+$',\n                              errorMessage: 'Please enter valid city Name'\n                            }\n                          }}\n                        />\n                      </AvGroup>\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for='pincode'>Pin Code</Label>\n                        <AvField\n                          name='pincode'\n                          type='text'\n                          id='pincode'\n                          value={data.deliveryAddress.pincode}\n                          onChange={this.onDeliveryAddressChange}\n                          validate={{\n                            minLength: {\n                              value: 6,\n                              errorMessage:\n                                'Pincode should contain atleast 6 characters'\n                            },\n                            maxLength: {\n                              value: 10,\n                              errorMessage:\n                                'Pincode should contain between 6 to 10 characters'\n                            },\n                            pattern: {\n                              value: '^[0-9]+$',\n                              errorMessage: 'Please enter valid PinCode'\n                            }\n                          }}\n                        />\n                      </AvGroup>\n                    </Col>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for='state'>State</Label>\n                        <AvField\n                          name='state'\n                          type='text'\n                          id='state'\n                          value={data.deliveryAddress.state}\n                          onChange={this.onDeliveryAddressChange}\n                          validate={{\n                            minLength: {\n                              value: 1,\n                              errorMessage:\n                                'State Name should contain between 1 to 50 characters'\n                            },\n                            maxLength: {\n                              value: 50,\n                              errorMessage:\n                                'State Name should contain between 1 to 50 characters'\n                            },\n                            pattern: {\n                              value: '^[a-zA-z ]+$',\n                              errorMessage: 'Please enter valid State Name'\n                            }\n                          }}\n                        />\n                      </AvGroup>\n                    </Col>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for='country'>Country</Label>\n                        <AvField\n                          name='country'\n                          type='text'\n                          id='country'\n                          value={data.deliveryAddress.country}\n                          onChange={this.onDeliveryAddressChange}\n                          validate={{\n                            minLength: {\n                              value: 1,\n                              errorMessage:\n                                'Country Name should contain between 1 to 50 characters'\n                            },\n                            maxLength: {\n                              value: 50,\n                              errorMessage:\n                                'Country Name should contain between 1 to 50 characters'\n                            },\n                            pattern: {\n                              value: '^[a-zA-z ]+$',\n                              errorMessage: 'Please enter valid Country Name'\n                            }\n                          }}\n                        />\n                      </AvGroup>\n                    </Col>\n                  </Row>\n                </CardBody>\n              </Card>\n              <div className='mg-20'>\n                <Button\n                  color='primary'\n                  disabled={loading}\n                  className='lgn-loader'\n                >\n                  Submit\n                  {/* {loading} */}\n                </Button>\n              </div>\n            </CardBody>\n          </Card>\n        </AvForm>{' '}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    customerlistvalues: state.customerlistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  null\n)(CustomerForm);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport DataTable from \"../../../Components/Table/DatatablePage\";\nimport DatePicker from \"react-datepicker\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport {\n  Card,\n  CardBody,\n  CardHeader,\n  Row,\n  Cols,\n  Label,\n  Button,\n  Alert,\n  Col\n} from \"reactstrap\";\nimport CustomLoader from \"../../../Components/loader/loader\";\n\nclass ViewCustomerList extends React.Component {\n  state = {\n    data: {\n      searchcustomername: '',\n      searchfromdate: null,\n      searchtodate: null\n    },\n    count: 0,\n    customerlistvalues: [],\n    backupcustomerlistvalues: [],\n    fromdatetimestamp: '',\n    todatetimestamp: '',\n    loading: false\n  };\n\n  componentDidMount = () => {\n    this.dataHandler(true);\n  };\n\n  componentWillReceiveProps(props) {\n    const customerlistvalues = Object.values(props.customerlistvalues);\n    const count = customerlistvalues.length;\n    const customervalues = customerlistvalues.map(customerdata => {\n      return {\n        // id: customerdata.id,\n        // customernumber: customerdata.customernumber,\n        customername: customerdata.customername,\n        customercontactnumber: customerdata.customercontactnumber != '' ? customerdata.customercontactnumber : '-',\n        codate: customerdata.codate != undefined ? customerdata.codate : '-',\n\n        Transaction: (\n          <Button\n            // style={{ fontSize: '0.8rem' }}\n            Label\n            color=\"primary\"\n            onClick={() => {\n              localStorage.setItem('customername', customerdata.customername)\n              this.getTransaction(customerdata.id);\n            }}\n          >\n            Transaction\n          </Button>\n        )\n      };\n    });\n    this.setState({ customerlistvalues: customervalues, backupcustomerlistvalues: customervalues, count });\n    this.setState({ customerlistvalues: customervalues, count });\n    this.dataHandler(false);\n  }\n\n  updateButton = id => {\n    let path = `/updatecustomer/${id}`;\n    this.props.history.push(path);\n  };\n\n  getTransaction = id => {\n    this.props.history.push(`/transaction/${id}`);\n  }\n\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n\n\n  onChange = e => {\n    console.log(e)\n    this.setState({\n      //data: { ...this.state.data, [e.target.name]: e.target.value }\n      data: {\n        searchcustomername: e.target.value,\n        searchfromdate: null,\n        searchtodate: null\n      },\n      fromdatetimestamp: '',\n      todatetimestamp: ''\n    }, () => {\n      this.filterCustomer(this.state.data.searchcustomername)\n    });\n\n  };\n\n  getDateByMMDDYYYY(date) {\n    let searchdate = date != '-' ?\n      (new Date(date).getMonth() + 1 < 10 ? \"0\" + (new Date(date).getMonth() + 1) : new Date(date).getMonth() + 1)\n      + \"/\" +\n      (new Date(date).getDate() < 10 ? \"0\" + new Date(date).getDate() : new Date(date).getDate()) + \"/\" + new Date(date).getFullYear() : '-'\n    return searchdate\n  }\n\n  handleDateChanges(dateName, dateValue) {\n\n    let { data, fromdatetimestamp, todatetimestamp } = this.state;\n    if (dateName === 'startDateTime') {\n      data.searchfromdate = dateValue;\n      fromdatetimestamp = new Date(this.getDateByMMDDYYYY(dateValue)).getTime()\n    } else {\n      data.searchtodate = dateValue;\n      todatetimestamp = new Date(this.getDateByMMDDYYYY(dateValue)).getTime()\n    }\n    data.searchcustomername = ''\n    this.setState({\n      data,\n      fromdatetimestamp,\n      todatetimestamp\n    }, () => {\n      if (this.state.data.searchfromdate != null && this.state.data.searchtodate != null) {\n        this.filterBydates(this.state.fromdatetimestamp, this.state.todatetimestamp)\n      }\n      else {\n        this.initializeCustomers();\n      }\n    });\n  };\n\n  filterCustomer(ev) {\n    this.initializeCustomers();\n    setTimeout(() => {\n      const val = ev\n      if (val && val.trim() != '') {\n        let filtereddata = this.state.customerlistvalues.filter((item) => {\n          return (item.customername.toLowerCase().indexOf(val.toLowerCase()) > -1\n          )\n        })\n        this.setState({\n          customerlistvalues: filtereddata\n        })\n      }\n\n    })\n  }\n\n  filterBydates(date1, date2) {\n    this.initializeCustomers();\n    setTimeout(() => {\n\n      if (this.state.data.searchfromdate != null && this.state.data.searchtodate != null) {\n        let filtereddata = this.state.customerlistvalues.filter((customer) => {\n          let comparedate =\n            (new Date(parseInt(customer.codate)).getMonth() + 1 < 10 ? \"0\" + (new Date(parseInt(customer.codate)).getMonth() + 1) : new Date(parseInt(customer.codate)).getMonth() + 1)\n            + \"/\" + (new Date(parseInt(customer.codate)).getDate() < 10 ? \"0\" + new Date(parseInt(customer.codate)).getDate() : new Date(parseInt(customer.codate)).getDate())\n            + \"/\" + new Date(parseInt(customer.codate)).getFullYear()\n\n          return (new Date(this.getDateByMMDDYYYY(comparedate)).getTime() >= date1 && new Date(this.getDateByMMDDYYYY(comparedate)).getTime() <= date2)\n\n        })\n        this.setState({\n          customerlistvalues: filtereddata\n        })\n      }\n\n    })\n  }\n\n  initializeCustomers() {\n    this.setState({\n      customerlistvalues: this.state.backupcustomerlistvalues\n    })\n  }\n\n\n  render() {\n    const { count, customerlistvalues, data, loading } = this.state;\n\n    const customerBlock = customerlistvalues.map(customer => {\n      customer['codate2'] = customer.codate != '-' ? (new Date(parseInt(customer.codate)).getDate() < 10 ? \"0\" + new Date(parseInt(customer.codate)).getDate() : new Date(parseInt(customer.codate)).getDate()) +\n        \"/\" + (new Date(parseInt(customer.codate)).getMonth() + 1 < 10 ? \"0\" + (new Date(parseInt(customer.codate)).getMonth() + 1) : new Date(parseInt(customer.codate)).getMonth() + 1) + \"/\" + new Date(parseInt(customer.codate)).getFullYear() : '-'\n      return (\n        <tr key={customer.customernumber}>\n\n          <td style={{'width' : '15%'}}>{customer.customername}</td>\n          {/* <td style={{ textAlign: 'center' }}>{customer.customernumber}</td> */}\n          <td style={{ textAlign: 'center','width' : '12%' }}>{customer.customercontactnumber}</td>\n\n          <td style={{ textAlign: 'center','width' : '8%' }}>{customer.Transaction}</td>\n        </tr>\n      )\n    });\n\n    return (\n      <div className=\"mg-t-20\">\n        {loading ? <CustomLoader /> : null}\n        {count > 0 ? (\n          <div>\n            {/* <DataTable\n              columnvalue={columnvalue}\n              rowvalues={customerlistvalues}\n              className=\"customerlist\"\n            /> */}\n\n            {/* <Card>\n           \n            <CardBody> */}\n            <Row>\n              <Col sm={3}>\n                <Label className='small-font-size' for=\"searchcustomername\">Search Customer Name</Label>\n\n\n                <input\n                  name=\"searchcustomername\"\n                  type=\"text\"\n                  id=\"searchcustomername\"\n                  className=\"form-control small-font-size\"\n                  value={data.searchcustomername}\n\n                  onChange={this.onChange}\n                />\n\n              </Col>\n\n\n\n              {/* <Col sm={3}>\n                  <Label for=\"searchfromdate\">Transaction from date</Label>\n                \n\n                     <DatePicker\n                    selected={data.searchfromdate}\n     \n                    onChange={date => this.handleDateChanges('startDateTime', date)}\n                    className=\"form-control\"\n                    dateFormat=\"dd/MM/yyyy\"\n                    id=\"searchfromdate\"\n                    isClearable={true}\n                  />\n                 \n                </Col>\n\n                 <Col sm={3}>\n                  <Label for=\"searchtodate\">Transaction to date</Label>\n                 \n                  \n                  <DatePicker\n                    selected={data.searchtodate}\n                    onChange={date => this.handleDateChanges('endDateTime', date)}\n                    className=\"form-control\"\n                    isClearable={true}\n                    dateFormat=\"dd/MM/yyyy\"\n                    id=\"searchtodate\"\n                  />\n                 \n                </Col> */}\n\n            </Row>\n            {/* </CardBody>\n                </Card> */}\n\n            <table className=\"table table-bordered table-sm table-striped dataTable\" style={{ 'marginTop': '10px','width': '40%' }}>\n              <thead>\n                <tr>\n\n                  <th style={{'width': '15%'}}>Customer Name</th>\n                  {/* <th>Customer Number</th> */}\n                  <th style={{'width': '12%'}}>Contact</th>\n                  <th style={{'width': '8%'}}>Transaction</th>\n                </tr>\n              </thead>\n              <tbody>\n                {customerBlock}\n              </tbody>\n            </table>\n\n\n\n\n          </div>\n        ) : (\n            <div>\n              <Alert color=\"info\" Label>Loading Customer data</Alert>\n            </div>\n          )}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    customerlistvalues: state.customerlistvalues\n  };\n}\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    null\n  )(ViewCustomerList)\n);\n","import axios from \"axios\";\n\nexport default {\n  customer: {\n    addcustomer: data => {\n      return axios\n        .post(`${process.env.REACT_APP_BASE_URL}/customer/addcustomer`, {\n          data\n        })\n        .then(res => {\n          return res.data.customerdata;\n        });\n    },\n    getcustomer: () => {\n      return axios\n        .get(`${process.env.REACT_APP_BASE_URL}/customer/getcustomer`)\n        .then(res => {\n          return res.data.customerlist;\n        });\n    },\n    updatecustomer: data => {\n      return axios\n        .patch(`${process.env.REACT_APP_BASE_URL}/customer/updatecustomer`, {\n          data\n        })\n        .then(res => {\n          return res.data.success;\n        });\n    }\n  },\n  customerTransaction: {\n    getcustomerTransaction: (id) => {\n      return axios\n        .get(`${process.env.REACT_APP_BASE_URL}/customerTransaction/getcustomertransaction/${id}`)\n        .then(res => {\n          \n          return res.data.customerlist;\n        });\n    },\n  \n  }\n};\n","import { normalize } from \"normalizr\";\nimport api from \"../Services/customerapi\";\nimport {\n  ADD_CUSTOMER_CONTACT,\n  CUSTOMER_CONTACT_FETCHED,\n  CUSTOMERTRANSACTION_FETCHED\n} from \"../Services/types\";\nimport { customerListSchema,customerTransactionSchema } from \"../Schemas/schemas\";\n\nconst customerCreated = customerlist => {\n  return {\n    type: ADD_CUSTOMER_CONTACT,\n    customerlist\n  };\n};\n\nconst customerListFetched = customerlist => {\n\n  return {\n    type: CUSTOMER_CONTACT_FETCHED,\n    customerlist\n  };\n};\n\nconst customerTransactionFetched = customerlist => {\n\n  return {\n    type: CUSTOMERTRANSACTION_FETCHED,\n    customerlist\n  };\n};\n\nexport const addCustomerContact = data => {\n  return dispatch => {\n    return api.customer.addcustomer(data).then(customerlistvalues => {\n      return dispatch(\n        customerCreated(normalize(customerlistvalues, customerListSchema))\n      );\n    });\n  };\n};\n\nexport const getCustomerList = () => {\n  return dispatch => {\n    return api.customer.getcustomer().then(customerlist => {\n      const customerlistvalue = customerlist.customerdata;\n      return dispatch(\n        customerListFetched(normalize(customerlistvalue, [customerListSchema]))\n      );\n    });\n  };\n};\n\nexport const getCustomerTransaction = (id) => {\n  return dispatch => {\n    return api.customerTransaction.getcustomerTransaction(id).then(customerlist => {\n      const customertransationvalues = customerlist.customerdata;\n      console.log(customertransationvalues)\n      if(customertransationvalues.length != 0){\n        return dispatch(\n          customerTransactionFetched(normalize(customertransationvalues, [customerTransactionSchema]))\n        );\n      }\n      // console.log(normalize(customertransationvalues, [customerTransactionSchema]))\n\n    });\n  };\n};\n\nexport const updateCustomerContact = data => {\n  return dispatch => {\n    return api.customer.updatecustomer(data).then(customerlistvalues => {\n      return customerlistvalues;\n      // return dispatch(\n      //   customerCreated(normalize(customerlistvalues, customerListSchema))\n      // );\n    });\n  };\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport AddCustomerForm from \"./AddCustomer/CustomerForm/CustomerForm\";\nimport ViewCustomerList from \"./ViewCustomerList\";\nimport {\n  addCustomerContact,\n  getCustomerList\n} from \"../../../actions/customerContact\";\nimport CustomLoader from \"../../../Components/loader/loader\";\n\nclass Customer extends React.Component {\n  state = {\n    loading: false\n  };\n  componentDidMount = () => {\n    this.props.getCustomerList();\n  };\n  submit = data => {\n    this.dataHandler(true);\n    return this.props\n      .addCustomerContact(data)\n      .then(data => {\n        this.dataHandler(false);\n        return data;\n      })\n      .catch(err => {\n        this.dataHandler(false);\n        throw err;\n      });\n  };\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n  render() {\n    const { loading } = this.state;\n    return (\n      <div className=\"container mg-t-20\">\n        {loading ? <CustomLoader /> : null}\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to=\"/admin_dashboard\">Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/inventory_page\">Setup</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/customer\">Customer</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>customer</BreadcrumbItem>\n        </Breadcrumb>\n        <div>\n          <AddCustomerForm submit={this.submit} />\n        </div>\n        {/* <div>\n          <ViewCustomerList />\n        </div> */}\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  { addCustomerContact, getCustomerList }\n)(Customer);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport {\n    getCustomerTransaction\n} from \"../../../actions/customerContact\";\nimport CustomLoader from \"../../../Components/loader/loader\";\nimport {\n  Card,\n  CardBody,\n  CardHeader,\n  Row,\n  Col,\n  Button,\n  Label,\n  Alert,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from \"reactstrap\";\nimport axios from \"axios\";\nimport DatePicker from \"react-datepicker\";\n\n\nclass Transaction extends React.Component {\n  \n  state = {\n    data: {\n      enquirydate:null,\n      quotationdate:null,\n      podate:null\n    },\n    enquirytimestamp:null,\n    quotationtimestamp:null,\n    podatetimestamp:null,\n    userid : this.props.match.params.id,\n    loading: false,\n    count:0,\n    success: false,\n    message:'',\n    ponum:'',\n    podate:'',\n    customerName:localStorage.getItem('customername') !=null ? localStorage.getItem('customername') : '',\n    transactionID:'',\n    customertransationvalues:[],\n    backupcustomertransationvalues:[]\n  };\n  componentDidMount = () => {\n    // this.props.match.params.id\n    // 5d7245b928e146194b806e38\n    \n    this.getTransaction(this.props.match.params.id);\n  };\n\n  componentWillReceiveProps(props) {\n    let customervalues = Object.values(props.customertransationvalues).map(customerdata => {\n      return {\n        customerid: customerdata.customerid,\n        Transactionhistory: customerdata.Transactionhistory,\n        id:new Date().getTime()\n      };\n    });\n    if(customervalues.length > 0){\n      customervalues = customervalues.filter((item) =>{\n        return item.customerid == this.props.match.params.id\n      })\n      this.setState({ \n        customertransationvalues: customervalues,\n        backupcustomertransationvalues:customervalues,\n        count:customervalues.length\n      }, () => {\n        console.log(JSON.stringify(this.state.backupcustomertransationvalues))\n      })\n    }\n  }\n\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n\n  \n  initializeTransactions = () => {\n    this.setState({\n      customertransationvalues:this.state.backupcustomertransationvalues\n    },() =>{\n      console.log(this.state.backupcustomertransationvalues)\n    })\n  }\n\n  newEnquiry(){\n    localStorage.setItem('ids',this.state.userid)\n    this.setState({ success: true, message:'Are you sure want to add new enquiry' });\n  }\n\n  getTransaction(id){\n    this.dataHandler(true)\n    axios\n    .get(`${process.env.REACT_APP_BASE_URL}/customerTransaction/getcustomertransaction/` + id)\n    .then(res => {\n      this.dataHandler(false)\n      if(res.data.customerlist.customerdata.length > 0){\n        let customervalues = res.data.customerlist.customerdata;\n        if(customervalues.length > 0){\n          customervalues = customervalues.filter((item) =>{\n            return item.customerid == this.props.match.params.id\n          })\n          this.setState({ customertransationvalues: customervalues,\n            backupcustomertransationvalues:customervalues,\n            count:customervalues.length}, () => {\n            console.log(JSON.stringify(this.state.customertransationvalues))\n          })\n        }\n      }\n    },\n    error =>{\n      this.dataHandler(false)\n      this.setState({ success: false, message:'Server error.' });\n    });\n  }\n\n  addenquiry(){\n    this.dataHandler(true)\n    let date = (new Date().getDate() < 10 ? \"0\" + new Date().getDate() : new Date().getDate()) + \n    \"/\" + ( new Date().getMonth() + 1 < 10 ? \"0\" + (new Date().getMonth() + 1) : new Date().getMonth() + 1) + \"/\" + new Date().getFullYear();\n\n     axios\n    .post(`${process.env.REACT_APP_BASE_URL}/customerTransaction/addcustomertransaction`,\n    {\n      \"customerid\":this.state.userid,\n      \"enq_Date\" : date\n    })\n    .then(res => {\n      this.getTransaction(this.state.userid)\n    },\n    error =>{\n      this.dataHandler(false)\n      this.setState({ success: false, message:'Server error.' });\n    });\n  }\n\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n\n  poreceived = value =>{\n    this.setState({\n      transactionID:value._id,\n      ponum:'',\n      podate:''\n    },() =>{\n      this.setState({ success: true, message:'update transaction' });\n    })\n  }\n\n  updatePO = () => {\n    if(this.state.ponum != '' && this.state.podate != ''){\n      let podates = this.state.podate.split('-')[2] + '/' + this.state.podate.split('-')[1] + '/' + this.state.podate.split('-')[0]\n      let obj = {}\n      obj['_id'] = this.state.transactionID\n      obj['po'] = podates\n      obj['ponum'] = this.state.ponum\n      this.dataHandler(true)\n      axios\n      .put(`${process.env.REACT_APP_BASE_URL}/customerTransaction/updatecustomertransaction`,obj)\n      .then(res => {\n        this.toggle()\n        this.getTransaction(this.state.userid)\n      },\n      error =>{\n        this.dataHandler(false)\n        this.toggle()\n        this.setState({ success: false, message:'Server error.' });\n      });\n    }\n    else\n      this.toggle()\n  }\n\n  onChange1 = e => {\n    this.setState({\n      'ponum' : e.target.value\n    });\n  }\n\n  onChange2 = e => {\n    console.log(e.target.value)\n    this.setState({\n      'podate' : e.target.value\n    });\n  }\n\n  getDateByMMDDYYYY(date){\n    let searchdate = date != '-' ? \n\n    (new Date(date).getDate() < 10 ? \"0\" + new Date(date).getDate() : new Date(date).getDate()) + \"/\" +\n    ( new Date(date).getMonth() + 1 < 10 ? \"0\" + (new Date(date).getMonth() + 1) : new Date(date).getMonth() + 1)\n    + \"/\" + new Date(date).getFullYear() : '-'\n    return searchdate\n  }\n\n    \n  handleDateChanges(dateName, dateValue) {\n\n    let { data,enquirytimestamp,quotationtimestamp,podatetimestamp } = this.state;\n    if (dateName === 'enquirydate') {\n      data.enquirydate = dateValue;\n      enquirytimestamp = this.getDateByMMDDYYYY(dateValue)\n    }\n    this.setState({\n      data,\n      enquirytimestamp\n    }, () => {\n      if (this.state.data.enquirydate != null) {\n        this.filterBydates()\n      }\n      else{\n        this.initializeTransactions();\n      }\n    });\n  };\n\n  filterBydates(){\n    this.initializeTransactions();\n    setTimeout(() => {\n        let filtereddata = this.state.customertransationvalues.filter((item) => {\n            return (this.state.enquirytimestamp != null && item.enq_Date == this.state.enquirytimestamp)\n            \n        })\n        this.setState({\n          customertransationvalues:filtereddata\n        })\n    })\n  }\n\n  render() {\n    let modaldata;\n\n    const { customertransationvalues,loading,count,success,message,data,customerName } = this.state;\n    if(message == 'update transaction' && success){\n      modaldata =  (\n        <Modal\n        isOpen={success}\n        toggle={this.toggle}\n        className={this.props.className}\n      >\n        <ModalHeader toggle={this.toggle}>Add customer PO</ModalHeader>\n        <ModalBody>\n          <input type=\"text\" className=\"form-control\" placeholder=\"PO Number\" value={this.state.ponum} style={{'marginBottom': '15px'}} onChange={this.onChange1}/>\n          <input type=\"date\" className=\"form-control\" placeholder=\"PO Number\" value={this.state.podate} onChange={this.onChange2}/>\n        </ModalBody>\n        <ModalFooter>\n         <Button color=\"primary\" onClick={this.toggle}>\n            Cancel\n          </Button>\n          <Button color=\"primary\" onClick={this.updatePO}>\n            Update\n          </Button>\n        </ModalFooter>\n      </Modal>\n      )\n    }\n    else if(message == 'Server error.' && !success){\n      modaldata =  (\n        <Modal\n        isOpen={success}\n        toggle={this.toggle}\n        className={this.props.className}\n      >\n        <ModalHeader toggle={this.toggle}>Transaction</ModalHeader>\n        <ModalBody>{this.state.message}</ModalBody>\n        <ModalFooter>\n         <Button color=\"primary\" onClick={this.toggle}>\n            Close\n          </Button>\n\n        </ModalFooter>\n      </Modal>\n      )\n    }\n\n\n\n    const customerTransactionBlock = customertransationvalues.map((customer,index) => {\n      \n      let enquiry = '',quote = '',PO=(<td style={{textAlign:'center'}}>---</td>),invoice=(<td style={{textAlign:'center'}}>---</td>),dc=(<td style={{textAlign:'center'}}>---</td>)\n      enquiry = customer.enq_Date !=undefined ? (<td style={{textAlign:'center'}}> {customer.enq_Date}</td>) : (<td style={{textAlign:'center'}}>---</td>)\n      quote = customer.quotation !=undefined && customer.quotation != \"\" ? (<td style={{textAlign:'center'}}><b style={{ 'fontWeight' : 'bold'}}>{customer.Qno} </b> <br/>{customer.quotation}</td>) : (<td style={{textAlign:'center'}}>---</td>)\n      PO = customer.po !=undefined && customer.po != \"\" ? (<td style={{textAlign:'center'}}><b style={{ 'fontWeight' : 'bold'}}>{customer.ponum} </b> <br/> {customer.po}</td>) \n      : (<td style={{textAlign:'center'}}> \n           Customer PO not reveived<br/>\n           <Button color=\"primary\" onClick={() => this.poreceived(customer)} style={{fontSize: '12px'}}>\n            Add customer PO\n          </Button>\n      </td>)\n\n      if(customer.quotation == ''){\n        PO = (<td style={{textAlign:'center'}}>---</td>)\n      }\n\n      \n      return (\n        \n        <tr>\n          {/* <td></td>\n          {enquiry} */}\n          {quote}\n          {PO}\n          {invoice}\n          {dc}\n\n          </tr>\n             \n      )\n \n    })\n\n\n\n    return (\n      <div className=\"container mg-t-20\">\n        {loading ? <CustomLoader /> : null}\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to=\"/admin_dashboard\">Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/customerlist\">CRM</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>{customerName}</BreadcrumbItem>\n        </Breadcrumb>\n     \n\n            {modaldata}\n \n        <h5 style={{ 'fontWeight': 'bold','margin': '15px'}}>{count} transaction found.</h5>\n        {customertransationvalues.length > 0 ?\n        (\n\n        <div>\n{/*           \n          <Row style={{ 'width': '75%','marginLeft': '9%'}}>\n                <Col sm={3} >\n                    <Label for=\"enquirydate\">Search enquiry date</Label>\n                    \n\n                      <DatePicker\n                    selected={data.enquirydate}\n\n                    onChange={date => this.handleDateChanges('enquirydate', date)}\n                    className=\"form-control\"\n                    dateFormat=\"dd/MM/yyyy\"\n                    id=\"enquirydate\"\n                    isClearable={true}\n                  />\n                 \n                </Col>\n\n        \n\n                \n\n                </Row> */}\n\n            <table className=\"table table-bordered table-sm table-striped dataTable\" style={{'marginTop':'10px', 'width': '75%','marginLeft': '10%','background':'#fff'}}>\n\n              <tr>\n                {/* <th></th>\n                <th>Enquiry</th> */}\n                <th>Quotation</th>\n                <th>PO</th>\n                <th>Invoice</th>\n                <th>Delivary challan</th>\n                </tr>\n                {customerTransactionBlock}\n              </table>\n          </div>\n        ) : null\n       }\n      </div>\n    );\n  }\n}\n\n\n\nfunction mapStateToProps(state) {\n  return {\n    customertransationvalues: state.customertransationvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { getCustomerTransaction }\n)(Transaction);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport {\n  Card,\n  CardBody,\n  CardHeader,\n  Row,\n  Col,\n  Button,\n  Label,\n  Alert,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from \"reactstrap\";\n\nclass UpdateCustomerForm extends React.Component {\n  state = {\n    data: {\n      id: \"\",\n      customernumber: \"\",\n      customername: \"\",\n      customercontactnumber: \"\",\n      customergstnumber: \"\",\n      customeraddress1: \"\",\n      customeraddress2: \"\",\n      city: \"\",\n      pincode: \"\",\n      state: \"\",\n      country: \"\",\n      deliveryAddress: {\n        address1: '',\n        address2: '',\n        city: '',\n        pincode: '',\n        state: '',\n        country: ''\n      }\n    },\n    errors: {},\n    loading: false,\n    success: false,\n    visible: false,\n    suppliercontactlistvalue: []\n  };\n  componentDidMount() {\n    const id = this.props.id;\n    const data = this.props.customerlistvalues[id];\n    this.setState({ ...this.state, data });\n  }\n  componentWillReceiveProps(props) {\n    const id = props.id;\n    const data = props.customerlistvalues[id];\n    this.setState({ ...this.state, data });\n  }\n  onChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n  onDeliveryAddressChange = e => {\n    this.setState({ ...this.state, data: {\n      ...this.state.data,\n      deliveryAddress:{\n        ...this.state.data.deliveryAddress,\n        [e.target.name] : e.target.value\n      }\n    } });\n  };\n  handleValidSubmit = () => {\n    this.setState({ loading: true });\n    const { data } = this.state;\n    this.props\n      .submit(data)\n      .then(data => {\n        this.setState({ success: true, loading: false, errors: {} });\n        this.onShowAlert();\n        // this.myFormRef.reset();\n      })\n      .catch(err => {\n        this.setState({ errors: err.response.data.errors, loading: false });\n        this.onShowAlert();\n      });\n  };\n\n  onShowAlert = () => {\n    this.setState({ visible: true }, () => {\n      window.setTimeout(() => {\n        this.setState({ visible: false });\n      }, 5000);\n    });\n  };\n\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n\n  render() {\n    const { data, errors, loading, success, visible } = this.state;\n    return (\n      <div className=\"container mg-t-20\">\n        <div>\n          {!!success ? (\n            // <Alert color=\"info\" isOpen={visible}>\n            //   Customer is Updated successfully.\n            // </Alert>\n            <Modal\n              isOpen={success}\n              toggle={this.toggle}\n              className={this.props.className}\n            >\n              <ModalHeader toggle={this.toggle}>Item Type</ModalHeader>\n              <ModalBody>Customer is Updated successfully.</ModalBody>\n              <ModalFooter>\n                <Button color=\"primary\" onClick={this.toggle}>\n                  Ok\n                </Button>\n              </ModalFooter>\n            </Modal>\n          ) : null}\n          {!!errors.customernumber ? (\n            <Alert color=\"danger\" isOpen={visible}>\n              Customer Number should be unique value.\n            </Alert>\n          ) : null}\n        </div>\n        <AvForm\n          onValidSubmit={this.handleValidSubmit}\n          onInvalidSubmit={this.handleInvalidSubmit}\n          ref={el => (this.myFormRef = el)}\n        >\n          <Card>\n            <CardHeader>Customer details</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"customernumber\">Customer Number</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      name=\"customernumber\"\n                      type=\"number\"\n                      id=\"customernumber\"\n                      value={data.customernumber}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: \"Please enter Customer Number\"\n                        },\n    \n                        pattern: {\n                          value: \"^[0-9]+$\",\n                          errorMessage: \"Please enter valid Number\"\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"customername\">Customer Name</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      name=\"customername\"\n                      type=\"text\"\n                      id=\"customername\"\n                      value={data.customername}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: \"Please enter Customer Name\"\n                        },\n                    \n                        pattern: {\n                          value: \"^[a-zA-Z ]+$\",\n                          errorMessage: \"Please enter valid Supplier Name\"\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"customercontactnumber\">Contact Number </Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      name=\"customercontactnumber\"\n                      type=\"text\"\n                      id=\"customercontactnumber\"\n                      value={data.customercontactnumber}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: \"Please enter Customer contact number\"\n                        },\n                        pattern: {\n                          value: \"^[0-9]+$\",\n                          errorMessage:\n                            \"Your phone number must be composed only with numbers\"\n                        },\n                        minLength: {\n                          value: 10,\n                          errorMessage:\n                            \"Your phone number must be between 10 and 12 numbers\"\n                        },\n                        maxLength: {\n                          value: 12,\n                          errorMessage:\n                            \"Your phone number be between 10 and 12 numbers\"\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"customergstnumber\">Customer GSTN </Label>\n                    <AvField\n                      name=\"customergstnumber\"\n                      type=\"text\"\n                      id=\"customergstnumber\"\n                      value={data.customergstnumber}\n                      onChange={this.onChange}\n                      validate={{\n                        minLength: {\n                          value: 15,\n                          errorMessage:\n                            \"Customer GST Number should contain 15 characters\"\n                        },\n                        maxLength: {\n                          value: 15,\n                          errorMessage:\n                            \"Customer GST Number should contain 15 characters\"\n                        },\n                        pattern: {\n                          value: \"^[a-zA-z0-9]+$\",\n                          errorMessage: \"Please enter valid GST Number\"\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n              </Row>\n              <Card>\n                <CardHeader>Address</CardHeader>\n                <CardBody>\n                  <Row>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for=\"customeraddress1\">Address 1</Label>\n                        <AvField\n                          name=\"customeraddress1\"\n                          type=\"text\"\n                          id=\"customeraddress1\"\n                          value={data.customeraddress1}\n                          onChange={this.onChange}\n                       \n                        />\n                      </AvGroup>\n                    </Col>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for=\"customeraddress2\">Address 2</Label>\n                        <AvField\n                          name=\"customeraddress2\"\n                          type=\"text\"\n                          id=\"customeraddress2\"\n                          value={data.customeraddress2}\n                          onChange={this.onChange}\n                       \n                        />\n                      </AvGroup>\n                    </Col>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for=\"city\">City</Label>\n                        <AvField\n                          name=\"city\"\n                          type=\"text\"\n                          id=\"city\"\n                          value={data.city}\n                          onChange={this.onChange}\n                          validate={{\n                            minLength: {\n                              value: 1,\n                              errorMessage:\n                                \"city Name should contain between 1 to 50 characters\"\n                            },\n                            maxLength: {\n                              value: 50,\n                              errorMessage:\n                                \"city Name should contain between 1 to 50 characters\"\n                            },\n                            pattern: {\n                              value: \"^[a-zA-z ]+$\",\n                              errorMessage: \"Please enter valid city Name\"\n                            }\n                          }}\n                        />\n                      </AvGroup>\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for=\"pincode\">Pin Code</Label>\n                        <AvField\n                          name=\"pincode\"\n                          type=\"text\"\n                          id=\"pincode\"\n                          value={data.pincode}\n                          onChange={this.onChange}\n                          validate={{\n                            minLength: {\n                              value: 6,\n                              errorMessage:\n                                \"Pincode should contain atleast 6 characters\"\n                            },\n                            maxLength: {\n                              value: 10,\n                              errorMessage:\n                                \"Pincode should contain between 6 to 10 characters\"\n                            },\n                            pattern: {\n                              value: \"^[0-9]+$\",\n                              errorMessage: \"Please enter valid PinCode\"\n                            }\n                          }}\n                        />\n                      </AvGroup>\n                    </Col>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for=\"state\">State</Label>\n                        <AvField\n                          name=\"state\"\n                          type=\"text\"\n                          id=\"state\"\n                          value={data.state}\n                          onChange={this.onChange}\n                          validate={{\n                            minLength: {\n                              value: 1,\n                              errorMessage:\n                                \"State Name should contain between 1 to 50 characters\"\n                            },\n                            maxLength: {\n                              value: 50,\n                              errorMessage:\n                                \"State Name should contain between 1 to 50 characters\"\n                            },\n                            pattern: {\n                              value: \"^[a-zA-z ]+$\",\n                              errorMessage: \"Please enter valid State Name\"\n                            }\n                          }}\n                        />\n                      </AvGroup>\n                    </Col>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for=\"country\">Country</Label>\n                        <AvField\n                          name=\"country\"\n                          type=\"text\"\n                          id=\"country\"\n                          value={data.country}\n                          onChange={this.onChange}\n                          validate={{\n                            minLength: {\n                              value: 1,\n                              errorMessage:\n                                \"Country Name should contain between 1 to 50 characters\"\n                            },\n                            maxLength: {\n                              value: 50,\n                              errorMessage:\n                                \"Country Name should contain between 1 to 50 characters\"\n                            },\n                            pattern: {\n                              value: \"^[a-zA-z ]+$\",\n                              errorMessage: \"Please enter valid Country Name\"\n                            }\n                          }}\n                        />\n                      </AvGroup>\n                    </Col>\n                  </Row>\n                </CardBody>\n                {/* Delivery Address */}\n                {/* Delivery Address */}\n              <Card>\n                <CardHeader>Delivery Address</CardHeader>\n                <CardBody>\n                  <Row>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for='address1'>Address 1</Label>\n                        <AvField\n                          name='address1'\n                          type='text'\n                          id='customeraddress1'\n                          value={data.deliveryAddress.address1}\n                          onChange={this.onDeliveryAddressChange}\n                        \n                        />\n                      </AvGroup>\n                    </Col>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for='address2'>Address 2</Label>\n                        <AvField\n                          name='address2'\n                          type='text'\n                          id='customeraddress2'\n                          value={data.deliveryAddress.address2}\n                          onChange={this.onDeliveryAddressChange}\n                        \n                        />\n                      </AvGroup>\n                    </Col>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for='city'>City</Label>\n                        <AvField\n                          name='city'\n                          type='text'\n                          id='city'\n                          value={data.deliveryAddress.city}\n                          onChange={this.onDeliveryAddressChange}\n                          validate={{\n                            minLength: {\n                              value: 1,\n                              errorMessage:\n                                'city Name should contain between 1 to 50 characters'\n                            },\n                            maxLength: {\n                              value: 50,\n                              errorMessage:\n                                'city Name should contain between 1 to 50 characters'\n                            },\n                            pattern: {\n                              value: '^[a-zA-z ]+$',\n                              errorMessage: 'Please enter valid city Name'\n                            }\n                          }}\n                        />\n                      </AvGroup>\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for='pincode'>Pin Code</Label>\n                        <AvField\n                          name='pincode'\n                          type='text'\n                          id='pincode'\n                          value={data.deliveryAddress.pincode}\n                          onChange={this.onDeliveryAddressChange}\n                          validate={{\n                            minLength: {\n                              value: 6,\n                              errorMessage:\n                                'Pincode should contain atleast 6 characters'\n                            },\n                            maxLength: {\n                              value: 10,\n                              errorMessage:\n                                'Pincode should contain between 6 to 10 characters'\n                            },\n                            pattern: {\n                              value: '^[0-9]+$',\n                              errorMessage: 'Please enter valid PinCode'\n                            }\n                          }}\n                        />\n                      </AvGroup>\n                    </Col>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for='state'>State</Label>\n                        <AvField\n                          name='state'\n                          type='text'\n                          id='state'\n                          value={data.deliveryAddress.state}\n                          onChange={this.onDeliveryAddressChange}\n                          validate={{\n                            minLength: {\n                              value: 1,\n                              errorMessage:\n                                'State Name should contain between 1 to 50 characters'\n                            },\n                            maxLength: {\n                              value: 50,\n                              errorMessage:\n                                'State Name should contain between 1 to 50 characters'\n                            },\n                            pattern: {\n                              value: '^[a-zA-z ]+$',\n                              errorMessage: 'Please enter valid State Name'\n                            }\n                          }}\n                        />\n                      </AvGroup>\n                    </Col>\n                    <Col sm={2}>\n                      <AvGroup>\n                        <Label className='small-font-size' for='country'>Country</Label>\n                        <AvField\n                          name='country'\n                          type='text'\n                          id='country'\n                          value={data.deliveryAddress.country}\n                          onChange={this.onDeliveryAddressChange}\n                          validate={{\n                            minLength: {\n                              value: 1,\n                              errorMessage:\n                                'Country Name should contain between 1 to 50 characters'\n                            },\n                            maxLength: {\n                              value: 50,\n                              errorMessage:\n                                'Country Name should contain between 1 to 50 characters'\n                            },\n                            pattern: {\n                              value: '^[a-zA-z ]+$',\n                              errorMessage: 'Please enter valid Country Name'\n                            }\n                          }}\n                        />\n                      </AvGroup>\n                    </Col>\n                  </Row>\n                </CardBody>\n              </Card>\n              </Card>\n              <div className=\"mg-20\">\n                <Button\n                  color=\"primary\"\n                  disabled={loading}\n                  className=\"lgn-loader\"\n                >\n                  Update\n                  {/* {loading} */}\n                </Button>\n              </div>\n            </CardBody>\n          </Card>\n        </AvForm>{\" \"}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    customerlistvalues: state.customerlistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  null\n)(UpdateCustomerForm);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport UpdateCustomerForm from \"./UpdateCustomer/CustomerForm/UpdateCustomerForm\";\nimport {\n  updateCustomerContact,\n  getCustomerList\n} from \"../../../actions/customerContact\";\nimport CustomLoader from \"../../../Components/loader/loader\";\nimport {\n  Card,\n  CardBody,\n  CardHeader\n} from \"reactstrap\";\n\nclass Customer extends React.Component {\n  state = {\n    id: \"\",\n    loading: false\n  };\n  componentDidMount = () => {\n    this.props.getCustomerList();\n    const id = this.props.match.params.id;\n    this.setState({ ...this.state, id });\n  };\n  submit = data => {\n    this.dataHandler(true);\n    return this.props\n      .updateCustomerContact(data)\n      .then(data => {\n        this.dataHandler(false);\n        this.props.getCustomerList();\n        return data;\n      })\n      .catch(err => {\n        this.dataHandler(false);\n        throw err;\n      });\n  };\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n  render() {\n    const { id, loading } = this.state;\n    return (\n      <div className=\"container\">\n        {loading ? <CustomLoader /> : null}\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to=\"/admin_dashboard\">Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/inventory_page\">Setup</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/customerinfo\">Customer List</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>Update Customer</BreadcrumbItem>\n        </Breadcrumb>\n        <div>\n\n          <UpdateCustomerForm submit={this.submit} id={id} />\n\n           \n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  { updateCustomerContact, getCustomerList }\n)(Customer);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport ViewCustomerList from \"./ViewCustomerList\";\nimport {\n  addCustomerContact,\n  getCustomerList\n} from \"../../../actions/customerContact\";\n\nclass ViewCustomerTable extends React.Component {\n  componentDidMount = () => {\n    this.props.getCustomerList();\n  };\n\n  render() {\n    return (\n      <div className=\"container mg-t-20\">\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to=\"/admin_dashboard\">Home</Link>\n          </BreadcrumbItem>\n\n          <BreadcrumbItem>\n            <Link to=\"/crmlist\">CRM</Link>\n          </BreadcrumbItem>\n\n          <BreadcrumbItem active>Customer Transaction</BreadcrumbItem>\n        </Breadcrumb>\n        <div>\n          <ViewCustomerList />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  { getCustomerList }\n)(ViewCustomerTable);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Button, Alert } from \"reactstrap\";\nimport { withRouter } from \"react-router-dom\";\nimport DataTable from \"../../../Components/Table/DatatablePage\";\n\nclass ViewCustomerList extends React.Component {\n  state = {\n    count: 0,\n    customerlistvalues: []\n  };\n  componentWillReceiveProps(props) {\n    let customerlistvalues = Object.values(props.customerlistvalues);\n    //customerlistvalues= customerlistvalues.sort((a, b) => b.customernumber.toString().toLowerCase().localeCompare(a.customernumber.toString().toLowerCase()));\n    console.log(customerlistvalues)\n    customerlistvalues.sort(function(a, b){\n      return parseInt(b.customernumber) - parseInt(a.customernumber);\n    });\n    const count = customerlistvalues.length;\n    const customervalues = customerlistvalues.map(customerdata => {\n      return {\n        customernumber: customerdata.customernumber,\n        customername: customerdata.customername,\n        customercontactnumber: customerdata.customercontactnumber,\n        customergstnumber: customerdata.customergstnumber,\n        customeraddress1: customerdata.customeraddress1 != '' ? customerdata.customeraddress1 : '-',\n        customeraddress2: customerdata.customeraddress2 != '' ? customerdata.customeraddress2 : '-',\n        city: customerdata.city != '' ? customerdata.city : '-',\n        pincode: customerdata.pincode != '' ? customerdata.pincode : '-',\n        state: customerdata.state != '' ? customerdata.state : '-',\n        country: customerdata.country != '' ? customerdata.country : '-',\n        view: (\n          <Button\n            Label\n            // style={{ fontSize: '0.8rem' }}\n            color=\"primary\"\n            onClick={() => {\n              this.updateButton(customerdata.id);\n            }}\n          >\n            Edit\n          </Button>\n        )\n\n      };\n    });\n    this.setState({ customerlistvalues: customervalues, count });\n  }\n\n  updateButton = id => {\n    let path = `/updatecustomer/${id}`;\n    this.props.history.push(path);\n  };\n  render() {\n    const { count, customerlistvalues } = this.state;\n    const columnvalue = [\n      {\n        label: \"Customer Number\",\n        field: \"customernumber\",\n        sort: \"asc\",\n        width: 50\n      },\n      {\n        label: \"Name\",\n        field: \"customername\",\n        sort: \"asc\",\n        width: 50\n      },\n      {\n        label: \"Contact\",\n        field: \"customercontactnumber\",\n        sort: \"asc\",\n        width: 50\n      },\n      {\n        label: \"GST Number\",\n        field: \"customergstnumber\",\n        sort: \"asc\",\n        width: 50\n      },\n      {\n        label: \"Customer address1\",\n        field: \"customeraddress1\",\n        sort: \"asc\",\n        width: 50\n      },\n      {\n        label: \"Customer address2\",\n        field: \"customeraddress2\",\n        sort: \"asc\",\n        width: 50\n      },\n      {\n        label: \"City\",\n        field: \"city\",\n        sort: \"asc\",\n        width: 50\n      },\n      {\n        label: \"Pincode\",\n        field: \"pincode\",\n        sort: \"asc\",\n        width: 50\n      },\n      {\n        label: \"State\",\n        field: \"state\",\n        sort: \"asc\",\n        width: 50\n      },\n      {\n        label: \"Country\",\n        field: \"country\",\n        sort: \"asc\",\n        width: 50\n      },\n      {\n        label: \"Edit\",\n        field: \"view\",\n        sort: \"asc\",\n        width: 50\n      }\n    ];\n\n    return (\n      <div className=\"mg-t-20\">\n        {count > 0 ? (\n          <div>\n            <DataTable\n              columnvalue={columnvalue}\n              rowvalues={customerlistvalues}\n              className=\"customerlist\"\n            />\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    customerlistvalues: state.customerlistvalues\n  };\n}\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    null\n  )(ViewCustomerList)\n);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport { getCustomerList } from \"../../../actions/customerContact\";\nimport ViewCustomerList from \"./ViewCustomerList\";\n\nclass CustomerInfo extends React.Component {\n  componentDidMount = () => {\n    this.props.getCustomerList();\n  };\n  render() {\n    return (\n      <div className=\"container mg-t-20\">\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to=\"/admin_dashboard\">Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/inventory_page\">Setup</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/customer\">Customer</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>customer Information</BreadcrumbItem>\n        </Breadcrumb>\n        <div>\n          <ViewCustomerList />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  { getCustomerList }\n)(CustomerInfo);\n","import axios from \"axios\";\n\nexport default {\n  quotation: {\n    addquotation: data => {\n      return axios\n        .post(`${process.env.REACT_APP_BASE_URL}/quotation/addquotation`, {\n          data\n        })\n        .then(res => {\n          return res.data.quotationdata;\n        });\n    },\n    updatequotation: data => {\n      return axios\n        .post(`${process.env.REACT_APP_BASE_URL}/quotation/updatequotation`, {\n          data\n        })\n        .then(res => {\n          return res.data.quotationdata;\n        });\n    },\n    getquotation: () => {\n      return axios\n        .get(`${process.env.REACT_APP_BASE_URL}/quotation/getquotation`)\n        .then(res => {\n          return res.data.quotationlist;\n        });\n    },\n    searchquotation: customerid => {\n      return axios\n        .get(\n          `${process.env.REACT_APP_BASE_URL}/quotation/searchquotation?q=${customerid}`\n        )\n        .then(res => {\n          return res.data.customerquotationlist;\n        });\n    }\n  }\n};\n","import { normalize } from \"normalizr\";\nimport api from \"../Services/quotationapi\";\nimport { ADD_QUOTATION, QUOTATION_FETCHED } from \"../Services/types\";\nimport { quotationListSchema } from \"../Schemas/schemas\";\n\nconst quotationCreated = quotationlist => {\n  return {\n    type: ADD_QUOTATION,\n    quotationlist\n  };\n};\n\nconst quotationFetched = quotationlist => {\n  return {\n    type: QUOTATION_FETCHED,\n    quotationlist\n  };\n};\n\nexport const addquotation = data => {\n  return dispatch => {\n    return api.quotation.addquotation(data).then(quotationlistvalues => {\n      return dispatch(\n        quotationCreated(normalize(quotationlistvalues, quotationListSchema))\n      );\n    });\n  };\n};\n\nexport const updatequotation = data => {\n  return dispatch => {\n    return api.quotation.updatequotation(data).then(quotationlistvalues => {\n      return dispatch(\n        quotationCreated(normalize(quotationlistvalues, quotationListSchema))\n      );\n    });\n  };\n};\n\n\n\nexport const getquotation = () => {\n  return dispatch => {\n    return api.quotation.getquotation().then(quotationlist => {\n      const quotationlistvalues = quotationlist.quotationdata;\n      return dispatch(\n        quotationFetched(normalize(quotationlistvalues, [quotationListSchema]))\n      );\n    });\n  };\n};\n\nexport const searchquotation = customerid => {\n  return dispatch => {\n    return api.quotation.searchquotation(customerid);\n  };\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport { Button, Alert } from \"reactstrap\";\nimport { searchquotation } from \"../../../../actions/quotation\";\n\nclass CustomerQuotationList extends React.Component {\n  componentDidMount() {\n    const customerid = this.props.match.params.id;\n    this.props\n      .searchquotation(customerid)\n      .then(data => {})\n      .catch(err => {});\n  }\n  render() {\n    return (\n      <div className=\"container mg-t-20\">\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to=\"/admin_dashboard\">Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/inventory_page\">Setup</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/customer\">Customer</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/customerinfo\">Customer list</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>customer status</BreadcrumbItem>\n        </Breadcrumb>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  { searchquotation }\n)(CustomerQuotationList);\n","import { AvField, AvForm, AvGroup } from \"availity-reactstrap-validation\";\r\nimport axios from \"axios\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  Alert, Button,\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  Col,\r\n  Label,\r\n  Modal,\r\n  ModalBody,\r\n  ModalFooter,\r\n  ModalHeader,\r\n  Row\r\n} from \"reactstrap\";\r\n\r\nclass AddYearForm extends React.Component {\r\n  state = {\r\n    data: {\r\n      addyear: \"\",\r\n      updateyear: \"\",\r\n      updateid: \"\",\r\n    },\r\n    exists: false,\r\n    errors: {},\r\n    loading: false,\r\n    success: false,\r\n    visible: false,\r\n    updated: false,\r\n    suppliercontactlistvalue: [],\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    this.setState({ loading: true });\r\n    axios.get(`${process.env.REACT_APP_BASE_URL}/year/getyear`).then(\r\n      (res) => {\r\n        if(res.data.year) {\r\n          this.setState({\r\n            ...this.state,\r\n            data: {\r\n              ...this.state.data,\r\n              updateid: res.data.year._id,\r\n              updateyear: res.data.year.currentyear\r\n            },\r\n          });\r\n          this.setState({ exists: true });\r\n        }\r\n        this.setState({ loading: false });\r\n      },\r\n      (error) => {\r\n        this.setState({\r\n          ...this.state,\r\n          errors: {\r\n            ...this.state.errors,\r\n            error,\r\n          },\r\n          loading: false,\r\n        });\r\n      }\r\n    );\r\n  };\r\n\r\n  onChange = (e) => {\r\n    this.setState({\r\n      ...this.state,\r\n      data: { ...this.state.data, [e.target.name]: e.target.value },\r\n    });\r\n  };\r\n  handleValidSubmit = () => {\r\n    this.setState({ loading: true });\r\n    const { data } = this.state;\r\n    console.log(JSON.stringify(data));\r\n    this.props\r\n      .submit(data)\r\n      .then((data) => {\r\n        this.setState({ success: true, loading: false, errors: {} });\r\n        this.onShowAlert();\r\n        this.myFormRef.reset();\r\n      })\r\n      .catch((err) => {\r\n        this.setState({ errors: err.response.data.errors, loading: false });\r\n        this.onShowAlert();\r\n      });\r\n  };\r\n\r\n  onShowAlert = () => {\r\n    this.setState({ visible: true }, () => {\r\n      window.setTimeout(() => {\r\n        this.setState({ visible: false });\r\n      }, 5000);\r\n    });\r\n  };\r\n\r\n  toggle = () => {\r\n    this.setState({ ...this.state, success: false });\r\n  };\r\n\r\n  render() {\r\n    const { data, errors, loading, success, exists, visible } = this.state;\r\n    return (\r\n      <div>\r\n        <div>\r\n          {!!success ? (\r\n            // <Alert color=\"info\" isOpen={visible}>\r\n            //   Customer is added successfully.\r\n            // </Alert>\r\n            <Modal\r\n              isOpen={success}\r\n              toggle={this.toggle}\r\n              className={this.props.className}\r\n            >\r\n              <ModalHeader toggle={this.toggle}>Item Type</ModalHeader>\r\n              <ModalBody>Year Added successfully</ModalBody>\r\n              <ModalFooter>\r\n                <Button color=\"primary\" onClick={this.toggle}>\r\n                  Ok\r\n                </Button>\r\n              </ModalFooter>\r\n            </Modal>\r\n          ) : null}\r\n        </div>\r\n        <AvForm\r\n          onValidSubmit={this.handleValidSubmit}\r\n          onInvalidSubmit={this.handleInvalidSubmit}\r\n          ref={(el) => (this.myFormRef = el)}\r\n        >\r\n          <div>\r\n            {!!errors.global ? (\r\n              <Alert color=\"danger\">{errors.global}</Alert>\r\n            ) : null}\r\n          </div>\r\n          {!!exists ? (\r\n            <Card>\r\n              <CardHeader>Update Year</CardHeader>\r\n              <CardBody>\r\n                <Row>\r\n                  <Col sm={2}>\r\n                    <AvGroup>\r\n                      <Label className=\"small-font-size\" for=\"addyear\">\r\n                        Update Year\r\n                      </Label>\r\n                      <span className=\"required-label\">*</span>\r\n                      <AvField\r\n                        name=\"updateyear\"\r\n                        type=\"text\"\r\n                        placeholder={data.updateyear.toString()}\r\n                        id=\"addyear\"\r\n                        value={data.updateyear.toString()}\r\n                        onChange={this.onChange}\r\n                        validate={{\r\n                          required: {\r\n                            value: true,\r\n                            errorMessage: \"Please enter the year range\",\r\n                          },\r\n                        }}\r\n                      />\r\n                    </AvGroup>\r\n                  </Col>\r\n                </Row>\r\n                {/* Delivery Address */}\r\n                <div className=\"mg-20\">\r\n                  <Button\r\n                    color=\"primary\"\r\n                    disabled={loading}\r\n                    className=\"lgn-loader\"\r\n                  >\r\n                    Submit\r\n                    {/* {loading} */}\r\n                  </Button>\r\n                </div>\r\n              </CardBody>\r\n            </Card>\r\n          ) : (\r\n            <Card>\r\n              <CardHeader>AddYear</CardHeader>\r\n              <CardBody>\r\n                <Row>\r\n                  <Col sm={2}>\r\n                    <AvGroup>\r\n                      <Label className=\"small-font-size\" for=\"addyear\">\r\n                        Add Year\r\n                      </Label>\r\n                      <span className=\"required-label\">*</span>\r\n                      <AvField\r\n                        name=\"addyear\"\r\n                        type=\"text\"\r\n                        placeholder=\"ex: 2020-21\"\r\n                        id=\"addyear\"\r\n                        value={data.addyear.toString()}\r\n                        onChange={this.onChange}\r\n                        validate={{\r\n                          required: {\r\n                            value: true,\r\n                            errorMessage: \"Please enter the year range\",\r\n                          },\r\n                        }}\r\n                      />\r\n                    </AvGroup>\r\n                  </Col>\r\n                </Row>\r\n                {/* Delivery Address */}\r\n                <div className=\"mg-20\">\r\n                  <Button\r\n                    color=\"primary\"\r\n                    disabled={loading}\r\n                    className=\"lgn-loader\"\r\n                  >\r\n                    Submit\r\n                    {/* {loading} */}\r\n                  </Button>\r\n                </div>\r\n              </CardBody>\r\n            </Card>\r\n          )}\r\n        </AvForm>{\" \"}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  null\r\n)(AddYearForm);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\r\nimport {\r\n  addYear, updateYear\r\n} from \"../../../actions/financialYearAdd\";\r\nimport CustomLoader from \"../../../Components/loader/loader\";\r\nimport AddYearForm from \"./AddYear/AddYearForm/AddYearForm\";\r\n\r\nclass AddFinancialYear extends React.Component {\r\n  state = {\r\n    loading: false\r\n  };\r\n\r\n  submit = data => {\r\n    if(data.updateid !== \"\") {\r\n      this.dataHandler(true);\r\n    return this.props\r\n      .updateYear(data)\r\n      .then(data => {\r\n        this.dataHandler(false);\r\n        return data;\r\n      })\r\n      .catch(err => {\r\n        this.dataHandler(false);\r\n        throw err;\r\n      });    \r\n    }\r\n    else {\r\n      this.dataHandler(true);\r\n      return this.props\r\n        .addYear(data)\r\n        .then(data => {\r\n          this.dataHandler(false);\r\n          return data;\r\n        })\r\n        .catch(err => {\r\n          this.dataHandler(false);\r\n          throw err;\r\n        });\r\n    }\r\n  };\r\n\r\n  dataHandler = value => {\r\n    this.setState({ loading: value });\r\n  };\r\n  render() {\r\n    const { loading } = this.state;\r\n    return (\r\n      <div className=\"container mg-t-20\">\r\n        {loading ? <CustomLoader /> : null}\r\n        <Breadcrumb>\r\n          <BreadcrumbItem>\r\n            <Link to=\"/admin_dashboard\">Home</Link>\r\n          </BreadcrumbItem>\r\n          <BreadcrumbItem>\r\n            <Link to=\"/inventory_page\">Setup</Link>\r\n          </BreadcrumbItem>\r\n          <BreadcrumbItem>\r\n            <Link to=\"/financialYearAdd\">Add Year</Link>\r\n          </BreadcrumbItem>\r\n          <BreadcrumbItem active>Add Year</BreadcrumbItem>\r\n        </Breadcrumb>\r\n        <div>\r\n          <AddYearForm submit={this.submit} />\r\n        </div>\r\n        {/* <div>\r\n          <ViewCustomerList />\r\n        </div> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  { addYear,updateYear }\r\n)(AddFinancialYear);\r\n","import api from \"../Services/api\";\r\n\r\n\r\n export const addYear = data => {\r\n    return dispatch => {\r\n      return api.year.addyear(data);\r\n    }\r\n  }\r\n\r\n  export const updateYear = data => {\r\n    return dispatch => {\r\n      return api.year.updateyear(data);\r\n    }\r\n  }","import axios from 'axios';\n\nexport default {\n  challan: {\n    addchallan: data => {\n      return axios\n        .post(`${process.env.REACT_APP_BASE_URL}/challan/addchallan`, {\n          data\n        })\n        .then(res => {\n          return res.data.challandata;\n        });\n    },\n    updatechallan: data => {\n      return axios\n        .post(`${process.env.REACT_APP_BASE_URL}/challan/updatechallan`, {\n          data\n        })\n        .then(res => {\n          return res.data.challandata;\n        });\n    },\n    \n    getchallan: () => {\n      return axios\n        .get(`${process.env.REACT_APP_BASE_URL}/challan/getchallan`)\n        .then(res => {\n          return res.data.challanlist;\n        });\n    }\n  }\n};\n","import { normalize } from \"normalizr\";\nimport { challanListSchema } from \"../Schemas/schemas\";\nimport api from \"../Services/challanapi\";\nimport { ADD_CHALLAN, CHALLAN_FETCHED } from \"../Services/types\";\n\nconst challanCreated = challanlist => {\n  return {\n    type: ADD_CHALLAN,\n    challanlist\n  };\n};\n\nconst challanFetched = challanlist => {\n  return {\n    type: CHALLAN_FETCHED,\n    challanlist\n  };\n};\n\nexport const addChallan = data => {\n  return dispatch => {\n    return api.challan.addchallan(data).then(challanlistvalues => {\n      return dispatch(\n        challanCreated(normalize(challanlistvalues, challanListSchema))\n      );\n    });\n  };\n};\n\nexport const updateChallan = data => {\n  return dispatch => {\n    return api.challan.updatechallan(data).then(challanlistvalues => {\n      return dispatch(\n        challanCreated(normalize(challanlistvalues, challanListSchema))\n      );\n    });\n  };\n};\n\n\n\nexport const getChallan = () => {\n  return dispatch => {\n    return api.challan.getchallan().then(challanlist => {\n      console.log(challanlist)\n      const challanlistvalues = challanlist.challandata;\n      console.log(challanlistvalues)\n      return dispatch(\n        challanFetched(normalize(challanlistvalues, [challanListSchema]))\n      );\n    });\n  };\n};\n\nexport const searchquotation = customerid => {\n  return dispatch => {\n    return api.quotation.searchquotation(customerid);\n  };\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { AvForm, AvField, AvGroup } from 'availity-reactstrap-validation';\nimport {\n  Button,\n  Label,\n  Alert,\n  Card,\n  CardBody,\n  CardHeader,\n  Row,\n  Col,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from 'reactstrap';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport axios from \"axios\";\nimport CustomLoader from \"../../../../Components/loader/loader\";\nclass ChallanForm extends React.Component {\n  state = {\n    data: {\n      selectedItemlist: {\n        id: [],\n        itemname: [],\n        itemdescription: [],\n        itemtype: [null],\n        itemrate: [null],\n        itemuom: [],\n        itemlocation: [null],\n        costperunit: [],\n        quantity: [],\n        totalcost: [],\n        remarks: []\n      },\n      customerdetail: {\n        id: \"\",\n        customername: \"\"\n      },\n      deliverychallanno: '',\n      toaddress: '',\n      mobilenumber: '',\n      site: '',\n      date: new Date(),\n      ponumber: '',\n      podate: new Date(),\n      vehiclenumber: '',\n      gstno: '',\n      otherreference: '',\n      values: ['']\n    },\n    errors: {},\n    customerobjects: {},\n    materialoptionlistvalues: [],\n    supplierdetaillistvalue: [],\n    supplierdetaillistvalueobject: {},\n    masteritemlistvalues: [],\n    masteritemlistvaluesobject: {},\n    currencylistvalues: [],\n    customerlistvalues: [],\n    uom: [],\n    locationlistvalue: [],\n    loading: false,\n    success: false,\n    successmsg:'',\n    counts:1\n  };\n\n  componentDidMount() {\n  \n      const materialoptionlistvalues = Object.values(\n        this.props.materialoptionlistvalues\n      );\n      const masteritemlistvalues = Object.values(this.props.masteritemlistvalues);\n      const masteritemlistvaluesobject = this.props.masteritemlistvalues;\n      const currencylistvalues = Object.values(this.props.currencylistvalues);\n      const uomlistvalues = Object.values(this.props.uomlistvalues);\n      const locationlistvalue = Object.values(this.props.locationlistvalue);\n      const purchaseorderlist = Object.keys(this.props.purchaseorderlistvalues);\n      const customerlistvalues = Object.values(this.props.customerlistvalues);\n      const customerobjects = this.props.customerlistvalues;\n\n      this.setState({\n        ...this.state,\n        masteritemlistvalues,\n        masteritemlistvaluesobject,\n        materialoptionlistvalues,\n        currencylistvalues,\n        locationlistvalue,\n        customerlistvalues,\n        customerobjects,\n        uom: uomlistvalues,\n        data: {\n          ...this.state.data\n        }\n      },() =>{\n        if (this.props.ID != undefined) {\n          this.getDCDetails(this.props.ID)\n        }\n        else{\n          //if(Object.keys(this.props.challanlistvalues).length == 0){\n            this.getChallandata()\n          //}\n        }\n      });\n    \n  }\n\n  getChallandata(){\n    axios\n    .get(`${process.env.REACT_APP_BASE_URL}/challan/getchallan`)\n    .then(res => {\n      // if (res.data.challanlist.challandata.length > 0) {\n         \n        let deliverychallanno =\n        res.data.challanlist.challandata.length > 0 ? 1 + res.data.challanlist.challandata.length : 1;\n\n        this.setState({\n          ...this.state,\n          data: {\n            ...this.state.data,\n            deliverychallanno\n          }\n        });\n      //}\n    },\n      error => {\n        this.setState({ success: false, message: 'Server error.' });\n      });\n  }\n\n  getDCDetails(id) {\n    this.setState({ loading: true });\n    axios\n      .get(`${process.env.REACT_APP_BASE_URL}/challan/getsinglechallan/${id}`)\n      .then(res => {\n\n        console.log(res.data)\n         if (res.data.challanlist.challandata.length > 0) {\n           let founddata = res.data.challanlist.challandata;\n            console.log(founddata[0])\n           const newState = Object.assign({}, this.state);\n           newState.data.deliverychallanno = founddata[0].deliverychallanno;\n           newState.data.toaddress = founddata[0].toaddress;\n           newState.data.site = founddata[0].site;\n           newState.data.date = new Date(founddata[0].date);\n           newState.data.ponumber = founddata[0].ponumber;\n           newState.data.podate =  new Date(founddata[0].podate);\n           newState.data.vehiclenumber = founddata[0].vehiclenumber;\n           newState.data.gstno = founddata[0].gstno;\n           newState.data.otherreference = founddata[0].otherreference;\n           newState.data.values = founddata[0].addeditemlist;\n           newState.data.mobilenumber = founddata[0].mobilenumber ? founddata[0].mobilenumber : ''\n           newState.data.customerdetail.id = founddata[0].customerid ? founddata[0].customerid._id : '';\n           if(founddata[0].customerid) \n            this.handleChange2(founddata[0].customerid._id)\n\n          if (founddata[0].addeditemlist.length > 0) {\n\n            for (var i = 0; i < founddata[0].addeditemlist.length; i++) {\n         \n\n              founddata[0].addeditemlist[i].quantity = founddata[0].addeditemlist[i].quantity == null || founddata[0].addeditemlist[i].quantity == '' ?\n                founddata[0].addeditemlist[i].quantity = 0 : founddata[0].addeditemlist[i].quantity\n              founddata[0].addeditemlist[i].quantity = (founddata[0].addeditemlist[i].quantity).toString()\n\n              founddata[0].addeditemlist[i].costperunit = founddata[0].addeditemlist[i].costperunit == null || founddata[0].addeditemlist[i].costperunit == '' ?\n                founddata[0].addeditemlist[i].costperunit = 0 : founddata[0].addeditemlist[i].costperunit\n              founddata[0].addeditemlist[i].costperunit = (founddata[0].addeditemlist[i].costperunit).toString()\n\n              founddata[0].addeditemlist[i].totalcost = founddata[0].addeditemlist[i].totalcost == null || founddata[0].addeditemlist[i].totalcost == '' ?\n                founddata[0].addeditemlist[i].totalcost = 0 : founddata[0].addeditemlist[i].totalcost\n              founddata[0].addeditemlist[i].totalcost = (founddata[0].addeditemlist[i].totalcost).toString()\n\n              founddata[0].addeditemlist[i].remarks = founddata[0].addeditemlist[i].remarks == null || founddata[0].addeditemlist[i].remarks == '' ?\n               \"\" : founddata[0].addeditemlist[i].remarks\n\n              \n          \n              newState.data.selectedItemlist.itemdescription.push(founddata[0].addeditemlist[i].itemdescription)\n              newState.data.selectedItemlist.itemtype.push(founddata[0].addeditemlist[i].itemtype._id)\n              newState.data.selectedItemlist.remarks.push(founddata[0].addeditemlist[i].remarks)\n              \n            \n              newState.data.selectedItemlist.itemuom.push(founddata[0].addeditemlist[i].itemuom._id)\n              newState.data.selectedItemlist.quantity.push(founddata[0].addeditemlist[i].quantity)\n\n              newState.data.selectedItemlist.costperunit.push(founddata[0].addeditemlist[i].costperunit)\n\n              newState.data.selectedItemlist.totalcost.push(founddata[0].addeditemlist[i].totalcost)\n             // setTimeout(()=>{\n                newState.data.selectedItemlist.id.push(founddata[0].addeditemlist[i].id._id)\n             // })\n              \n              \n            }\n          }\n\n          \n            this.setState(newState);\n\n         \n         \n          if (founddata[0].addeditemlist.length > 0) {\n            founddata[0].addeditemlist.filter((item, index) => {\n              this.selectitemchange(item.id._id, index);\n            })\n          }\n          this.setState({ loading: false });\n        }\n        else {\n          this.setState({ count: 0,loading: false })\n          \n        }\n      },\n        error => {\n          \n          this.setState({ success: false, message: 'Server error.' });\n        });\n  }\n\n  componentWillReceiveProps(props) {\n    if (this.props.ID == undefined){\n      const materialoptionlistvalues = Object.values(\n        props.materialoptionlistvalues\n      );\n      const masteritemlistvalues = Object.values(props.masteritemlistvalues);\n      const masteritemlistvaluesobject = props.masteritemlistvalues;\n      const currencylistvalues = Object.values(props.currencylistvalues);\n      const uomlistvalues = Object.values(props.uomlistvalues);\n      const locationlistvalue = Object.values(props.locationlistvalue);\n      const purchaseorderlist = Object.keys(this.props.purchaseorderlistvalues);\n      const challanlistvalues = Object.keys(this.props.challanlistvalues);\n      \n      const customerlistvalues = Object.values(this.props.customerlistvalues);\n      const customerobjects = this.props.customerlistvalues;\n\n      let deliverychallanno =\n        challanlistvalues.length > 0 ? 1 + challanlistvalues.length : 1;\n  \n        this.setState({\n          ...this.state,\n          masteritemlistvalues,\n          masteritemlistvaluesobject,\n          materialoptionlistvalues,\n          currencylistvalues,\n          locationlistvalue,\n          customerlistvalues,\n          customerobjects,\n          uom: uomlistvalues,\n          data: {\n            ...this.state.data,\n            deliverychallanno\n          }\n        },()=>{\n          console.log(this.state.customerlistvalues)\n        });\n    }\n \n    \n\n      \n \n  }\n\n  handleChallanDate = date => {\n    this.setState({\n      data: {\n        ...this.state.data,\n        date: date\n      }\n    });\n  };\n\n  handlePODate = date => {\n    this.setState({\n      data: {\n        ...this.state.data,\n        podate: date\n      }\n    });\n  };\n\n  handleChange = e => {\n    console.log( e.target.value)\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  handleChange2 = e => {\n\n    let selected_id = e.target ? e.target.value : e\n    let customerdetail = this.state.customerobjects[selected_id];\n    console.log(customerdetail)\n\n    let toaddress = customerdetail ? customerdetail.customeraddress1 +\n    \" \" +\n    customerdetail.customeraddress2 +\n    \" \" +\n    customerdetail.city +\n    \" \" +\n    customerdetail.state +\n    \" \" +\n    customerdetail.country +\n    \" \" +\n    customerdetail.pincode : ''\n\n  \n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        customerdetail,\n        toaddress\n      }\n    },()=>{\n      localStorage.setItem('custname',this.state.data.customerdetail.customername)\n      console.log(this.state.data.customerdetail)\n    });\n  };\n\n  totalValue = () => {\n    const { totalcost } = this.state.data.selectedItemlist;\n    if (totalcost.length > 0) {\n      const totalvalue = totalcost\n        .map((value, i) => {\n          if (value) {\n            return parseFloat(value);\n          } else {\n            return 0;\n          }\n        })\n        .reduce((a, b) => {\n          return a + b;\n        });\n      this.setState({\n        ...this.state.data,\n        data: {\n          ...this.state.data,\n          totalvalue\n        }\n      });\n    }\n  };\n\n\n  createSelectcustomer = () => {\n    let items = [];\n    let customerlistvalues = this.state.customerlistvalues;\n    console.log(this.state.customerlistvalues)\n    customerlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.customername}\n        </option>\n      );\n    });\n    return items;\n  };\n\n\n  selectitemchange = (e, index) => {\n    let selected_id = e.target ? e.target.value : e;\n    console.log(this.state.masteritemlistvaluesobject)\n    console.log(selected_id)\n    if (selected_id) {\n      let selected_item = this.state.masteritemlistvaluesobject[selected_id];\n\n      if(selected_item){\n        const selectedItemlist = { ...this.state.data.selectedItemlist };\n        selectedItemlist.id[index] = selected_item.id;\n        selectedItemlist.itemname[index] = selected_item.masteritemtypename;\n        selectedItemlist.itemdescription[index] =\n          selected_item.masteritemdescription;\n\n        // selectedItemlist.itemdescription[index] = selected_item.masteritemshortdescription == '' ? selected_item.masteritemdescription \n        //   : selected_item.masteritemshortdescription\n        selectedItemlist.itemtype[index] = selected_item.masteritemtype._id;\n        selectedItemlist.itemrate[index] = selected_item.masteritemrate;\n        selectedItemlist.itemuom[index] = selected_item.masteritemuom._id;\n        //selectedItemlist.itemlocation[index] = null;\n        \n        if (this.props.ID == undefined) {\n          selectedItemlist.costperunit[index] = selected_item.masteritemcostperunit\n          ? selected_item.masteritemcostperunit.toString()\n          : '';\n        selectedItemlist.quantity[index] = (1).toString();\n        selectedItemlist.totalcost[index] = selected_item.masteritemcostperunit\n          ? selected_item.masteritemcostperunit.toString()\n          : '';\n        }\n  \n        this.setState({\n  \n          ...this.state.data,\n          data: {\n            ...this.state.data,\n            selectedItemlist\n          }\n        },()=>{\n          this.totalValue();\n        });\n      }\n      \n      }\n\n  };\n\n  locationChange = (e, index) => {\n    const selected_location = e.target.value;\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.itemlocation[index] = selected_location;\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n  };\n\n  onhandlerChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  onSubjectHandler = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  filterItems(itemarray, key) {\n    return itemarray.sort((a, b) => { return a[key].toLowerCase().localeCompare(b[key].toLowerCase()) })\n  }\n\n  createSelectItems = () => {\n    let items = [];\n    let masteritemlistvalues = this.state.masteritemlistvalues;\n    masteritemlistvalues = this.filterItems(masteritemlistvalues, 'masteritemtypename')\n    masteritemlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.masteritemtypename}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  createSelectItemTypes = () => {\n    let items = [];\n    const materialoptionlistvalues = this.state.materialoptionlistvalues;\n    materialoptionlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.masteritemtypename}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  createSelectCurrencyItems = () => {\n    let items = [];\n    const currencylistvalues = this.state.currencylistvalues;\n    currencylistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.currencyname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  createSelectUomItems = () => {\n    let items = [];\n    const uomlistvalues = this.state.uom;\n    uomlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.uomname}\n        </option>\n      );\n    });\n    return items;\n  };\n  createSelectLocationItems = () => {\n    let items = [];\n    const locationlistvalue = this.state.locationlistvalue;\n    locationlistvalue.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.locationname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  handleClick = e => {\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        values: [...this.state.data.values, ''],\n        selectedItemlist: {\n          ...this.state.data.selectedItemlist,\n          id: [...this.state.data.selectedItemlist.id, ''],\n          itemname: [...this.state.data.selectedItemlist.itemname, ''],\n          itemdescription: [\n            ...this.state.data.selectedItemlist.itemdescription,\n            ''\n          ],\n          itemtype: [...this.state.data.selectedItemlist.itemtype, ''],\n          itemrate: [...this.state.data.selectedItemlist.itemrate, ''],\n          itemuom: [...this.state.data.selectedItemlist.itemuom, ''],\n          itemlocation: [...this.state.data.selectedItemlist.itemlocation, ''],\n          costperunit: [...this.state.data.selectedItemlist.costperunit, ''],\n          quantity: [...this.state.data.selectedItemlist.quantity, ''],\n          totalcost: [...this.state.data.selectedItemlist.totalcost, ''],\n          remarks: [...this.state.data.selectedItemlist.remarks, '']\n        }\n      }\n    });\n  };\n  removeClick = (e, index) => {\n    const removeItem = { ...this.state.data };\n    const values = removeItem.values;\n    const id = removeItem.selectedItemlist.id;\n    const itemname = removeItem.selectedItemlist.itemname;\n    const itemdescription = removeItem.selectedItemlist.itemdescription;\n    const itemtype = removeItem.selectedItemlist.itemtype;\n    const itemrate = removeItem.selectedItemlist.itemrate;\n    const itemuom = removeItem.selectedItemlist.itemuom;\n    const itemlocation = removeItem.selectedItemlist.itemlocation;\n    const costperunit = removeItem.selectedItemlist.costperunit;\n    const quantity = removeItem.selectedItemlist.quantity;\n    const totalcost = removeItem.selectedItemlist.totalcost;\n    const remarks = removeItem.selectedItemlist.remarks;\n    values.splice(index, 1);\n    id.splice(index, 1);\n    itemname.splice(index, 1);\n    itemdescription.splice(index, 1);\n    itemtype.splice(index, 1);\n    itemrate.splice(index, 1);\n    itemuom.splice(index, 1);\n    itemlocation.splice(index, 1);\n    costperunit.splice(index, 1);\n    quantity.splice(index, 1);\n    totalcost.splice(index, 1);\n    remarks.splice(index, 1);\n    \n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        values,\n        selectedItemlist: {\n          ...this.state.data.selectedItemlist,\n          id,\n          itemname,\n          itemdescription,\n          itemtype,\n          itemrate,\n          itemuom,\n          itemlocation,\n          costperunit,\n          quantity,\n          totalcost,\n          remarks\n        }\n      }\n    },() =>{\n      console.log(this.state.data.selectedItemlist)\n    });\n  };\n\n  quantityChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    const costperunit = selectedItemlist.costperunit[index] || null;\n    selectedItemlist.quantity[index] = e.target.value;\n    const totalValue = costperunit\n      ? e.target.value * costperunit\n      : null || undefined || '';\n    selectedItemlist.totalcost[index] = totalValue\n      ? parseFloat(totalValue).toFixed(2)\n      : '';\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n    this.totalValue();\n  };\n  remarkChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.remarks[index] = e.target.value;\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n  };\n\n  unitChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.costperunit[index] = e.target.value;\n    const totalcost =\n      parseFloat(selectedItemlist.quantity[index]) *\n      parseFloat(selectedItemlist.costperunit[index]);\n    selectedItemlist.totalcost[index] = totalcost\n      ? totalcost.toFixed(2)\n      : null || '';\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n    this.totalValue();\n  };\n\n  handleValidSubmit = () => {\n    let AddedIteminfo = [];\n    console.log(this.state.data.customerdetail)\n    const { supplierdetail, selectedItemlist,customerdetail } = this.state.data;\n    const { values } = this.state.data;\n    const id = selectedItemlist.id;\n    const itemname = selectedItemlist.itemname;\n    const itemdescription = selectedItemlist.itemdescription;\n    const itemtype = selectedItemlist.itemtype;\n    const itemrate = selectedItemlist.itemrate;\n    const itemuom = selectedItemlist.itemuom;\n    const itemlocation = selectedItemlist.itemlocation;\n    const costperunit = selectedItemlist.costperunit;\n    const quantity = selectedItemlist.quantity;\n    const totalcost = selectedItemlist.totalcost;\n    const remarks = selectedItemlist.remarks;\n    values.forEach(function (value, i) {\n      let obj = {};\n      obj.id = id[i] || null;\n      obj.itemname = itemname[i] || null;\n      obj.itemdescription = itemdescription[i] || null;\n      obj.itemtype = itemtype[i] || null;\n      obj.itemrate = itemrate[i] || null;\n      obj.itemuom = itemuom[i] || null;\n      obj.itemlocation = itemlocation[i] || null;\n      obj.costperunit = costperunit[i] || null;\n      obj.quantity = quantity[i] || null;\n      obj.totalcost = totalcost[i] || null;\n      obj.remarks = remarks[i] || null;\n      AddedIteminfo.push(obj);\n    });\n    const { data } = this.state;\n    data['AddedIteminfo'] = AddedIteminfo;\n    data['customerdetail'].customername = localStorage.getItem('custname')\n    \n    this.setState({ loading: true });\n    console.log(JSON.stringify(data));\n    \n\n    this.props\n      .submit(data)\n      .then(() => {\n\n        if(this.props.ID == undefined){\n          this.myFormRef.reset();\n          this.setState({ loading: false, errors: {}, success: true,successmsg:'Delivery Challan is generated successfully' });\n        }\n        else{\n          this.setState({ loading: false, errors: {}, success: true,successmsg:'Delivery Challan is updated successfully' });\n        }\n\n        this.setState({ loading: false, errors: {}, success: true });\n        this.myFormRef.reset();\n      })\n      .catch(err => {\n\n          if(this.props.ID == undefined){\n            this.myFormRef.reset();\n            this.setState({ loading: false, errors: {}, success: true,successmsg:'Delivery Challan is generated successfully' });\n          }\n          else{\n            this.setState({ loading: false, errors: {}, success: true,successmsg:'Delivery Challan is updated successfully' });\n          }\n        \n      });\n  };\n\n  \n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n\n  handleInvalidSubmit = () => {\n    console.log('invalid submit');\n  };\n  render() {\n    const { data, errors, loading, success,successmsg } = this.state;\n    const customerID = data.customerdetail ? (\n      <AvField\n      Label\n      type=\"select\"\n      name={`customername`}\n      value={data.customerdetail.id}\n      required={true}\n      onChange={e => this.handleChange2(e)}\n    >\n      <option value=\"\">select customer name</option>\n      {this.createSelectcustomer()}\n    </AvField>\n    ) : (\n      <AvField\n      Label\n      type=\"select\"\n      name={`customername`}\n  \n      required={true}\n      onChange={e => this.handleChange2(e)}\n    >\n      <option value=\"\">select customer name</option>\n      {this.createSelectcustomer()}\n    </AvField>\n    )\n    return (\n      <div>\n\n        <div>\n        {loading ? <CustomLoader /> : null}\n          {!!success ? (\n            // <Alert color=\"info\">Purchase Order is generated successfully</Alert>\n            <Modal\n              isOpen={success}\n              toggle={this.toggle}\n              className={this.props.className}\n            >\n              <ModalHeader  toggle={this.toggle}>Delivery Challan</ModalHeader>\n              <ModalBody >{successmsg}</ModalBody>\n              <ModalFooter>\n                <Button color='primary' onClick={this.toggle}>\n                  Ok\n                </Button>\n              </ModalFooter>\n            </Modal>\n          ) : null}\n        </div>\n        <AvForm\n          onValidSubmit={this.handleValidSubmit}\n          onInvalidSubmit={this.handleInvalidSubmit}\n          ref={el => (this.myFormRef = el)}\n        >\n          <Card>\n            <CardHeader Label>Delivery Challan</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='deliverychallanno'>DC</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      Label\n                      name='deliverychallanno'\n                      type='text'\n                      id='deliverychallanno'\n                      value={data.deliverychallanno || null}\n                      onChange={this.handleChange}\n                 \n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter DC'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"customername\">Customer Name</Label>\n                    <span className=\"required-label\">*</span>\n                    {/* <AvField\n                      Label\n                      type=\"select\"\n                      name={`customername`}\n                      value={data.customerdetail.id || null}\n                      required={true}\n                      onChange={e => this.handleChange(e)}\n                    >\n                      <option value=\"\">select customer name</option>\n                      {this.createSelectcustomer()}\n                    </AvField> */}\n                    {customerID}\n                  </AvGroup>\n                </Col>\n                <Col sm={3}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='toaddress'>To address </Label>\n                    <AvField\n                      Label\n                      name='toaddress'\n                      type='text'\n                      id='toaddress'\n                      value={data.toaddress}\n                      onChange={e => this.handleChange(e)}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <Label className='small-font-size' for='site'>Site</Label>\n                  <AvField\n                    Label\n                    name='site'\n                    type='text'\n                    id='site'\n                    value={data.site || ' ' || null}\n                    onChange={e => this.handleChange(e)}\n                  />\n                </Col>\n                <Col sm={2}>\n                  <Label className='small-font-size' for='mobilenumber'>Mobile No</Label>\n                  <AvField\n                    Label\n                    name='mobilenumber'\n                    type='text'\n                    id='mobilenumber'\n                    value={data.mobilenumber || ' ' || null}\n                    onChange={e => this.handleChange(e)}\n                  />\n                </Col>\n                <Col sm={2}>\n                  <Label className='small-font-size' for='quotationno'>Date</Label>\n                  <DatePicker\n                    selected={data.date}\n                    autoComplete=\"new-password\"\n                    onChange={this.handleChallanDate}\n                    className='form-control small-font-size'\n                    dateFormat='dd/MM/yyyy'\n                    id='date'\n                  />\n                </Col>\n              </Row>\n              <Row>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='ponumber'>PO no</Label>\n                    <AvField\n                      Label\n                      type='text'\n                      name='ponumber'\n                      id='ponumber'\n                      value={data.ponumber || null}\n                      onChange={e => this.handleChange(e)}\n                    ></AvField>\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <Label className='small-font-size' for='podate'>PO Date</Label>\n                  <DatePicker\n                    selected={data.podate}\n                    autoComplete=\"new-password\"\n                    onChange={this.handlePODate}\n                    className='form-control small-font-size'\n                    dateFormat='dd/MM/yyyy'\n                    id='podate'\n                  />\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='vehiclenumber'>Vehicle Number</Label>\n                    <AvField\n                      Label\n                      name='vehiclenumber'\n                      type='text'\n                      id='vehiclenumber'\n                      value={data.vehiclenumber}\n                      onChange={this.handleChange}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='gstno'>GST No</Label>\n                    <AvField\n                      Label\n                      name='gstno'\n                      type='text'\n                      id='gstno'\n                      value={data.gstno}\n                      onChange={this.handleChange}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='otherreference'>Other reference</Label>\n                    <AvField\n                      Label\n                      name='otherreference'\n                      type='text'\n                      id='otherreference'\n                      value={data.otherreference}\n                      onChange={this.handleChange}\n                    />\n                  </AvGroup>\n                </Col>\n              </Row>\n              <Row>\n                <div className='mg-t-20'>\n                  <Button color='info' onClick={this.handleClick} type='button'>\n                    Add Item\n                  </Button>\n                </div>\n              </Row>\n              {/* className='purchaseorder-item-row' */}\n              <div >\n                {data.values.map((values, index) => {\n                  return (\n                    <div key={index}>\n                      <div className='purchaseorder-table'>\n                        <Row key={index}>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for='selectitem'>Item Code</Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                Label\n                                type='select'\n                                name={`selectitem${index}`}\n                                value={\n                                  data.selectedItemlist.id[index]\n                                }\n                                onChange={e => this.selectitemchange(e, index)}\n                                required={true}\n                              >\n                                <option value=''>select Item</option>\n                                {this.createSelectItems()}\n                              </AvField>\n                            </AvGroup>\n                          </Col>\n                          <Col sm={2}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`masteritemdescription${index}`}>\n                                Description\n                              </Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                Label\n                                name={`masteritemdescription${index}`}\n                                type='text'\n                                id='masteritemdescription'\n                                readOnly\n                                value={\n                                  data.selectedItemlist.itemdescription[index]\n                                }\n                                \n                                onChange={this.onChange}\n                                validate={{\n                                  required: {\n                                    value: true,\n                                    errorMessage:\n                                      'Please enter Item Description'\n                                  }\n                            \n                                 \n                                }}\n                              />\n                            </AvGroup>\n                          </Col>\n                          {/* <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`masteritemtype${index}`}>Type</Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                style={{ width: '150px' }}\n                                type='select'\n                                name={`masteritemtype${index}`}\n                                onChange={this.onChange}\n                                required={true}\n                                value={\n                                  data.selectedItemlist.itemtype[index] || null\n                                }\n                              >\n                                <option value=''>select</option>\n                                {this.createSelectItemTypes()}\n                              </AvField>\n                            </AvGroup>\n                          </Col> */}\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`masteritemuom${index}`}>UOM</Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                Label\n                                type='select'\n                                name={`masteritemuom${index}`}\n                                readOnly\n                                onChange={this.onChange}\n                                required={true}\n                                value={\n                                  data.selectedItemlist.itemuom[index] || null\n                                }\n                              >\n                                <option value=''>uom</option>\n                                {/* <option value=\"kg\">Kg</option>\n                            <option value=\"liter\">Liter</option>\n                            <option value=\"kg\">EA</option> */}\n                                {this.createSelectUomItems()}\n                              </AvField>\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`quantity${index}`}>Quantity</Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                Label\n                                name={`quantity${index}`}\n                                type='number'\n                                id={`quantity${index}`}\n                                value={\n                                  data.selectedItemlist.quantity[index] || null\n                                }\n                                onChange={e => this.quantityChange(e, index)}\n                                validate={{\n                                  required: {\n                                    value: true,\n                                    errorMessage: 'Please enter Item Quantity'\n                                  },\n                                  minLength: {\n                                    value: 1,\n                                    errorMessage: 'quantity value is required'\n                                  },\n                                  pattern: {\n                                    value: '^[0-9.]*$',\n                                    errorMessage: 'Please enter valid quantity'\n                                  }\n                                }}\n                              />\n                            </AvGroup>\n                          </Col>\n\n                          <Col sm={2}>\n                            <AvGroup>\n                              <Label className='small-font-size' for='remarks'>Remarks</Label>\n                              <AvField\n                                Label\n                                name='remarks'\n                                type='text'\n                                id='remarks'\n                                value={\n                                  data.selectedItemlist.remarks[index]\n                                }\n                                onChange={e => this.remarkChange(e, index)}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <Button\n                              Label\n                              type='button'\n                              color='danger'\n                              onClick={e => this.removeClick(e, index)}\n                              style={{ marginTop: '30px' }}\n                            >\n                              -\n                            </Button>\n                          </Col>\n                        </Row>\n                      </div>\n                    </div>\n                  );\n                })}\n              </div>\n              <Row>\n                <div className='mg-20'>\n                  <Button\n                    Label\n                    color='primary'\n                    disabled={loading}\n                    className='lgn-loader'\n                  >\n                    Submit\n                    {/* {loading} */}\n                  </Button>\n                </div>\n              </Row>\n            </CardBody>\n          </Card>\n        </AvForm>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    supplierdetaillistvalue: state.supplierdetaillistvalue,\n    masteritemlistvalues: state.masteritemlistvalues,\n    materialoptionlistvalues: state.masteritemtypenamevalue,\n    currencylistvalues: state.currencylistvalue,\n    uomlistvalues: state.uomlistvalue,\n    locationlistvalue: state.locationlistvalue,\n    purchaseorderlistvalues: state.purchaseorderlistvalue,\n    challanlistvalues: state.challanlistvalues,\n    customerlistvalues: state.customerlistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  null\n)(ChallanForm);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport {\n  getMasterItemList,\n  getMasterItemTypes\n} from '../../../../actions/Transaction';\nimport { connect } from 'react-redux';\nimport { getUomList } from '../../../../actions/uom';\nimport { getCustomerList } from '../../../../actions/customerContact';\nimport { addChallan } from '../../../../actions/challan';\nimport { getChallan } from '../../../../actions/challan';\nimport { updateChallan } from '../../../../actions/challan';\n\nimport ChallanForm from './ChallanForm';\nimport CustomLoader from '../../../../Components/loader/loader';\n\nclass AddChallan extends React.Component {\n  state = {\n    loading: false,\n    ID:this.props.match.params.id\n  };\n  componentDidMount() {\n    this.props.getCustomerList();\n    this.props.getMasterItemTypes();\n    this.props.getMasterItemList();\n    this.props.getUomList();\n    this.props.getChallan();\n  }\n  submit = data => {\n    console.log(data);\n    this.dataHandler(true);\n\n    if(this.props.match.params.id != undefined){\n      data['_id'] = this.props.match.params.id;\n\n      return this.props\n      .updateChallan(data)\n      .then(data => {\n        this.dataHandler(false);\n        return data;\n      })\n      .catch(err => {\n        this.dataHandler(false);\n        throw err;\n      });\n    }\n    else{\n      return this.props\n        .addChallan(data)\n        .then(data => {\n          this.dataHandler(false);\n          return data;\n        })\n        .catch(err => {\n          this.dataHandler(false);\n          throw err;\n        });\n    }\n  \n  };\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n  render() {\n    const { loading,ID } = this.state;\n    return (\n      <div className='container mg-t-20'>\n        {loading ? <CustomLoader /> : null}\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to='/admin_dashboard'>Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to='/transaction_page'>Transactions</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to='/delivery-challan'>Delivery Challan</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>Add Challan</BreadcrumbItem>\n        </Breadcrumb>\n        <div>\n          <ChallanForm submit={this.submit}  ID={ID}/>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  {\n    getMasterItemList,\n    getMasterItemTypes,\n    getUomList,\n    addChallan,\n    updateChallan,\n    getCustomerList,\n    getChallan\n  }\n)(AddChallan);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { getChallan } from '../../../../actions/challan';\nimport { Button, Alert } from 'reactstrap';\nimport DataTable from '../../../../Components/Table/DatatablePage';\nimport CustomLoader from '../../../../Components/loader/loader';\nimport {\n  getMasterItemList,\n  getMasterItemTypes\n} from '../../../../actions/Transaction';\nimport { getUomList } from '../../../../actions/uom';\nimport { getCustomerList } from '../../../../actions/customerContact';\nclass ViewChallan extends React.Component {\n  state = {\n    count: 0,\n    loading: true,\n    challanlistvalues: []\n  };\n  componentDidMount() {\n    this.props.getCustomerList();\n    this.props.getMasterItemTypes();\n    this.props.getMasterItemList();\n    this.props.getUomList();\n    this.props.getChallan();\n    \n    console.log(this.props);\n    if (this.props.challanlistvalues) {\n      let quotationlist = Object.values(this.props.challanlistvalues);\n\n      quotationlist.sort(function(a, b){\n        return parseInt(b.deliverychallanno) - parseInt(a.deliverychallanno);\n      });\n      const challanlistvalues = quotationlist.map(quotationvalue => {\n        return {\n          deliverychallanno: quotationvalue.deliverychallanno,\n          ponumber: quotationvalue.ponumber,\n          vehiclenumber: quotationvalue.vehiclenumber,\n          view: (\n            <div className=\"actionbuttons\">\n            <Button\n              Label\n              color='primary'\n              onClick={() => {\n                this.updateButton(quotationvalue._id);\n              }}\n            >\n              Print\n            </Button>\n\n            <Button\n            Label\n            color='primary'\n            onClick={() => {\n              this.updatechallan(quotationvalue._id);\n            }}\n            >\n          Edit\n          </Button>\n          </div>\n          )\n        };\n      });\n      this.setState({ ...this.state, challanlistvalues });\n      this.dataHandler(false);\n    }\n  }\n  componentWillReceiveProps(props) {\n    let quotationlist = Object.values(props.challanlistvalues);\n    //quotationlist= quotationlist.sort((a, b) => b.deliverychallanno.toLowerCase().localeCompare(a.deliverychallanno.toLowerCase()));\n    quotationlist.sort(function(a, b){\n      return parseInt(b.deliverychallanno) - parseInt(a.deliverychallanno);\n    });\n    const challanlistvalues = quotationlist.map(quotationvalue => {\n      return {\n        deliverychallanno: quotationvalue.deliverychallanno,\n        ponumber: quotationvalue.ponumber,\n        vehiclenumber: quotationvalue.vehiclenumber,\n        view: (\n          <div className=\"actionbuttons\">\n            <Button\n              Label\n              color='primary'\n              onClick={() => {\n                this.updateButton(quotationvalue._id);\n              }}\n            >\n              Print\n            </Button>\n\n            <Button\n            Label\n            color='primary'\n            onClick={() => {\n              this.updatechallan(quotationvalue._id);\n            }}\n            >\n          Edit\n          </Button>\n          </div>\n        )\n      };\n    });\n    this.setState({ ...this.state, challanlistvalues });\n    this.dataHandler(false);\n  }\n\n  updateButton = id => {\n    // let path = `/view_invoicepdf/${id}`;\n    // window.open(path, '_blank');\n    let path = `/view_challanpdf/${id}`;\n    //window.open(path, \"_blank\");\n    this.props.history.push(path);\n  };\n\n  updatechallan(id) {\n    let path = `/editchallan/${id}`;\n    this.props.history.push(path);\n  }\n\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n\n  render() {\n    const { loading, count, challanlistvalues } = this.state;\n    console.log(challanlistvalues)\n    const columnvalue = [\n      {\n        label: 'Delivery Challan',\n        field: 'deliverychallanno',\n        sort: 'asc',\n        width: 40\n      },\n      {\n        label: 'PO Number',\n        field: 'ponumber',\n        sort: 'asc',\n        width: 40\n      },\n      {\n        label: 'Vehicle Number',\n        field: 'vehiclenumber',\n        sort: 'asc',\n        width: 40\n      },\n      {\n        label: 'Print/Edit',\n        field: 'view',\n        sort: 'asc',\n        width: 40\n      }\n    ];\n    return (\n      <div className='container mg-t-20'>\n        {loading ? <CustomLoader /> : null}\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to='/admin_dashboard'>Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to='/transaction_page'>Transactions</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to='/delivery-challan'>Delivery Challan</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>List</BreadcrumbItem>\n        </Breadcrumb>\n        <div>\n          <DataTable \n          rowvalues={challanlistvalues} \n          columnvalue={columnvalue}\n          className=\"challanlist\" />\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    challanlistvalues: state.challanlistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  {\n    getMasterItemList,\n    getMasterItemTypes,\n    getUomList,\n    getCustomerList,\n    getChallan \n    }\n)(ViewChallan);\n","import React from 'react';\nimport logo from '../../../../Images/logo.png';\nimport client from '../../../../Images/client.png';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\nimport {\n  Document,\n  Page,\n  Text,\n  View,\n  StyleSheet,\n  Image\n} from '@react-pdf/renderer';\nimport {\n  TableCell,\n  Table,\n  TableHeader,\n  TableBody,\n  DataTableCell\n} from '@david.kucsai/react-pdf-table';\nimport styled from '@react-pdf/styled-components';\n\n// Create styles\nconst styles = StyleSheet.create({\n  textcenter: { textAlign: 'center' },\n  textright: { textAlign: 'right' },\n  textleft: { textAlign: 'left' },\n  paddingleft: { paddingLeft: 5 },\n  margin: {\n    margin: 5\n  },\n  pagepadding: {\n    padding: 20\n  },\n  section: {\n    position: 'relative',\n    display: 'flex',\n    flexDirection: 'row',\n    overflow: 'hidden'\n  },\n  section_column: {\n    position: 'relative',\n    display: 'flex',\n    flexDirection: 'column',\n    overflow: 'hidden'\n  },\n  myHeight: {\n    height: '100px'\n  },\n  headerfont: {\n    fontSize: 8,\n    fontWeight: 'bold',\n    padding: 3\n  },\n  descriptionText: {\n    fontSize: 10,\n    fontWeight: 'normal'\n  },\n  headerfont2: {\n    fontSize: 11,\n    fontWeight: 'bold',\n    textAlign: 'right',\n    padding: 3\n  },\n  headerfontleft: {\n    fontSize: 12,\n    fontWeight: 'bold',\n    textAlign: 'left'\n  },\n  billingaddress: {\n    fontSize: 12,\n    fontWeight: 'bold',\n    textAlign: 'left',\n    height: 70\n  },\n  shippingaddress: {\n    fontSize: 12,\n    fontWeight: 'bold',\n    textAlign: 'left',\n    height: 130\n  },\n  row: {\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  dcaddress: {\n    fontSize: 8,\n    color: ' black'\n  },\n  dcaddress_left: {\n    fontSize: 8\n  },\n  view_border: {\n    border: '2pt solid #000',\n    flexGrow: 1,\n    height: 100,\n    padding: 8\n  },\n  view_border_left: {\n    borderLeft: '2pt solid #000',\n    borderTop: '2pt solid #000',\n    borderBottom: '2pt solid #000',\n    flexGrow: 1,\n    height: 100,\n    padding: 8\n  },\n  view_border_right: {\n    borderRight: '2pt solid #000',\n    borderTop: '2pt solid #000',\n    borderBottom: '2pt solid #000',\n    flexGrow: 1,\n    height: 100,\n    padding: 8\n  },\n  column: {\n    width: 190\n  },\n  headerwidth: {\n    width: 210,\n    padding: 20\n  },\n  headerwidthdate: {\n    width: 210,\n    paddingTop: 23,\n    fontSize: 12\n  },\n  headerwidthlogo: {\n    width: 350,\n    fontSize: 12\n  },\n  logo: {\n    width: 225,\n    height: 90\n  },\n  header_name: {\n    width: 350,\n    fontWeight: 'bold',\n    fontSize: 24,\n    textAlign: 'left',\n    paddingLeft: 40\n  },\n  header_sub_name: {\n    width: '100%',\n    fontSize: 8,\n    textAlign: 'center',\n    paddingHorizontal: 25\n  },\n  header_sub_name_phone: {\n    width: '100%',\n    fontSize: 8,\n    fontWeight: 'bolder',\n    textAlign: 'center',\n    fontWeight: 'bold'\n  },\n  header_tintext: {\n    fontSize: 8,\n    fontWeight: 'bold',\n    paddingLeft: 10\n  },\n  header_sub_name3: {\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  header_sub_nameB: {\n    flexDirection: 'column',\n    paddingTop: 10,\n    flex: 1\n  },\n  header_sub_nameA: {\n    flexDirection: 'row',\n    justifyContent: 'center'\n  },\n  headerwidthAddress: {\n    width: 260,\n    fontSize: 10,\n    padding: 2,\n    textAlign: 'right'\n  },\n  refstyle: {\n    paddingBottom: 20,\n    fontSize: 12\n  },\n  headerpadding: {\n    padding: 20\n  },\n  flexgrow: {\n    flexGrow: 1\n  },\n  fontsize18: {\n    fontSize: 13\n  },\n  kindattend: {\n    paddingTop: 15,\n    fontSize: 13\n  },\n  yourref: {\n    fontSize: 13,\n    paddingBottom: 10\n  },\n  main: {\n    fontSize: 12\n  },\n  tableheaderbgcolor: {\n    backgroundColor: 'red',\n    color: 'red',\n    background: 'red'\n  },\n  footerfixed: {\n    position: 'absolute',\n    bottom: 0,\n    width: '100%'\n  },\n  dc_header: {\n    flexDirection: 'row'\n  },\n  dc_gst: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end'\n  },\n  padding: {\n    padding: 16,\n    fontSize: 8\n  }\n});\n\nconst Small = ({ children }) => {\n  return (\n    <Text style={{ fontSize: 8 }}>{children}</Text>\n  )\n}\n\nconst SmallBold = ({ children }) => {\n  return (\n    <Text style={{ fontSize: 8, fontWeight: 'bold' }}>{children}</Text>\n  )\n}\n\nconst Medium = ({ children }) => {\n  return (\n    <Text style={{\n      fontSize: 10,\n      marginLeft: 25,\n      textDecorationLine: 'underline'\n    }}>{children}</Text>\n  )\n}\n\nconst MediumBold = ({ children }) => {\n  return (\n    <Text style={{ fontSize: 10, fontWeight: 'bold' }}>{children}</Text>\n  )\n}\n\nconst Bold = ({ children }) => {\n  return (\n    <Text style={{ fontWeight: 'bold' }}>{children}</Text>\n  )\n}\n\nconst Header = ({ children }) => {\n  return (\n    <Text style={{\n      // width: 350,\n      fontWeight: 'bold',\n      fontSize: 24,\n      textAlign: 'left',\n      paddingLeft: 10\n    }}>{children}</Text>\n  )\n}\n\n// Create Document Component\n\nconst MyDocument = ({ challanlistvalues, data_cond }) => {\n  console.log(JSON.stringify(challanlistvalues));\n  const data = challanlistvalues.addeditemlist;\n  console.log('data');\n  console.log(data);\n  const totalrs = challanlistvalues.totalvalue\n    ? challanlistvalues.totalvalue\n    : '';\n  const taxableAmount = challanlistvalues.taxableamount;\n  const date = moment(challanlistvalues.date).format('DD MMM, YYYY');\n  const podate = moment(challanlistvalues.podate).format('DD MMM, YYYY');\n  const purchaseorderdate = moment(challanlistvalues.purchaseorderdate).format(\n    'DD MMM, YYYY'\n  );\n  const billingaddress = challanlistvalues.billingaddress;\n  const deliveryaddress = challanlistvalues.deliveryaddress;\n  const vendorcode = challanlistvalues.vendorcode;\n  const {\n    freightcharges,\n    subtotal,\n    cgst,\n    sgst,\n    igst,\n    total,\n    grandtotal,\n    deliverychallannumber,\n    goodsDescription,\n    invoicenumber,\n    roundoffamount\n  } = challanlistvalues;\n\n  let {\n    deliverychallanno,\n    toaddress,\n    site,\n    ponumber,\n    vehiclenumber,\n    otherreference,\n    gstno,\n    customername\n  } = challanlistvalues;\n  let arr = [],toAD='',arr1 = [],siteAD='',customername1 = ''\n  let mobileno = challanlistvalues.mobilenumber ? challanlistvalues.mobilenumber : ''\n  // if(toaddress.indexOf(',') > -1){\n  //   arr = toaddress.split(',');\n  //   customername = arr[0]\n  //   if(arr.length > 2){\n  //     for(var i=1;i<arr.length;i++){\n  //       toAD = i > 1 ? toAD + ',' + arr[i] : toAD + arr[i]\n  //     }\n  //   }\n  // }\n  // else\n  //   toAD = toaddress\n\n\n    toAD = toaddress\n  \n    // if(site.indexOf(',') > -1){\n    //   arr1 = site.split(',');\n    //   customername1 = arr1[0]\n    //   if(arr1.length > 2){\n    //     for(var i=1;i<arr1.length;i++){\n    //       siteAD = i > 1 ? siteAD + ',' + arr1[i] : siteAD + arr1[i]\n    //     }\n    //   }\n    // }\n    // else\n    //   siteAD = site\n\n    \n\n\n  const purchaseordernumber = challanlistvalues.purchaseordernumber;\n  const tax = challanlistvalues.tax ? challanlistvalues.tax : '';\n  const taxpercentage = challanlistvalues.tax\n    ? challanlistvalues.tax / 100\n    : '';\n  // const grandtotal = taxpercentage * totalrs;\n  //   const selectecontactlist = challanlistvalues.selectedcontactlist[0]\n  //     ? challanlistvalues.selectedcontactlist[0].suppliercontactname\n  //     : \"\";\n  const cond_data = data_cond;\n  const tableComponentTwo = [];\n  for (let i = 0; i < data.length; i++) {\n    if (data[i] && data[i + 1]) {\n      tableComponentTwo.push([data[i], data[i + 1]]);\n    } else {\n      tableComponentTwo.push([data[i]]);\n    }\n    ++i;\n  }\n  const datalength = tableComponentTwo.length - 1;\n  const tableComponent = tableComponentTwo.map((data, i) => {\n    if (i >= 1 && i === datalength) {\n      return (\n        <Page size='A4' style={styles.pagepadding} wrap key={i}>\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={data}\n          >\n            <TableHeader\n              textAlign={'center'}\n              style={{ backgroundColor: 'tomato' }}\n            >\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Text style={styles.headerfont}>SL No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont}>Particular</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Weight Each kgs(+/-5%)</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Rate/{'\\n'}Each RS</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Dist %</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>\n                  After Dist Rate/Each{'\\n'}Rs\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Qty</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Total RS</Text>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell\n                weighting={0.08}\n                style={styles.padding}\n                getContent={r => r.slno}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.6}\n                getContent={r => {\n                  return (\n                    <View>\n                      <Text>{r.itemname + '\\n'}</Text>\n                      <Text>{'\\n'}</Text>\n                      <Image\n                        src={`${process.env.REACT_APP_BASE_URL}/${r.itemimage}`}\n                      />\n                      <Text>{'\\n'}</Text>\n                    </View>\n                  );\n                }}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => {\n                  return r.weighteach;\n                }}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.costperunit} />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.quantity} />\n              <DataTableCell weighting={0.2} getContent={r => r.totalcost} />\n            </TableBody>\n          </Table>\n          <Text>{'\\n'}</Text>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1.087}>\n                <Text style={styles.headerfont2}>Taxable Amount</Text>\n              </TableCell>\n              <TableCell weighting={0.13}>\n                <Text style={{ textAlign: 'center' }}>{taxableAmount}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1.087}>\n                <Text style={styles.headerfont2}>GST %</Text>\n              </TableCell>\n              <TableCell weighting={0.13}>\n                <Text style={{ textAlign: 'center' }}>{tax}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1.087}>\n                <Text style={styles.headerfont2}>Grand Total Rs</Text>\n              </TableCell>\n              <TableCell weighting={0.13}>\n                <Text style={{ textAlign: 'center' }}>\n                  {(grandtotal + +totalrs).toFixed(2)}\n                </Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n        </Page>\n      );\n    } else if (i >= 1) {\n      return (\n        <Page size='A4' style={styles.pagepadding} wrap key={i}>\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={data}\n          >\n            <TableHeader\n              textAlign={'center'}\n              style={{ backgroundColor: 'tomato' }}\n            >\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Text style={styles.headerfont}>SL No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont}>Particular</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Weight Each kgs(+/-5%)</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Rate/{'\\n'}Each RS</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Dist %</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>\n                  After Dist Rate/Each{'\\n'}Rs\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Qty</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Total RS</Text>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell\n                weighting={0.08}\n                style={styles.padding}\n                getContent={r => r.slno}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.6}\n                getContent={r => {\n                  return (\n                    <View>\n                      <Text>{r.itemname + '\\n'}</Text>\n                      <Text>{'\\n'}</Text>\n                      <Image\n                        src={`${process.env.REACT_APP_BASE_URL}/${r.itemimage}`}\n                      />\n                      <Text>{'\\n'}</Text>\n                    </View>\n                  );\n                }}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.weighteach} />\n              <DataTableCell weighting={0.2} getContent={r => r.costperunit} />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.quantity} />\n              <DataTableCell weighting={0.2} getContent={r => r.totalcost} />\n            </TableBody>\n          </Table>\n        </Page>\n      );\n    } else if (i < 1 && i === datalength) {\n      return (\n        <View>\n          <View style={styles.row}>\n            <View style={styles.view_border_left}>\n              <View style={{ flexDirection: 'row' }}>\n                <Text style={[styles.dcaddress, { fontWeight: 'bold' }]}>D.C. </Text>\n                <Text style={[styles.dcaddress, { color: 'red', paddingLeft: 16 }]}>{deliverychallanno}</Text>\n              </View>\n              <Text style={[styles.dcaddress, { marginTop: 10 }]}>To,</Text>\n              <Text style={[styles.dcaddress, { paddingLeft: 16 }]}>{customername}</Text>\n              <Text style={[styles.dcaddress, { paddingLeft: 16 }]}>{toAD}</Text>\n            </View>\n            <View style={styles.view_border}>\n              <Text style={styles.dcaddress}>Site</Text>\n              <Text style={styles.dcaddress}>{site}</Text>\n            </View>\n            <View style={styles.view_border_right}>\n              <View style={styles.header_sub_name3}>\n                <Text></Text>\n                <Text style={styles.dcaddress_left}>\n                  Date: {date}\n                  {'\\n'}\n                </Text>\n              </View>\n\n              <View style={{ flexDirection: 'row' }}>\n                <View>\n                  <Text style={[styles.dcaddress, { fontWeight: 'bold', marginTop: 4 }]}><Bold>PO No:</Bold></Text>\n                  <Text style={[styles.dcaddress, { fontWeight: 'bold', marginTop: 4 }]}><Bold>Date:</Bold></Text>\n                  <Text style={[styles.dcaddress, { fontWeight: 'bold', marginTop: 4 }]}><Bold>vehiclenumber:</Bold></Text>\n                  <Text style={[styles.dcaddress, { fontWeight: 'bold', marginTop: 4 }]}><Bold>GST No:</Bold></Text>\n                  <Text style={[styles.dcaddress, { fontWeight: 'bold', marginTop: 4 }]}><Bold>Other Ref:</Bold></Text>\n                </View>\n                <View style={{ paddingLeft: 16 }}>\n                  <Text style={[styles.dcaddress, { marginTop: 4 }]}>{ponumber}</Text>\n                  <Text style={[styles.dcaddress, { marginTop: 4 }]}>{podate}</Text>\n                  <Text style={[styles.dcaddress, { marginTop: 4 }]}>{vehiclenumber}</Text>\n                  <Text style={[styles.dcaddress, { marginTop: 4 }]}>{gstno}</Text>\n                  <Text style={[styles.dcaddress, { marginTop: 4 }]}>{otherreference}</Text>\n                </View>\n              </View>\n            </View>\n          </View>\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={data}\n            key={i}\n          >\n            <TableHeader\n              textAlign={'center'}\n              style={{ backgroundColor: 'tomato' }}\n            >\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Text style={styles.headerfont}>SL No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont}>Particular</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Unit</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Quantity</Text>\n              </TableCell>\n              <TableCell weighting={0.4}>\n                <Text style={styles.headerfont}>Remarks</Text>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell\n                weighting={0.08}\n                style={styles.padding}\n                getContent={r => <Text style={[styles.headerfont]}>{r.slno}</Text>}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.6}\n                getContent={r => <Text style={[styles.headerfont]}>{r.itemname}</Text>}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => <Text style={[styles.headerfont]}>{r.unit}</Text>} />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => <Text style={[styles.headerfont]}>{r.quantity}</Text>} />\n              <DataTableCell\n                weighting={0.4}\n                getContent={r => <Text style={[styles.headerfont]}>{r.remarks}</Text>} />\n            </TableBody>\n          </Table>\n          {/* ends here */}\n          <View style={styles.header_sub_name3}>\n            <Text style={styles.header_tintext}>\n              Received the above goods in good order & condition {'\\n'}\n              {'\\n'}\n              {'\\n'}\n              Receiver's Signature with Seal\n            </Text>\n            <Text style={styles.header_tintext}>\n              For PONDHAN SCAFFOLDING PVT LTD {'\\n'}\n              {'\\n'}\n              {'\\n'}\n              Authorised Signatories\n            </Text>\n          </View>\n        </View>\n      );\n    } else {\n      return (\n        <View>\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={data}\n            key={i}\n          >\n            <TableHeader textAlign={'center'} style={styles.tableheaderbgcolor}>\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Text style={styles.headerfont}>SL No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont}>Particular</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Weight Each kgs(+/-5%)</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Rate/{'\\n'}Each RS</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Dist %</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>\n                  After Dist Rate/Each{'\\n'}Rs\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Qty</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Total RS</Text>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell\n                weighting={0.08}\n                style={styles.padding}\n                getContent={r => r.slno}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.6}\n                getContent={r => {\n                  return (\n                    <View>\n                      <Text>{r.itemname + '\\n'}</Text>\n                      <Text>{'\\n'}</Text>\n                      <Image\n                        src={`${process.env.REACT_APP_BASE_URL}/${r.itemimage}`}\n                      />\n                      <Text>{'\\n'}</Text>\n                    </View>\n                  );\n                }}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => <Text style={[styles.headerfont]}>{r.weighteach}</Text>} />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => <Text style={[styles.headerfont]}>{r.costperunit}</Text>} />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => <Text style={[styles.headerfont]}>{r.itemdiscount.toString()}</Text>}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => <Text style={[styles.headerfont]}>{r.itemdiscount.toString()}</Text>}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => <Text style={[styles.headerfont]}>{r.quantity}</Text>} />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => <Text style={[styles.headerfont]}>{r.totalcost}</Text>} />\n            </TableBody>\n          </Table>\n        </View>\n      );\n    }\n  });\n\n  return (\n    <Document>\n      <Page size='A4' style={styles.pagepadding} wrap>\n        <View>\n          <View style={styles.dc_header}>\n            <Image style={styles.logo} src={logo} />\n            <View stye={styles.header_sub_nameB}>\n\n              <View style={{ flexDirection: 'row', justifyContent: 'flex-end', paddingRight: 10 }}>\n                <Small><Bold>CIN:</Bold> U28110KA2012PTC062181</Small><Medium>GOODS DELIVERY CHALLAN</Medium>\n              </View>\n              <View style={{ flexDirection: 'row', justifyContent: 'flex-end', marginTop: 4, marginBottom: 4, paddingRight: 10 }}>\n                <Small>Original/Duplicate/Office Copy</Small>\n              </View>\n              <Header>Pondhan Scaffolding Pvt. Ltd.</Header>\n              {/* <Text>{'\\n'}</Text> */}\n              <Text style={[styles.header_tintext, { fontWeight: 'bold' }]}>\n                {' '}\n                MANF: Scaffolding Props, Cup-Lock, Jack, Span, Centering Sheet,\n                'H' Frame & Swivel Coupler\n            </Text>\n              <Text>{'\\n'}</Text>\n            </View>\n          </View>\n\n\n\n\n          {/* <Text style={styles.logo}></Text>\n          <Text style={styles.logo}></Text>\n          <Text style={styles.headerwidthAddress}>\n            Email: info@pondhan.com, Website: www.pondhan.com{'\\n'}\n            TIN No: 29710660725{'\\n'}\n            GSTIN:29AAGCP4018E1ZJ RCC No: U28110KA2012PTC062181{'\\n'}\n          </Text> */}\n        </View>\n        <View style={styles.dc_gst}>\n          <Text style={styles.header_tintext}><Bold>TIN:</Bold> 29710660725</Text>\n          <Text style={styles.header_tintext}><Bold>GSTIN:</Bold> 29AAGCP4018E1ZJ</Text>\n          <View>\n            <Text style={styles.header_tintext}><Bold>HSN Code:</Bold> 7308</Text>\n            <Text style={[styles.header_tintext, { marginTop: 4 }]}><Bold>SAC Code:</Bold> 996793</Text>\n          </View>\n        </View>\n\n        <Text style={styles.header_sub_name}>\n          {'\\n'}\n          Office & Works : Plot no.40 & 41 (corner) Road,no.5, KIADB Obadenahalli Industrial\n          Area,3rd phase Doddaballapura, Bangalore Rural District-561203.\n        </Text>\n        <Text style={[styles.header_sub_name_phone, { fontWeight: 'bold', color: 'black' }]}>\n          <Bold>GST No. 29AAGCP4018E1ZJ, Mob: +91 9900069150</Bold>\n        </Text>\n\n    \n\n        {/* <Text>{'\\n'}</Text> */}\n        {/* {tableComponent} */}\n        <View style={{ marginTop: 8 }}>\n          <View style={styles.row}>\n            <View style={styles.view_border_left}>\n              <View style={{ flexDirection: 'row' }}>\n                <Text style={[styles.dcaddress, { fontWeight: 'bold' }]}>D.C. </Text>\n                <Text style={[styles.dcaddress, {\n                  color: 'red',\n                  paddingLeft: 16,\n                }]}>{deliverychallanno}/2020-21</Text>\n              </View>\n              <Text style={[styles.dcaddress, { marginTop: 10 }]}>To,</Text>\n              <Text style={[styles.dcaddress, {\n                paddingLeft: 16, width: 180,\n                wordWrap: 'break-word'\n              }]}>{customername}</Text>\n              <Text style={[styles.dcaddress, {\n                paddingLeft: 16, width: 150,\n                wordWrap: 'break-word'\n              }]}>{toAD}</Text>\n              <Text style={[styles.dcaddress, {\n                paddingLeft: 16, width: 180,\n                wordWrap: 'break-word'\n              }]}> Phone no : {mobileno} </Text>\n            </View>\n            <View style={styles.view_border}>\n              <Text style={[styles.dcaddress, { marginTop: 10 }]}>Site</Text>\n              {/* <Text style={styles.dcaddress}>{site}</Text> */}\n              {/* <Text style={[styles.dcaddress, {\n                paddingLeft: 16, width: 180,\n                wordWrap: 'break-word'\n              }]}>{customername1}</Text> */}\n\n              <Text style={[styles.dcaddress, {\n                paddingLeft: 16, width: 150,\n                wordWrap: 'break-word'\n              }]}>{site}</Text>\n\n            </View>\n            <View style={styles.view_border_right}>\n              <View style={styles.header_sub_name3}>\n                <Text></Text>\n                <Text style={styles.dcaddress_left}>\n                  Date: {date}\n                  {'\\n'}\n                </Text>\n              </View>\n              <View style={{ flexDirection: 'row' }}>\n                <View>\n                  <Text style={[styles.dcaddress, { fontWeight: 'bold', marginTop: 4 }]}><Bold>PO No:</Bold></Text>\n                  <Text style={[styles.dcaddress, { fontWeight: 'bold', marginTop: 4 }]}><Bold>Date:</Bold></Text>\n                  <Text style={[styles.dcaddress, { fontWeight: 'bold', marginTop: 4 }]}><Bold>vehiclenumber:</Bold></Text>\n                  <Text style={[styles.dcaddress, { fontWeight: 'bold', marginTop: 4 }]}><Bold>GST No:</Bold></Text>\n                  <Text style={[styles.dcaddress, { fontWeight: 'bold', marginTop: 4 }]}><Bold>Other Ref:</Bold></Text>\n                </View>\n                <View style={{ paddingLeft: 16 }}>\n                  <Text style={[styles.dcaddress, { marginTop: 4 }]}>{ponumber}</Text>\n                  <Text style={[styles.dcaddress, { marginTop: 4 }]}>{podate}</Text>\n                  <Text style={[styles.dcaddress, { marginTop: 4 }]}>{vehiclenumber}</Text>\n                  <Text style={[styles.dcaddress, { marginTop: 4 }]}>{gstno}</Text>\n                  <Text style={[styles.dcaddress, { marginTop: 4 }]}>{otherreference}</Text>\n                </View>\n              </View>\n            </View>\n          </View>\n          <Text>{'\\n'}</Text>\n          <Table\n            border={2}\n            style={[styles.section, styles.padding, styles.tableheaderbgcolor, { fontSize: 8 }]}\n            data={data}\n          >\n            <TableHeader\n              textAlign={'center'}\n              style={{ backgroundColor: 'tomato' }}\n            >\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Text style={[styles.headerfont]}>SL No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={[styles.headerfont]}>PARTICULAR</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={[styles.headerfont]}>Unit</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={[styles.headerfont]}>Quantity</Text>\n              </TableCell>\n              <TableCell weighting={0.4}>\n                <Text style={[styles.headerfont]}>REMARKS</Text>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell\n                weighting={0.08}\n                style={styles.padding}\n                getContent={r => <Text style={[styles.headerfont]}>{r.slno}</Text>}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.6}\n                getContent={r => <Text style={[styles.headerfont, { textAlign: 'left' }]}>{r.itemname}</Text>}\n              />\n              <DataTableCell\n                weighting={0.2}\n                style={styles.padding}\n                getContent={r => <Text style={[styles.headerfont]}>{r.unit}</Text>} />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.2}\n                getContent={r => <Text style={[styles.headerfont]}>{r.quantity}</Text>} />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.4}\n                getContent={r => <Text style={[styles.headerfont]}>{r.remarks}</Text>} />\n            </TableBody>\n          </Table>\n          {/* <Text>{'\\n'}</Text> */}\n          {/* ends here */}\n          <View style={styles.header_sub_name3}>\n            <Text style={[styles.header_tintext, { paddingLeft: 0, marginTop: 4 }]}>\n              Received the above goods in good order & condition {'\\n'}\n              {'\\n'}\n              {'\\n'}\n              {'\\n'}\n              {'\\n'}\n              {'\\n'}\n              {'\\n'}\n              Receiver's Signature with Seal\n            </Text>\n            <Text style={[styles.header_tintext, { paddingLeft: 0, marginTop: 4 }]}>\n              For PONDHAN SCAFFOLDING PVT LTD {'\\n'}\n              {'\\n'}\n              {'\\n'}\n              {'\\n'}\n              {'\\n'}\n              {'\\n'}\n              {'\\n'}\n              Authorised Signatories\n            </Text>\n          </View>\n\n          <View>\n            <Text\n                 style={[styles.headerfont, { color: 'red' }]}\n                >\n                 {'\\n'} {'\\n'} \n                 Note: Any legal matter should be under Bengaluru Jurisdiction </Text>\n        </View>\n        </View>\n      </Page>\n    </Document>\n  );\n};\n\nexport default MyDocument;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ReactPDF from '@react-pdf/renderer';\nimport moment from 'moment';\nimport { PDFViewer } from '@react-pdf/renderer';\nimport { getChallan } from '../../../../actions/challan';\nimport MyDocument from './Component';\nimport logo from '../../../../Images/logo.png';\nimport './ViewChallan';\n\nclass ViewChallanPdf extends React.Component {\n  state = {\n    challanlistvalues: {},\n    status: false,\n    link: ''\n  };\n  componentDidMount() {\n    this.props.getChallan();\n    const quotationid = this.props.match.params.id;\n    const challanlistvalues = this.props.challanlistvalues[quotationid];\n    challanlistvalues.requestdeliverydate = moment(\n      challanlistvalues.date\n    ).format('DD MMM, YYYY');\n    challanlistvalues.addeditemlist = challanlistvalues.addeditemlist.map(\n      (itemlist, i) => {\n        return {\n          slno: (i + 1).toString(),\n          itemname: itemlist.itemdescription ? itemlist.itemdescription : '',\n          weighteach: itemlist.id.masteritemunitwt\n            ? itemlist.id.masteritemunitwt\n            : '',\n          itemimage: itemlist.id.masteritemimage\n            ? itemlist.id.masteritemimage\n            : '',\n          quantity: itemlist.quantity ? itemlist.quantity.toString() : '',\n          itemdiscount: 0,\n          remarks: itemlist.remarks ? itemlist.remarks.toString() : '',\n          unit: itemlist.itemuom ? itemlist.itemuom.uomname.toString() : ''\n        };\n      }\n    );\n    const customerid = challanlistvalues.customerid;\n    const customernumber = challanlistvalues.customernumber;\n    const customername = challanlistvalues.customername;\n    console.log('--COMPONENTDIDMOUNT--');\n    console.log(challanlistvalues);\n    setTimeout(() => {\n      this.setState({\n        ...this.state.purchaseorderlistvalues,\n        challanlistvalues,\n        status: true\n      });\n    },2000);\n    this.dynamicClick();\n  }\n  dynamicClick() {\n    if (document.getElementsByClassName('pdf-class')) {\n      if (\n        document.getElementsByClassName('pdf-class')[0].children.length <= 1\n      ) {\n        setTimeout(() => {\n          this.dynamicClick();\n        }, 7000);\n      } else if (\n        document.getElementsByClassName('pdf-class')[0].children.length > 1\n      ) {\n        this.setState({\n          link: document.getElementsByClassName('pdf-class')[0].children[1].src\n          // status : undefined,\n        },()=>{\n          setTimeout(() => {\n            document.getElementById('D1').click();\n            this.props.history.push('/challanlist');\n          }, 300);\n        });\n   \n      }\n    } else {\n    }\n  }\n  render() {\n    const data_cond = [\n      {\n        slno: '1',\n        title: 'Invoices',\n        value: '2 copies Invoices (original & duplicate)'\n      },\n      {\n        slno: '2',\n        title: 'Tax & Duty',\n        value: 'Included'\n      },\n      {\n        slno: '3',\n        title: 'Payment Schedule',\n        value: '15 days from the date of delivery'\n      },\n      {\n        slno: '4',\n        title: 'Delivery Schedule',\n        value: 'Immediately'\n      },\n      {\n        slno: '5',\n        title: 'Billing address & GST No',\n        value:\n          'M/s Pondhan Scaffolding Pvt Ltd \\n Plot no. 40/41, Road no.5, Obedanahalli,'\n      },\n      {\n        slno: '6',\n        title: 'Delivery Address',\n        value: 'M/s Pondhan Scaffolding Pvt Ltd'\n      }\n    ];\n    const { status, challanlistvalues, link } = this.state;\n    console.log(this.state);\n    return (\n      <div>\n        <div className='pdf-class'>\n          Downloading file.Please wait.\n          {/* {!status && (\n          <h1 style={{ 'position': 'absolute','left': '50%','top': '50%','transform': 'translate(-50%, -50%);'}}>Downloading file.Please wait.</h1>\n        )} */}\n          <a href={link} download id='D1'></a>\n          {status && (\n            <PDFViewer>\n              <MyDocument\n                challanlistvalues={this.state.challanlistvalues}\n                data_cond={data_cond}\n                logo={logo}\n              />\n            </PDFViewer>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\nfunction mapStateToProps(state) {\n  return {\n    challanlistvalues: state.challanlistvalues\n  };\n}\nexport default connect(\n  mapStateToProps,\n  { getChallan }\n)(ViewChallanPdf);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport DataTable from \"../../Components/Table/DatatablePage\";\nimport DatePicker from \"react-datepicker\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Card,\n  CardBody,\n  CardHeader,\n  Breadcrumb,\n  BreadcrumbItem,\n  Row,\n  Cols,\n  Label,\n  Button,\n  Alert,\n  Col,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from \"reactstrap\";\nimport CustomLoader from \"../../Components/loader/loader\";\nimport axios from \"axios\";\n\n\nclass EnquiryPage extends React.Component {\n  state = {\n    searchtodate: null,\n    count: null,\n    success: false,\n    update: false,\n    enquirylistvalues: [],\n    backupenquirylistvalues: [],\n    loading: false,\n    errorMsg: '',\n    data: {\n      eno: '',\n      company: '',\n      name: '',\n      phone: '',\n      email: '',\n      detail: '',\n      enquiryFrom: '',\n //   quoteno: '',\n      quotationCreated: false\n    }\n  };\n\n  componentDidMount = () => {\n    this.dataHandler(true);\n    this.getEnquiries()\n  };\n\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n\n  onhandlerChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n  quotationCreated = e => {\n    const val = this.state.data.quotationCreated;\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [\"quotationCreated\"]: !val }\n    })\n  }\n  updateButton = e => {\n    console.log(e);\n    if (!e.quotationCreated) { e.quotationCreated = false; }\n    this.setState({ ...this.state, success: true, update: true, data: e });\n  }\n  getEnquiries() {\n    this.dataHandler(true)\n    axios\n      .get(`${process.env.REACT_APP_BASE_URL}/Enquiry/getenquiry`)\n      .then(res => {\n        this.dataHandler(false)\n        if (res.data.enquirylist.enquirydata.length > 0) {\n          let enquiryvalues = res.data.enquirylist.enquirydata;\n          if (enquiryvalues.length > 0) {\n            enquiryvalues = enquiryvalues.reverse()\n            enquiryvalues = enquiryvalues.map(enquiry => {\n              console.log(enquiry)\n              let created = \"No\"\n              if (enquiry.quotationCreated) {\n                created = \"Yes\"\n              }\n              return {\n                date: enquiry.date,\n                name: enquiry.name,\n                phone: enquiry.phone,\n                company: enquiry.company,\n                email: enquiry.email,\n                detail: enquiry.detail,\n                enquiryFrom: enquiry.enquiryFrom || null,\n            //    quoteno: enquiry.quoteno || null,\n                view: (\n                  <Button\n                    Label\n                    color='primary'\n                    onClick={() => {\n                      this.updateButton(enquiry);\n                    }}\n                  >\n                    Edit\n                </Button>\n                )\n\n              };\n            });\n\n            this.setState({\n              enquirylistvalues: enquiryvalues,\n              count: enquiryvalues.length\n            }, () => {\n            })\n          }\n        }\n        else {\n          this.setState({ count: 0 })\n        }\n      },\n        error => {\n          this.dataHandler(false)\n          this.setState({ success: false, message: 'Server error.' });\n        });\n  }\n\n  addenquiry = () => {\n    this.setState({\n      success: true, update: false,\n      data: {\n        eno: '',\n        company: '',\n        name: '',\n        phone: '',\n        email: '',\n        detail: '',\n        enquiryFrom: '',\n   //   quoteno: '',\n        quotationCreated: false\n      }\n    });\n  }\n\n  addnewenquiry = () => {\n    const { data } = this.state;\n    if (data.company == '' || data.name == '' || data.phone == '' || data.email == '' || data.detail == '' || data.enquiryFrom == '') {\n      this.setState({ 'errorMsg': 'Fill all fields' });\n    }\n    else {\n      console.log(this.state.data)\n\n      this.dataHandler(true)\n      let date = (new Date().getDate() < 10 ? \"0\" + new Date().getDate() : new Date().getDate()) +\n        \"/\" + (new Date().getMonth() + 1 < 10 ? \"0\" + (new Date().getMonth() + 1) : new Date().getMonth() + 1) + \"/\" + new Date().getFullYear();\n\n      axios\n        .post(`${process.env.REACT_APP_BASE_URL}/Enquiry/addenquiry`,\n          {\n            \"eno\": \"\",\n            \"company\": data.company,\n            \"name\": data.name,\n            \"phone\": data.phone,\n            \"email\": data.email,\n            \"detail\": data.detail,\n            \"date\": date,\n            \"enquiryFrom\": data.enquiryFrom,\n          //  \"quoteno\": data.quoteno,\n            \"quotationCreated\": data.quotationCreated\n          })\n        .then(res => {\n          this.getEnquiries()\n          this.toggle();\n        },\n          error => {\n            this.dataHandler(false)\n            this.setState({ success: false, message: 'Server error.' });\n          });\n    }\n  }\n\n  updateenquiry = () => {\n    const { data } = this.state;\n    console.log(data)\n    axios\n      .post(`${process.env.REACT_APP_BASE_URL}/Enquiry/updateenquiry`,\n        {\n          \"_id\": data._id,\n          \"eno\": \"\",\n          \"company\": data.company,\n          \"name\": data.name,\n          \"phone\": data.phone,\n          \"email\": data.email,\n          \"detail\": data.detail,\n          \"date\": data.date,\n          \"enquiryFrom\": data.enquiryFrom,\n        //  \"quoteno\": data.quoteno,\n          \"quotationCreated\": data.quotationCreated\n        })\n      .then(res => {\n        this.getEnquiries()\n        this.toggle();\n      },\n        error => {\n          this.dataHandler(false)\n          this.setState({ success: false, message: 'Server error.' });\n        });\n  }\n\n\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  }\n\n  render() {\n    const { count, enquirylistvalues, loading, success, data, errorMsg, update } = this.state;\n\n    const columnvalue = [\n      {\n        label: \"Date\",\n        field: \"date\",\n        sort: \"asc\",\n        width: 50\n      },\n      {\n        label: \"Customer name\",\n        field: \"name\",\n        sort: \"asc\",\n        width: 50\n      },\n      {\n        label: \"Phone number\",\n        field: \"phone\",\n        sort: \"asc\",\n        width: 50\n      },\n      {\n        label: \"Company name\",\n        field: \"company\",\n        sort: \"asc\",\n        width: 50\n      },\n      {\n        label: \"Email\",\n        field: \"email\",\n        sort: \"asc\",\n        width: 50\n      },\n      {\n        label: \"Item detail\",\n        field: \"detail\",\n        sort: \"asc\",\n        width: 50\n      },\n      {\n        label: \"Enquiry\",\n        field: \"enquiryFrom\",\n        sort: \"asc\",\n        width: 50\n      },\n      // {\n      //   label: \"Quotation created\",\n      //   field: \"quotationCreated\",\n      //   sort: \"asc\",\n      //   width: 50\n      // },\n      {\n        label: \"Edit\",\n        field: \"edit\",\n        sort: \"asc\",\n        width: 50\n      }\n    ];\n\n\n\n\n    let modaldata, errormessage;\n    errormessage = errorMsg != '' ? (<p style={{ 'textAlign': 'center', 'color': 'red' }}>{errorMsg}</p>) : null\n    if (success) {\n      modaldata = (\n        <Modal\n          isOpen={success}\n          toggle={this.toggle}\n          className={this.props.className}\n        >\n          <ModalHeader toggle={this.toggle}>Enquiry</ModalHeader>\n          <ModalBody>\n\n            <input type=\"text\" className=\"form-control\" placeholder=\"Company name\" name=\"company\" value={data.company} style={{ 'marginBottom': '12px' }} onChange={this.onhandlerChange} />\n            <input type=\"text\" className=\"form-control\" placeholder=\"Person name\" name=\"name\" value={data.name} style={{ 'marginBottom': '12px' }} onChange={this.onhandlerChange} />\n            <input type=\"text\" className=\"form-control\" placeholder=\"Mode of enquiry\" name=\"enquiryFrom\" value={data.enquiryFrom} style={{ 'marginBottom': '12px' }} onChange={this.onhandlerChange} />\n            <input type=\"number\" className=\"form-control\" placeholder=\"Phone number\" name=\"phone\" value={data.phone} style={{ 'marginBottom': '12px' }} onChange={this.onhandlerChange} />\n            <input type=\"email\" className=\"form-control\" placeholder=\"Email\" name=\"email\" value={data.email} style={{ 'marginBottom': '12px' }} onChange={this.onhandlerChange}  />\n            <textarea type=\"text\" className=\"form-control\" placeholder=\"Item details\" name=\"detail\" value={data.detail} style={{ 'marginBottom': '12px' }} onChange={this.onhandlerChange}  ></textarea>\n            {/* <input type=\"text\" className=\"form-control\" placeholder=\"Quotation Number\" name=\"quoteno\" value={data.quoteno} style={{ 'marginBottom': '12px' }} onChange={this.onhandlerChange} /> */}\n            {/* <input type=\"checkbox\" className=\"\" value={data.quotationCreated} onChange={this.quotationCreated} checked={data.quotationCreated} /> <span style={{position:'relative',top:'-12px'}}> Quotation created </span> */}\n            {errormessage}\n          </ModalBody>\n          <ModalFooter>\n            {update ? (\n              <Button\n                Label\n                style={{ float: 'right' }}\n                color=\"primary\"\n                onClick={this.updateenquiry}\n              >\n                Update\n          </Button>\n            ) : (\n                <div>\n                  <Button color=\"primary\" onClick={this.toggle} style={{ fontSize: '0.8rem' }}>\n                    Cancel\n          </Button>\n                  <Button\n                    Label\n                    style={{ float: 'right' }}\n                    color=\"primary\"\n                    onClick={this.addnewenquiry}\n                  >\n                    Submit\n        </Button>\n                </div>\n              )}\n          </ModalFooter>\n        </Modal>\n      )\n    }\n\n\n    return (\n      <div className=\"mg-t-20\">\n        {loading ? <CustomLoader /> : null}\n \n          <div>\n            <Breadcrumb>\n              <BreadcrumbItem>\n                <Link to=\"/admin_dashboard\">Home</Link>\n              </BreadcrumbItem>\n              <BreadcrumbItem>\n                <Link to=\"/crmlist\">CRM</Link>\n              </BreadcrumbItem>\n              <BreadcrumbItem active>Enquiries</BreadcrumbItem>\n\n            </Breadcrumb>\n\n\n            <Button\n              Label\n              style={{ float: 'right' }}\n              color=\"primary\"\n              onClick={this.addenquiry}\n            >\n              Add Enquiry\n          </Button>\n\n            {modaldata}\n\n            <DataTable\n              columnvalue={columnvalue}\n              rowvalues={enquirylistvalues}\n              className=\"customerlist\"\n            />\n\n          </div>\n         \n      </div>\n    );\n  }\n}\n\n\n\nexport default EnquiryPage\n","import axios from \"axios\";\n\nexport default {\n  invoice: {\n    addinvoice: data => {\n      return axios\n        .post(`${process.env.REACT_APP_BASE_URL}/invoice/addinvoice`, {\n          data\n        })\n        .then(res => {\n          return res.data.invoicedata;\n        });\n    },\n    updateinvoice: data => {\n      return axios\n        .post(`${process.env.REACT_APP_BASE_URL}/invoice/updateinvoice`, {\n          data\n        })\n        .then(res => {\n          return res.data.invoicedata;\n        });\n    },\n    \n    getinvoice: () => {\n      return axios\n        .get(`${process.env.REACT_APP_BASE_URL}/invoice/getinvoice`)\n        .then(res => {\n          return res.data.invoicelist;\n        });\n    },\n    getproformainvoice: () => {\n      return axios\n        .get(`${process.env.REACT_APP_BASE_URL}/proformainvoice/getproformainvoice`)\n        .then(res => {\n          return res.data.invoicelist;\n        });\n    },\n    searchquotation: customerid => {\n      return axios\n        .get(\n          `${process.env.REACT_APP_BASE_URL}/quotation/searchquotation?q=${customerid}`\n        )\n        .then(res => {\n          return res.data.customerquotationlist;\n        });\n    }\n  }\n};\n","import { normalize } from \"normalizr\";\nimport api from \"../Services/invoiceapi\";\nimport { ADD_INVOICE, INVOICE_FETCHED,PROFORMAINVOICE_FETCHED } from \"../Services/types\";\nimport { invoiceListSchema,proformainvoiceListSchema } from \"../Schemas/schemas\";\n\nconst invoiceCreated = invoicelist => {\n  return {\n    type: ADD_INVOICE,\n    invoicelist\n  };\n};\n\nconst invoiceFetched = invoicelist => {\n  return {\n    type: INVOICE_FETCHED,\n    invoicelist\n  };\n};\n\nconst proformainvoiceFetched = proformainvoicelist => {\n  return {\n    type: PROFORMAINVOICE_FETCHED,\n    proformainvoicelist\n  };\n};\n\nexport const addinvoice = data => {\n  return dispatch => {\n    return api.invoice.addinvoice(data).then(invoicelistvalues => {\n      return dispatch(\n        invoiceCreated(normalize(invoicelistvalues, invoiceListSchema))\n      );\n    });\n  };\n};\n\nexport const updateinvoice = data => {\n  return dispatch => {\n    return api.invoice.updateinvoice(data).then(invoicelistvalues => {\n      return dispatch(\n        invoiceCreated(normalize(invoicelistvalues, invoiceListSchema))\n      );\n    });\n  };\n};\n\n\n\nexport const getinvoice = () => {\n  return dispatch => {\n    return api.invoice.getinvoice().then(invoicelist => {\n      const invoicelistvalues = invoicelist.invoicedata;\n      console.log(invoicelistvalues)\n      return dispatch(\n        invoiceFetched(normalize(invoicelistvalues, [invoiceListSchema]))\n      );\n    });\n  };\n};\n\nexport const getproformainvoice = () => {\n  return dispatch => {\n    return api.invoice.getproformainvoice().then(invoicelist => {\n      const proformainvoicelist = invoicelist.invoicedata;\n      console.log(proformainvoicelist)\n      return dispatch(\n        proformainvoiceFetched(normalize(proformainvoicelist, [proformainvoiceListSchema]))\n      );\n    });\n  };\n};\n\nexport const searchquotation = customerid => {\n  return dispatch => {\n    return api.quotation.searchquotation(customerid);\n  };\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { AvForm, AvField, AvGroup } from 'availity-reactstrap-validation';\nimport moment from 'moment';\nimport {\n  Button,\n  Label,\n  Alert,\n  Card,\n  CardBody,\n  CardHeader,\n  Row,\n  Col,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from 'reactstrap';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport axios from 'axios';\nimport CustomLoader from \"../../../../Components/loader/loader\";\n\nclass InvoiceForm extends React.Component {\n  state = {\n    customerID: null,\n    transaction: [],\n    data: {\n      customerdetail: {\n        id: null,\n        customernumber: '',\n        customergstnumber: '',\n        customercontactnumber: '',\n        customergstnumber: '',\n        customeraddress1: '',\n        customeraddress2: '',\n        city: '',\n        state: '',\n        country: '',\n        pincode: '',\n        deliveryAddress: {\n          address1: '',\n          address2: '',\n          city: '',\n          pincode: '',\n          state: '',\n          country: ''\n        }\n      },\n      selectedItemlist: {\n        id: [null],\n        itemname: [null],\n        itemdescription: [null],\n        itemtype: [null],\n        itemrate: [null],\n        itemuom: [null],\n        itemdiscount: [],\n        costperunit: [],\n        quantity: [],\n        totalcost: []\n      },\n      invoicenumber: '',\n      deliverychallannumber: '',\n      purchaseordernumber: '',\n      vendorcode: '',\n      vehiclenumber: '',\n      hsncode: '',\n      saccode: '',\n      billingaddress: '',\n      remarks:'',\n      deliveryaddress: '',\n      taxableamount: '',\n      freightcharges: '',\n      cgst: '',\n      sgst: '',\n      igst: '',\n      total: '',\n      subtotal: '',\n      total: '',\n      grandtotal: '',\n      date: new Date(),\n      invoicedate: new Date(),\n      purchaseorderdate: new Date(),\n      goodsDescription: '',\n      roundoffamount: '',\n      deliverychallandata: '',\n      workorderno: '',\n      workorderdate: '',\n      despathdate: '',\n      removaltime:'',\n      transportationcharge:'',\n      advanceamountreceived:'',\n      values: ['']\n    },\n    errors: {},\n    customerobjects: {},\n    customerlistvalues: [],\n    challanlistvalues: [],\n    uom: [],\n    masteritemlistvalues: [],\n    masteritemlistvaluesobject: {},\n    masteritemtypelistvalues: [],\n    masteritemtypelistvaluesobject: {},\n    loading: false,\n    success: false,\n    visible: false,\n    successmsg: ''\n  };\n\n  componentDidMount() {\n    const invoicelistvalues = Object.keys(this.props.invoicelistvalues);\n\n      \n    const customerlistvalues = Object.values(this.props.customerlistvalues);\n    const customerobjects = this.props.customerlistvalues;\n    const masteritemlistvalues = Object.values(this.props.masteritemlistvalues);\n    const masteritemlistvaluesobject = this.props.masteritemlistvalues;\n    const challanlistvalues = Object.values(this.props.challanlistvalues);\n    console.log(challanlistvalues)\n    const masteritemtypelistvalues = Object.values(\n      this.props.masteritemtypelistvalues\n    );\n    const masteritemtypelistvaluesobject = this.props.masteritemtypelistvalues;\n\n    const uom = Object.values(this.props.uomlistvalues);\n    this.setState({\n      ...this.state,\n      customerlistvalues,\n      challanlistvalues,\n      customerobjects,\n      masteritemlistvalues,\n      masteritemlistvaluesobject,\n      masteritemtypelistvalues,\n      masteritemtypelistvaluesobject,\n      uom\n    });\n\n    if (this.props.ID != undefined) {\n  \n      this.getInvoiceDetails(this.props.ID)\n    }\n    else{\n    \n      if(Object.keys(this.props.invoicelistvalues).length == 0){\n\n        this.dataHandler(true)\n        axios\n        .get(`${process.env.REACT_APP_BASE_URL}/invoice/getinvoice`)\n        .then(res => {\n    \n          this.dataHandler(false)\n         // if(res.data.invoicelist.invoicedata.length > 0){\n            let invoicelistlength =\n            res.data.invoicelist.invoicedata.length > 0 ? res.data.invoicelist.invoicedata.length : 0;\n            let invoicenumber = (1 + invoicelistlength)\n            this.setState({\n              ...this.state,\n              data: {\n                ...this.state.data,\n                invoicenumber\n              }\n            }); \n          //}\n          this.getChallandata()\n        },\n        error =>{\n          this.dataHandler(false)\n         \n        });\n\n      }\n      else{\n        const invoicenumber =\n        invoicelistvalues.length > 0 ? 1 + invoicelistvalues.length : 1;\n        this.setState({\n          data: {\n            ...this.state.data,\n            invoicenumber\n          }\n        })\n      }\n      \n    }\n  }\n\n\n\n  getChallandata(){\n    \n    axios\n    .get(`${process.env.REACT_APP_BASE_URL}/challan/getchallan`)\n    .then(res => {\n       if (res.data.challanlist.challandata.length > 0) {\n         const challanlistvalues = res.data.challanlist.challandata;  \n         this.setState({\n          ...this.state,\n          challanlistvalues\n         })      \n      }\n    },\n      error => {\n        this.setState({ success: false, message: 'Server error.' });\n      });\n  }\n\n\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n\n  getInvoiceDetails(id) {\n    this.dataHandler(true)\n    axios\n      .get(`${process.env.REACT_APP_BASE_URL}/invoice/getsingleinvoice/${id}`)\n      .then(res => {\n\n         if (res.data.invoicelist.invoicedata.length > 0) {\n           let founddata = res.data.invoicelist.invoicedata;\n\n           const newState = Object.assign({}, this.state);\n           newState.data.customerdetail.id = founddata[0].customerid;\n           newState.data.values = founddata[0].addeditemlist;\n\n           newState.data.invoicenumber = founddata[0].invoicenumber;\n           newState.data.date = new Date(founddata[0].date);\n           newState.data.deliverychallannumber = founddata[0].deliverychallannumber;\n           if(founddata[0].deliverychallannumber && founddata[0].deliverychallannumber != '')\n            this.handleChallanChange(founddata[0].deliverychallannumber)\n\n          if(founddata[0].purchaseordernumber != '' && founddata[0].purchaseordernumber != null){\n            if(founddata[0].purchaseordernumber.toString().lastIndexOf('$') > -1){\n              newState.data.purchaseordernumber = founddata[0].purchaseordernumber.toString().split('$')[0]\n            }\n            else\n              newState.data.purchaseordernumber = founddata[0].purchaseordernumber\n          }\n           \n           newState.data.vendorcode = founddata[0].vendorcode;\n\n           newState.data.vehiclenumber = founddata[0].vehiclenumber;\n           newState.data.hsncode = founddata[0].hsncode;\n           newState.data.saccode = founddata[0].saccode;\n           newState.data.billingaddress = founddata[0].billingaddress;\n           newState.data.remarks = founddata[0].remarks ? founddata[0].remarks : '';\n           newState.data.deliveryaddress = founddata[0].deliveryaddress;\n\n           newState.data.taxableamount = founddata[0].taxableamount;\n           newState.data.freightcharges = founddata[0].freightcharges;\n           newState.data.cgst = founddata[0].cgst;\n           newState.data.sgst = founddata[0].sgst;\n\n           newState.data.igst = founddata[0].igst;\n           newState.data.total = founddata[0].total;\n           newState.data.subtotal = founddata[0].subtotal;\n           newState.data.grandtotal = founddata[0].grandtotal;\n           newState.data.invoicedate = new Date(founddata[0].invoicedate);\n           newState.data.purchaseorderdate = new Date(founddata[0].purchaseorderdate);\n           newState.data.goodsDescription = founddata[0].goodsDescription;\n           newState.data.roundoffamount = founddata[0].roundoffamount;\n           \n           newState.data.deliverychallandata =  founddata[0].deliverychallandata ? founddata[0].deliverychallandata : '';\n           newState.data.workorderno =  founddata[0].workorderno ? founddata[0].workorderno : ''\n           newState.data.workorderdate = founddata[0].workorderdate ? new Date(founddata[0].workorderdate) : ''\n           newState.data. despathdate = founddata[0].despathdate ? new Date(founddata[0].despathdate) : ''\n           newState.data.removaltime = founddata[0].removaltime ? founddata[0].removaltime : ''\n           newState.data.transportationcharge = founddata[0].transportationcharge ?  founddata[0].transportationcharge : ''\n           newState.data.advanceamountreceived = founddata[0].advanceamountreceived ? founddata[0].advanceamountreceived : ''\n\n          if (founddata[0].addeditemlist.length > 0) {\n\n            for (var i = 0; i < founddata[0].addeditemlist.length; i++) {\n              founddata[0].addeditemlist[i].itemdiscount = founddata[0].addeditemlist[i].itemdiscount == null || founddata[0].addeditemlist[i].itemdiscount == '' ?\n                founddata[0].addeditemlist[i].itemdiscount = 0 : founddata[0].addeditemlist[i].itemdiscount\n              founddata[0].addeditemlist[i].itemdiscount = (founddata[0].addeditemlist[i].itemdiscount).toString()\n\n\n              founddata[0].addeditemlist[i].quantity = founddata[0].addeditemlist[i].quantity == null || founddata[0].addeditemlist[i].quantity == '' ?\n                founddata[0].addeditemlist[i].quantity = 0 : founddata[0].addeditemlist[i].quantity\n              founddata[0].addeditemlist[i].quantity = (founddata[0].addeditemlist[i].quantity).toString()\n\n              founddata[0].addeditemlist[i].costperunit = founddata[0].addeditemlist[i].costperunit == null || founddata[0].addeditemlist[i].costperunit == '' ?\n                founddata[0].addeditemlist[i].costperunit = 0 : founddata[0].addeditemlist[i].costperunit\n              founddata[0].addeditemlist[i].costperunit = (founddata[0].addeditemlist[i].costperunit).toString()\n\n              founddata[0].addeditemlist[i].totalcost = founddata[0].addeditemlist[i].totalcost == null || founddata[0].addeditemlist[i].totalcost == '' ?\n                founddata[0].addeditemlist[i].totalcost = 0 : founddata[0].addeditemlist[i].totalcost\n              founddata[0].addeditemlist[i].totalcost = (founddata[0].addeditemlist[i].totalcost).toString()\n\n      \n\n\n\n              newState.data.selectedItemlist.itemdescription.push(founddata[0].addeditemlist[i].itemdescription)\n              newState.data.selectedItemlist.itemtype.push(founddata[0].addeditemlist[i].itemtype._id)\n              newState.data.selectedItemlist.itemdiscount.push(founddata[0].addeditemlist[i].itemdiscount)\n\n\n             \n              newState.data.selectedItemlist.itemuom.push(founddata[0].addeditemlist[i].itemuom._id)\n              newState.data.selectedItemlist.quantity.push(founddata[0].addeditemlist[i].quantity)\n\n              newState.data.selectedItemlist.costperunit.push(founddata[0].addeditemlist[i].costperunit)\n\n              newState.data.selectedItemlist.totalcost.push(founddata[0].addeditemlist[i].totalcost)\n              newState.data.selectedItemlist.id.push(founddata[0].addeditemlist[i].id)\n              console.log(founddata[0].addeditemlist[i].id)\n\n            }\n          }\n\n          this.setState(newState);\n          this.handleChange(founddata[0].customerid)\n          if (founddata[0].addeditemlist.length > 0) {\n            founddata[0].addeditemlist.filter((item, index) => {\n              this.selectitemchange(item.id._id, index,false);\n            })\n          }\n\n          this.dataHandler(false)\n        }\n        else {\n          this.setState({ count: 0 })\n          this.dataHandler(false)\n        }\n      },\n        error => {\n          this.dataHandler(false)\n          this.setState({ success: false, message: 'Server error.' });\n        });\n  }\n\n  componentWillReceiveProps(props) {\n    const invoicelistvalues = Object.keys(props.invoicelistvalues);\n    const customerlistvalues = Object.values(props.customerlistvalues);\n    const customerobjects = props.customerlistvalues;\n    const masteritemlistvalues = Object.values(props.masteritemlistvalues);\n    const masteritemlistvaluesobject = props.masteritemlistvalues;\n    const masteritemtypelistvalues = Object.values(\n      props.masteritemtypelistvalues\n    );\n    const masteritemtypelistvaluesobject = props.masteritemtypelistvalues;\n    const uom = Object.values(props.uomlistvalues);\n\n    if (this.props.ID == undefined) {\n      const invoicenumber =\n        invoicelistvalues.length > 0 ? 1 + invoicelistvalues.length : 1;\n\n      this.setState({\n        data: {\n          ...this.state.data,\n          invoicenumber\n        }\n      })\n    }\n\n\n    this.setState({\n      ...this.state,\n      customerlistvalues,\n      customerobjects,\n      masteritemlistvalues,\n      masteritemlistvaluesobject,\n      masteritemtypelistvalues,\n      masteritemtypelistvaluesobject,\n      uom\n    });\n  }\n\n  onhandlerChange = e => {\n    if (e.target.name === 'freightcharges') {\n      const sub = parseFloat(e.target.value)\n        ? parseFloat(e.target.value).toFixed(2)\n        : 0;\n      const taxable = parseFloat(this.state.data.taxableamount).toFixed(2);\n      const subtotal = Number(sub) + Number(taxable);\n      console.log(subtotal);\n      this.setState(\n        {\n          ...this.state,\n          data: {\n            ...this.state.data,\n            [e.target.name]: e.target.value,\n            ['subtotal']: subtotal\n          }\n        },\n        () => {\n          this.calculatePercentageAmount();\n        }\n      );\n    } else if (\n      e.target.name === 'cgst' ||\n      e.target.name === 'igst' ||\n      e.target.name === 'sgst'\n    ) {\n      const ttl = parseFloat(this.state.data.total).toFixed(2);\n      const gst = parseFloat(e.target.value).toFixed(2);\n      const total = Number(ttl) + Number(ttl) * (Number(gst) / 100).toFixed(2);\n      const gt = parseFloat(this.state.data.grandtotal).toFixed(2);\n      const grandtotal =\n        Number(gt) + Number(gt) * (Number(gst) / 100).toFixed(2);\n      this.setState(\n        {\n          ...this.state,\n          data: {\n            ...this.state.data,\n            [e.target.name]: e.target.value\n          }\n        },\n        () => {\n          this.calculatePercentageAmount();\n        }\n      );\n    } else if (e.target.name === 'roundoffamount') {\n      const roa = parseFloat(e.target.value)\n        ? parseFloat(e.target.value).toFixed(2)\n        : 0;\n      const gt = parseFloat(this.state.data.grandtotal).toFixed(2);\n\n      let grandtotal = 0;\n      if (roa > 0) grandtotal = Number(gt) + Number(roa);\n      else {\n        grandtotal = Number(gt) - Number(this.state.data.roundoffamount);\n      }\n      this.setState({\n        ...this.state,\n        data: {\n          ...this.state.data,\n          [e.target.name]: e.target.value\n        }\n      }, () => {\n        this.calculateRoundoffTotal();\n      });\n    } else {\n      this.setState({\n        ...this.state,\n        data: { ...this.state.data, [e.target.name]: e.target.value }\n      });\n    }\n  };\n  calculateRoundoffTotal = () => {\n    let grandtotal = 0;\n    const gt = parseFloat(this.state.data.grandtotal).toFixed(2);\n    const total = parseFloat(this.state.data.total).toFixed(2);\n    const roa = Number(this.state.data.roundoffamount);\n    if (roa > 0) {\n      grandtotal = Number(total) + Number(roa)\n    } else if (roa < 0) {\n      grandtotal = Number(total) + Number(roa)\n    } else {\n      grandtotal = total\n    }\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        ['grandtotal']: grandtotal\n      }\n    });\n  }\n  calculatePercentageAmount = () => {\n    // CGST\n    let cgst = this.state.data.cgst;\n    cgst = parseFloat(cgst) ? parseFloat(cgst).toFixed(2) : 0;\n    // SGST\n    let sgst = this.state.data.sgst;\n    sgst = parseFloat(sgst) ? parseFloat(sgst).toFixed(2) : 0;\n    // CGST\n    let igst = this.state.data.igst;\n    igst = parseFloat(igst) ? parseFloat(igst).toFixed(2) : 0;\n\n    let subTotal = parseFloat(this.state.data.subtotal)\n      ? Number(parseFloat(this.state.data.subtotal).toFixed(2))\n      : 0;\n    let roundoffamount = parseFloat(this.state.data.roundoffamount)\n      ? parseFloat(this.state.data.roundoffamount).toFixed(2)\n      : 0;\n    // Convert it to percentage\n    cgst = (subTotal * cgst) / 100;\n    sgst = (subTotal * sgst) / 100;\n    igst = (subTotal * igst) / 100;\n\n    const total = (Number(subTotal) + Number(cgst) + Number(sgst) + Number(igst)).toFixed(2);\n    const grandtotal = (Number(total) + Number(roundoffamount)).toFixed(2);\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        ['total']: total,\n        ['grandtotal']: grandtotal\n      }\n    });\n  };\n  \n  onCustomerChange = e => {\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        customerdetail: {\n          ...this.state.data.customerdetail,\n          [e.target.name]: e.target.value\n        }\n      }\n    });\n  };\n\n  onRemarksChange = e => {\n\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        remarks: e.target.value\n      }\n    });\n  };\n\n  handleDate = date => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, ['date']: date }\n    });\n  };\n  handleWorkorderDate = date => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, ['workorderdate']: date }\n    });\n  };\n  handleDespathdate = date => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, ['despathdate']: date }\n    });\n  };\n  \n  purchaseDate = date => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, ['purchaseorderdate']: date }\n    });\n  };\n  invocieDate = date => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, ['invoicedate']: date }\n    });\n  };\n  onSubjectHandler = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    },() =>{\n      console.log(this.state.data)\n    });\n  };\n\n  createSelectcustomer = () => {\n    let items = [];\n    const customerlistvalues = this.state.customerlistvalues;\n    customerlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.customername}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  selectitemchange = (e, index,bool) => {\n    let selected_id = e.target ? e.target.value : e;\n    if (selected_id) {\n      let selected_item = this.state.masteritemlistvaluesobject[selected_id];\n      if(selected_item){\n        const selectedItemlist = { ...this.state.data.selectedItemlist };\n        selectedItemlist.id[index] = selected_item.id;\n        selectedItemlist.itemname[index] = selected_item.masteritemtypename;\n        selectedItemlist.itemdescription[index] =\n          selected_item.masteritemdescription;\n        \n          // selectedItemlist.itemdescription[index] = selected_item.masteritemshortdescription == '' ? selected_item.masteritemdescription \n          // : selected_item.masteritemshortdescription\n        selectedItemlist.itemtype[index] = selected_item.masteritemtype._id;\n        selectedItemlist.itemrate[index] = selected_item.masteritemrate;\n        selectedItemlist.itemuom[index] = selected_item.masteritemuom._id;\n\n          if (this.props.ID == undefined) {\n\n              selectedItemlist.itemdiscount[index] = '0';\n              selectedItemlist.costperunit[index] = selected_item.masteritemcostperunit\n                ? selected_item.masteritemcostperunit.toString()\n                : '';\n              selectedItemlist.quantity[index] = (1).toString();\n              selectedItemlist.totalcost[index] = selected_item.masteritemcostperunit\n                ? selected_item.masteritemcostperunit.toString()\n                : '';\n      \n          }\n\n\n      \n        this.setState({\n          ...this.state.data,\n          data: {\n            ...this.state.data,\n            selectedItemlist\n          }\n        },()=>{\n          if(bool)\n            this.totalValue();\n        });\n      }\n     \n\n    }\n \n  };\n\n  quantityChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    const costperunit = selectedItemlist.costperunit[index] || null;\n    selectedItemlist.quantity[index] = e.target.value;\n    const quantity = e.target.value;\n    const discountpercentagevalue = selectedItemlist.itemdiscount[index];\n    if (discountpercentagevalue && costperunit && quantity) {\n      const totalcost =\n        parseFloat(quantity) * parseFloat(selectedItemlist.costperunit[index]);\n      const discountvalue = parseFloat(discountpercentagevalue / 100).toFixed(\n        2\n      );\n      const totaldiscountcost = parseFloat(totalcost * discountvalue).toFixed(\n        2\n      );\n      const totalvaluecost = totalcost - totaldiscountcost;\n      selectedItemlist.totalcost[index] = totalvaluecost\n        ? totalvaluecost.toFixed(2)\n        : null || '';\n    } else {\n      const totalValue = costperunit\n        ? e.target.value * costperunit\n        : null || undefined || '';\n      selectedItemlist.totalcost[index] = totalValue\n        ? parseFloat(totalValue).toFixed(2)\n        : '';\n    }\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    },()=>{\n      this.totalValue();\n    });\n  \n  };\n\n  itemdiscountChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    const discount = e.target.value;\n    selectedItemlist.itemdiscount[index] = e.target.value;\n    const unitcost = selectedItemlist.costperunit[index];\n    const quantity = selectedItemlist.quantity[index];\n    const particularindextotalvalue = parseFloat(unitcost * quantity).toFixed(\n      2\n    );\n    if (particularindextotalvalue && discount) {\n      const discountvalue = parseFloat(discount / 100).toFixed(2);\n      const totaldiscountcost = parseFloat(\n        particularindextotalvalue * discountvalue\n      ).toFixed(2);\n      const totalvaluecost = particularindextotalvalue - totaldiscountcost;\n      selectedItemlist.totalcost[index] = parseFloat(totalvaluecost).toFixed(2);\n    } else {\n      selectedItemlist.totalcost[index] = particularindextotalvalue;\n    }\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n    this.totalValue();\n  };\n\n  unitChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.costperunit[index] = e.target.value;\n    const discountpercentagevalue = selectedItemlist.itemdiscount[index];\n    if (discountpercentagevalue) {\n      const totalcost =\n        parseFloat(selectedItemlist.quantity[index]) *\n        parseFloat(selectedItemlist.costperunit[index]);\n      const discountvalue = parseFloat(discountpercentagevalue / 100).toFixed(\n        2\n      );\n      const totaldiscountcost = parseFloat(totalcost * discountvalue).toFixed(\n        2\n      );\n      const totalvaluecost = totalcost - totaldiscountcost;\n      selectedItemlist.totalcost[index] = totalvaluecost\n        ? totalvaluecost.toFixed(2)\n        : null || '';\n    } else {\n      const totalcost =\n        parseFloat(selectedItemlist.quantity[index]) *\n        parseFloat(selectedItemlist.costperunit[index]);\n      selectedItemlist.totalcost[index] = totalcost\n        ? totalcost.toFixed(2)\n        : null || '';\n    }\n\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n    this.totalValue();\n  };\n\n  createSelectItemTypes = () => {\n    let items = [];\n    const masteritemtypelistvalues = this.state.masteritemtypelistvalues;\n    masteritemtypelistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.masteritemtypename}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  totalValue = () => {\n    const { totalcost } = this.state.data.selectedItemlist;\n    if (totalcost.length > 0) {\n      const taxableamount = totalcost\n        .map((value, i) => {\n          if (parseFloat(value)) {\n            const floatvalue = parseFloat(value).toFixed(2);\n            return floatvalue;\n          } else {\n            return parseFloat(0);\n          }\n        })\n        .reduce((a, b) => {\n          const parsedvalue = parseFloat(a) + parseFloat(b);\n          return parsedvalue;\n        });\n      this.setState({\n        ...this.state.data,\n        data: {\n          ...this.state.data,\n          taxableamount,\n          ['subtotal']: taxableamount,\n          ['total']: taxableamount,\n          ['grandtotal']: taxableamount\n        }\n      });\n    }\n  };\n\n  createSelectUomItems = () => {\n    let items = [];\n    const uomlistvalues = this.state.uom;\n    uomlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.uomname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  handleChange = e => {\n    let selected_id = e.target ? e.target.value : e\n    this.updateQuotation(selected_id);\n    console.log(selected_id)\n    let customerdetail = this.state.customerobjects[selected_id];\n    \n    if(customerdetail){\n      console.log(customerdetail)\n      this.setState({\n        ...this.state,\n        data: {\n          ...this.state.data,\n          billingaddress:\n            customerdetail.customeraddress1 +\n            ', ' +\n            customerdetail.customeraddress2 +\n            ', ' +\n            customerdetail.city +\n            ', ' +\n            customerdetail.state +\n            ', ' +\n            customerdetail.country +\n            ', ' +\n            customerdetail.pincode,\n          deliveryaddress:\n            customerdetail.deliveryAddress.address1 +\n            ', ' +\n            customerdetail.deliveryAddress.address2 +\n            ', ' +\n            customerdetail.deliveryAddress.city +\n            ', ' +\n            customerdetail.deliveryAddress.state +\n            ', ' +\n            customerdetail.deliveryAddress.country +\n            ', ' +\n            customerdetail.deliveryAddress.pincode,\n          customerdetail\n        }\n      });\n    }\n   \n  };\n\n  handleClick = e => {\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        values: [...this.state.data.values, ''],\n        selectedItemlist: {\n          ...this.state.data.selectedItemlist,\n          id: [...this.state.data.selectedItemlist.id, ''],\n          itemname: [...this.state.data.selectedItemlist.itemname, ''],\n          itemdescription: [\n            ...this.state.data.selectedItemlist.itemdescription,\n            ''\n          ],\n          itemtype: [...this.state.data.selectedItemlist.itemtype, ''],\n          itemrate: [...this.state.data.selectedItemlist.itemrate, ''],\n          itemuom: [...this.state.data.selectedItemlist.itemuom, ''],\n          itemdiscount: [...this.state.data.selectedItemlist.itemdiscount, ''],\n          costperunit: [...this.state.data.selectedItemlist.costperunit, ''],\n          quantity: [...this.state.data.selectedItemlist.quantity, ''],\n          totalcost: [...this.state.data.selectedItemlist.totalcost, '']\n        }\n      }\n    });\n\n\n\n\n  };\n\n  filterItems(itemarray, key) {\n    return itemarray.sort((a, b) => { return a[key].toLowerCase().localeCompare(b[key].toLowerCase()) })\n  }\n\n  createSelectItems = () => {\n    let items = [];\n    let masteritemlistvalues = this.state.masteritemlistvalues;\n    masteritemlistvalues = this.filterItems(masteritemlistvalues, 'masteritemtypename')\n    masteritemlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.masteritemtypename}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  removeClick = (e, index) => {\n    const removeItem = { ...this.state.data };\n    const values = removeItem.values;\n    const id = removeItem.selectedItemlist.id;\n    const itemname = removeItem.selectedItemlist.itemname;\n    const itemdescription = removeItem.selectedItemlist.itemdescription;\n    const itemtype = removeItem.selectedItemlist.itemtype;\n    const itemrate = removeItem.selectedItemlist.itemrate;\n    const itemuom = removeItem.selectedItemlist.itemuom;\n    const itemdiscount = removeItem.selectedItemlist.itemdiscount;\n    const costperunit = removeItem.selectedItemlist.costperunit;\n    const quantity = removeItem.selectedItemlist.quantity;\n    const totalcost = removeItem.selectedItemlist.totalcost;\n    values.splice(index, 1);\n    id.splice(index, 1);\n    itemname.splice(index, 1);\n    itemdescription.splice(index, 1);\n    itemtype.splice(index, 1);\n    itemrate.splice(index, 1);\n    itemuom.splice(index, 1);\n    itemdiscount.splice(index, 1);\n    costperunit.splice(index, 1);\n    quantity.splice(index, 1);\n    totalcost.splice(index, 1);\n\n\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        values,\n        selectedItemlist: {\n          ...this.state.data.selectedItemlist,\n          id,\n          itemname,\n          itemdescription,\n          itemtype,\n          itemrate,\n          itemuom,\n          itemdiscount,\n          costperunit,\n          quantity,\n          totalcost\n        }\n      }\n    });\n  };\n\n  handleValidSubmit = () => {\n    this.saveDynamicPonum();\n    let AddedIteminfo = [];\n    const { customerdetail, selectedItemlist } = this.state.data;\n    const id = selectedItemlist.id;\n    const itemname = selectedItemlist.itemname;\n    const itemdescription = selectedItemlist.itemdescription;\n    const itemtype = selectedItemlist.itemtype;\n    const itemrate = selectedItemlist.itemrate;\n    const itemuom = selectedItemlist.itemuom;\n    const itemdiscount = selectedItemlist.itemdiscount;\n    const costperunit = selectedItemlist.costperunit;\n    const quantity = selectedItemlist.quantity;\n    const totalcost = selectedItemlist.totalcost;\n   \n    this.setState({ loading: true });\n    const { data } = this.state;\n    console.log(data);\n    let values = data.values;\n    values.forEach(function (value, i) {\n      let obj = {};\n      obj.id = id[i] || null;\n      obj.itemname = itemname[i] || null;\n      obj.itemdescription = itemdescription[i] || null;\n      obj.itemtype = itemtype[i] || null;\n      obj.itemrate = itemrate[i] || null;\n      obj.itemuom = itemuom[i] || null;\n      obj.itemdiscount = itemdiscount[i] || null;\n      obj.costperunit = costperunit[i] || null;\n      obj.quantity = quantity[i] || null;\n      obj.totalcost = totalcost[i] || null;\n      AddedIteminfo.push(obj);\n    });\n    data['AddedIteminfo'] = AddedIteminfo;\n    console.log(JSON.stringify(data));\n    this.props\n      .submit(data)\n      .then(data => {\n\n\n        if(this.props.ID == undefined){\n          this.myFormRef.reset();\n          this.setState({ loading: false, errors: {}, success: true,successmsg:'Invoice is generated successfully' });\n        }\n        else{\n          this.setState({ loading: false, errors: {}, success: true,successmsg:'Invoice edited successfully' });\n        }\n      })\n      .catch(err => {\n        console.log(err)\n        if(this.props.ID == undefined){\n          this.myFormRef.reset();\n          this.setState({ loading: false, errors: {}, success: true,successmsg:'Invoice is generated successfully' });\n        }\n        else{\n          this.setState({ loading: false, errors: {}, success: true,successmsg:'Invoice edited successfully' });\n        }\n      });\n  };\n\n  updateQuotation(id) {\n    if (id != '') {\n      localStorage.setItem('customerId', id);\n    }\n  }\n\n  onShowAlert = () => {\n    this.setState({ visible: true }, () => {\n      window.setTimeout(() => {\n        this.setState({ visible: false });\n      }, 5000);\n    });\n  };\n\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n\n  handleInvalidSubmit = () => {\n    console.log('invalid submit');\n  };\n\n  createChallanList = () => {\n    let items = [];\n    const challanlistvalues = this.state.challanlistvalues;\n    challanlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.deliverychallanno}>\n          {option.deliverychallanno}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  saveDynamicPonum(){\n    let purchaseordernumber = this.state.data.purchaseordernumber + \"$\" + new Date().getTime()\n    \n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        purchaseordernumber,\n      }\n    },()=>{\n      console.log(this.state.data)\n    })\n  }\n\n  handleChallanChange = e => {\n    console.log(e)\n    let selecteddeliveryChallan = e.target ? e.target.value : e\n    console.log(selecteddeliveryChallan)\n    const challanlistvalues = this.state.challanlistvalues;\n    let selectedChallan = challanlistvalues.filter(\n      challan => challan._id === selecteddeliveryChallan || challan.deliverychallanno === selecteddeliveryChallan\n    );\n    console.log(selectedChallan)\n    if(selectedChallan && selectedChallan.length > 0){\n      selectedChallan = selectedChallan[0];\n\n      const newState = Object.assign({}, this.state);\n      newState.data.customerdetail.id = selectedChallan.customerid ? selectedChallan.customerid._id : '';\n      \n\n      const deliverychallannumber = selectedChallan.deliverychallanno;\n      const purchaseordernumber = selectedChallan.ponumber;\n      const date = new Date(selectedChallan.date);\n      const purchaseorderdate = new Date(selectedChallan.podate);\n      const vehiclenumber = selectedChallan.vehiclenumber;\n      console.log(JSON.stringify(selectedChallan));\n  \n\n      let selectedItemlist = {\n        id: [],\n        itemname: [],\n        itemdescription: [],\n        itemtype: [],\n        itemrate: [],\n        itemuom: [],\n        itemdiscount: [],\n        costperunit: [],\n        quantity: [],\n        totalcost: []\n      }\n      let values = selectedChallan.addeditemlist\n      if (selectedChallan.addeditemlist.length > 0) {\n\n        for (var i = 0; i < selectedChallan.addeditemlist.length; i++) {\n          selectedChallan.addeditemlist[i].itemdiscount = selectedChallan.addeditemlist[i].itemdiscount == null || selectedChallan.addeditemlist[i].itemdiscount == '' ?\n          selectedChallan.addeditemlist[i].itemdiscount = 0 : selectedChallan.addeditemlist[i].itemdiscount\n          selectedChallan.addeditemlist[i].itemdiscount = (selectedChallan.addeditemlist[i].itemdiscount).toString()\n\n\n          selectedChallan.addeditemlist[i].quantity = selectedChallan.addeditemlist[i].quantity == null || selectedChallan.addeditemlist[i].quantity == '' ?\n          selectedChallan.addeditemlist[i].quantity = 0 : selectedChallan.addeditemlist[i].quantity\n          selectedChallan.addeditemlist[i].quantity = (selectedChallan.addeditemlist[i].quantity).toString()\n\n          selectedChallan.addeditemlist[i].costperunit = selectedChallan.addeditemlist[i].costperunit == null || selectedChallan.addeditemlist[i].costperunit == '' ?\n          selectedChallan.addeditemlist[i].costperunit = 0 : selectedChallan.addeditemlist[i].costperunit\n          selectedChallan.addeditemlist[i].costperunit = (selectedChallan.addeditemlist[i].costperunit).toString()\n\n          selectedChallan.addeditemlist[i].totalcost = selectedChallan.addeditemlist[i].totalcost == null || selectedChallan.addeditemlist[i].totalcost == '' ?\n          selectedChallan.addeditemlist[i].totalcost = 0 : selectedChallan.addeditemlist[i].totalcost\n          selectedChallan.addeditemlist[i].totalcost = (selectedChallan.addeditemlist[i].totalcost).toString()\n\n  \n\n\n\n          selectedItemlist.itemdescription.push(selectedChallan.addeditemlist[i].itemdescription)\n          selectedItemlist.itemtype.push(selectedChallan.addeditemlist[i].itemtype._id)\n          selectedItemlist.itemdiscount.push(selectedChallan.addeditemlist[i].itemdiscount)\n\n\n         \n          selectedItemlist.itemuom.push(selectedChallan.addeditemlist[i].itemuom._id)\n          selectedItemlist.quantity.push(selectedChallan.addeditemlist[i].quantity)\n\n          selectedItemlist.costperunit.push(selectedChallan.addeditemlist[i].costperunit)\n\n          selectedItemlist.totalcost.push(selectedChallan.addeditemlist[i].totalcost)\n          selectedItemlist.id.push(selectedChallan.addeditemlist[i].id)\n\n        }\n      }\n\n      \n \n  \n  \n      this.setState({\n        ...this.state,\n        data: {\n          ...this.state.data,\n       //   values: values,\n          deliverychallannumber,\n          purchaseordernumber,\n          date,\n          purchaseorderdate,\n          vehiclenumber,\n          selectedItemlist,\n          values\n        }\n      }, () => {\n        console.log(selectedItemlist)\n        this.setState({\n          ...this.state.data,\n          data: {\n            ...this.state.data,\n            deliverychallannumber : deliverychallannumber\n          //  values: values\n          }\n        },() =>{\n          console.log(this.state.data)\n          //this.setState(newState);\n          \n          if (selectedChallan.addeditemlist.length > 0) {\n            selectedChallan.addeditemlist.filter((item, index) => {\n              this.selectitemchange(item.id._id, index,true);\n            })\n          }\n          this.handleChange(selectedChallan.customerid._id)\n        });\n      });\n    }\n  \n  };\n\n  render() {\n    const { data, errors, loading, success, visible,successmsg } = this.state;\n    return (\n      <div>\n        <div>\n        {loading ? <CustomLoader /> : null}\n          {!!success ? (\n            // <Alert color=\"info\" isOpen={visible}>\n            //   Quotation is added successfully\n            // </Alert>\n            <Modal\n              isOpen={success}\n              toggle={this.toggle}\n              className={this.props.className}\n            >\n              <ModalHeader  toggle={this.toggle}>Invoice</ModalHeader>\n              <ModalBody >{successmsg}</ModalBody>\n              <ModalFooter>\n                <Button color='primary' onClick={this.toggle}>\n                  Ok\n                </Button>\n              </ModalFooter>\n            </Modal>\n          ) : null}\n        </div>\n        <div>\n          {!!errors.quotationnumber ? (\n            <Alert Label color='danger' isOpen={visible}>\n              Invoice number should have unique value.\n            </Alert>\n          ) : null}\n        </div>\n        <AvForm\n          onValidSubmit={this.handleValidSubmit}\n        //  onInvalidSubmit={this.handleInvalidSubmit}\n          ref={el => (this.myFormRef = el)}\n        >\n          <Card>\n            <CardHeader>Invoice</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='ponumber'>Invoice Number</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      Label\n                      name='invoicenumber'\n                      type='number'\n                      id='invoicenumber'\n                      value={data.invoicenumber || null}\n                      onChange={this.onhandlerChange}\n               \n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter quotation Number'\n                        },\n                        pattern: {\n                          value: '^[0-9]+$',\n                          errorMessage: 'Please enter valid Number'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <Label className='small-font-size' for='vendorcode'>Delivery Challan No</Label>\n                  {/* <AvField\n                    name='deliverychallannumber'\n                    type='text'\n                    id='deliverychallannumber'\n                    value={data.deliverychallannumber || null}\n                    onChange={e => this.onhandlerChange(e)}\n                  /> */}\n                  <AvField\n                    Label\n                    type='select'\n                    name={`deliverychallannumber`}\n                    //required={true}          \n                    value={data.deliverychallannumber}\n                    onChange={e => this.handleChallanChange(e)}\n                  >\n                    <option value=''>select challan</option>\n                    {this.createChallanList()}\n                  </AvField>\n                </Col>\n                <Col sm={2}>\n                  <Label className='small-font-size' for='date'>Delivery challan date</Label>\n                  <DatePicker\n                  readOnly\n                    selected={data.date}\n                    autoComplete=\"new-password\"\n                    onChange={this.handleDate}\n                    className='form-control small-font-size'\n                    dateFormat='dd/MM/yyyy'\n                    id='date'\n                  />\n                </Col>\n                <Col sm={2}>\n                  <Label className='small-font-size' for='date'>Date of invoice</Label>\n                  <DatePicker\n                  autoComplete=\"new-password\"\n                    selected={data.invoicedate}\n                    onChange={this.invocieDate}\n                    className='form-control small-font-size'\n                    dateFormat='dd/MM/yyyy'\n                    id='invoicedate'\n                  />\n                </Col>\n\n                {/* <Col sm={2}>\n                  <Label className='small-font-size' for='purchaseordernumber'>Purchase order number</Label>\n                  <span className='required-label'>*</span>\n                  <AvField\n                    Label\n                    readOnly\n                    name='purchaseordernumber'\n                    type='text'\n                    id='purchaseordernumber'\n                    value={data.purchaseordernumber || ' ' || null}\n                    onChange={e => this.onhandlerChange(e)}\n                  />\n                </Col> */}\n                <Col sm={2}>\n                  <Label className='small-font-size' for='date'>Purchase order date</Label>\n                  <DatePicker\n                  autoComplete=\"new-password\"\n                    selected={data.purchaseorderdate}\n                    onChange={this.purchaseDate}\n                    readOnly\n                    className='form-control small-font-size'\n                    dateFormat='dd/MM/yyyy'\n                    id='purchaseorderdate'\n                  />\n                </Col>\n                <Col sm={2}>\n                  <Label className='small-font-size' for='vendorcode'>Vender code</Label>\n                  <AvField\n                    Label\n                    name='vendorcode'\n                    type='text'\n                    id='vendorcode'\n                    value={data.vendorcode || null}\n                    onChange={e => this.onhandlerChange(e)}\n                  />\n                </Col>\n                <Col sm={2}>\n                  <Label className='small-font-size' for='vehiclenumber'>Vehicle number</Label>\n                  <AvField\n                    Label\n                    name='vehiclenumber'\n                    type='text'\n                    id='vehiclenumber'\n                    value={data.vehiclenumber || null}\n                    onChange={e => this.onhandlerChange(e)}\n                  />\n                </Col>\n                <Col sm={2}>\n                  <Label className='small-font-size' for='hsncode'>HSN Code</Label>\n                  <AvField\n                    Label\n                    name='hsncode'\n                    type='text'\n                    id='hsncode'\n                    value={data.hsncode || null}\n                    onChange={e => this.onhandlerChange(e)}\n                  />\n                </Col>\n                <Col sm={2}>\n                  <Label className='small-font-size' for='saccode'>SAC Code</Label>\n                  <AvField\n                    Label\n                    Label\n                    name='saccode'\n                    type='text'\n                    id='saccode'\n                    value={data.saccode || null}\n                    onChange={e => this.onhandlerChange(e)}\n                  />\n                </Col>\n         \n                   <Col sm={2}>\n                  <Label className='small-font-size' for='purchaseordernumber'>Purchase order number</Label>\n                  <span className='required-label'>*</span>\n                  <AvField\n                    Label\n                    readOnly\n                    name='purchaseordernumber'\n                    type='text'\n                    id='purchaseordernumber'\n                    value={data.purchaseordernumber || ' ' || null}\n                    onChange={e => this.onhandlerChange(e)}\n                  />\n                </Col>\n                <Col sm={2}>\n                  <Label className='small-font-size' for='goodsDescription'>\n                    Description of Excisible Goods\n                  </Label>\n                  <AvField\n                    Label\n                    name='goodsDescription'\n                    type='text'\n                    id='goodsDescription'\n                    value={data.goodsDescription || null}\n                    onChange={e => this.onhandlerChange(e)}\n                  />\n                </Col>\n              </Row>\n              <Row>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='customername'>Customer Name</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      Label\n                      type='select'\n                      name={`customername`}\n                      value={data.customerdetail.id || null}\n                      required={true}\n                      onChange={e => this.handleChange(e)}\n                    >\n                      <option value=''>select customer name</option>\n                      {this.createSelectcustomer()}\n                    </AvField>\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='customernumber'>Customer Number</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      Label\n                      name='customernumber'\n                      type='number'\n                      id='customernumber'\n                      readOnly\n                      value={data.customerdetail.customernumber}\n                      onChange={this.onCustomerChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter Customer Number'\n                        },\n                  \n                        pattern: {\n                          value: '^[0-9]+$',\n                          errorMessage: 'Please enter valid Number'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='customergstnumber'>Customer GST </Label>\n                    <AvField\n                      Label\n                      name='customergstnumber'\n                      type='text'\n                      id='customergstnumber'\n                      readOnly\n                      value={data.customerdetail.customergstnumber}\n                      onChange={e => this.onCustomerChange}\n                      validate={{\n                    \n                        pattern: {\n                          value: '^[a-zA-z0-9]+$',\n                          errorMessage: 'Please enter valid GST Number'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n              </Row>\n              <Row>\n                <Col sm={4}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='billingaddress'>Billing Address</Label>\n                    <AvField\n                      Label\n                      name='billingaddress'\n                      type='text'\n                      id='billingaddress'\n                      readOnly\n                      value={\n                        data.customerdetail.customeraddress1 +\n                        ', ' +\n                        data.customerdetail.customeraddress2 +\n                        ', ' +\n                        data.customerdetail.city +\n                        ', ' +\n                        data.customerdetail.state +\n                        ', ' +\n                        data.customerdetail.country +\n                        ', ' +\n                        data.customerdetail.pincode\n                      }\n                      onChange={e => this.onhandlerChange(e)}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={4}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='deliveryaddress'>Delivery Address</Label>\n                    <AvField\n                      Label\n                      name='deliveryaddress'\n                      type='text'\n                      id='deliveryaddress'\n                      readOnly\n                      value={\n                        data.customerdetail.deliveryAddress.address1 +\n                        ', ' +\n                        data.customerdetail.deliveryAddress.address2 +\n                        ', ' +\n                        data.customerdetail.deliveryAddress.city +\n                        ', ' +\n                        data.customerdetail.deliveryAddress.state +\n                        ', ' +\n                        data.customerdetail.deliveryAddress.country +\n                        ', ' +\n                        data.customerdetail.deliveryAddress.pincode\n                      }\n                      onChange={e => this.onhandlerChange(e)}\n                    />\n                  </AvGroup>\n                </Col>\n                \n                <Col sm={4}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='remarks'>Remarks </Label>\n                    <AvField\n                      Label\n                      name='remarks'\n                      type='text'\n                      id='remarks'\n                      value={data.remarks}\n                      onChange={e => this.onRemarksChange(e)}\n                    \n                    />\n                  </AvGroup>\n                </Col>\n\n              </Row>\n              \n              {/* <Row>\n                <div className='mg-t-20' style={{ 'marginLeft': '15px','fontSize': '16px','fontWeight': 'bold'}}>\n                   For Proforma Invoice:\n                </div>\n              </Row>\n              \n              <Row>\n                <Col sm={3}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='deliverychallandata'>Delivary challan data </Label>\n                    <AvField\n                      Label\n                      name='deliverychallandata'\n                      type='text'\n                      id='deliverychallandata'\n                      value={data.deliverychallandata}\n                      onChange={e => this.onSubjectHandler(e)}\n                    \n                    />\n                  </AvGroup>\n                </Col>\n\n\n                <Col sm={3}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='workorderno'>Work Order no </Label>\n                    <AvField\n                      Label\n                      name='workorderno'\n                      type='text'\n                      id='workorderno'\n                      value={data.workorderno}\n                      onChange={e => this.onSubjectHandler(e)}\n                    \n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={3}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='workorderdate'>Work Order Date </Label>\n               \n                       <DatePicker\n                        autoComplete=\"new-password\"\n                        selected={data.workorderdate}\n                        onChange={this.handleWorkorderDate}\n                        className='form-control small-font-size'\n                        dateFormat='dd/MM/yyyy'\n                        id='workorderdate'\n                  />\n                  </AvGroup>\n                </Col>\n                <Col sm={3}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='despathdate'> Date of Despath </Label>\n               \n                       <DatePicker\n                        autoComplete=\"new-password\"\n                        selected={data.despathdate}\n                        onChange={this.handleDespathdate}\n                        className='form-control small-font-size'\n                        dateFormat='dd/MM/yyyy'\n                        id='despathdate'\n                  />\n                  </AvGroup>\n                </Col>\n              </Row>\n              <Row>\n                <Col sm={3}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='removaltime'>Time of Removal </Label>\n               \n                    <AvField\n                      Label\n                      name='removaltime'\n                      type='text'\n                      id='removaltime'\n                      value={data.removaltime}\n                      onChange={e => this.onSubjectHandler(e)}\n                    \n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={3}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='transportationcharge'>Transportation Charges </Label>\n                    <AvField\n                      Label\n                      name='transportationcharge'\n                      type='text'\n                      id='transportationcharge'\n                      value={data.transportationcharge}\n                      onChange={e => this.onSubjectHandler(e)}\n                    \n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={3}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='advanceamountreceived'>Advance Received </Label>\n                    <AvField\n                      Label\n                      name='advanceamountreceived'\n                      type='text'\n                      id='advanceamountreceived'\n                      value={data.advanceamountreceived}\n                      onChange={e => this.onSubjectHandler(e)}\n                    \n                    />\n                  </AvGroup>\n                </Col>\n              </Row> */}\n\n\n\n              <Row>\n                <div className='mg-t-20'>\n                  <Button color='info' onClick={this.handleClick} type='button'>\n                    Add Item\n                  </Button>\n                </div>\n              </Row>\n              <div className='purchaseorder-item-row'>\n                {data.values.map((values, index) => {\n\n                  \n\n                  return (\n                    <div key={index}>\n                      <div className='purchaseorder-table'>\n                        <Row key={index}>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for='selectitem'>Item Code</Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                Label\n                                type='select'\n                                name={`selectitem${index}`}\n                                onChange={e => this.selectitemchange(e, index,true)}\n                                required={true}\n                                value={data.selectedItemlist.id[index]}\n                              >\n                                <option value=''>select Item</option>\n                                {this.createSelectItems()}\n                              </AvField>\n                            </AvGroup>\n                          </Col>\n                          <Col sm={2}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`masteritemdescription${index}`}>\n                                Description\n                              </Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                Label\n                                readOnly\n                                name={`masteritemdescription${index}`}\n                                type='text'\n                                id='masteritemdescription'\n                                value={\n                                  data.selectedItemlist.itemdescription[index]\n                                }\n                                onChange={this.onChange}\n                                validate={{\n                                  required: {\n                                    value: true,\n                                    errorMessage:\n                                      'Please enter Item Description'\n                                  }\n                        \n                                 \n                                }}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`masteritemtype${index}`}>Type</Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                Label\n                                // style={{ width: '150px' }}\n                                readOnly\n                                type='select'\n                                name={`masteritemtype${index}`}\n                                onChange={this.onChange}\n                                required={true}\n                                value={\n                                  data.selectedItemlist.itemtype[index]\n                                }\n                              >\n                                <option value=''>select</option>\n                                {this.createSelectItemTypes()}\n                              </AvField>\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`masteritemuom${index}`}>UOM</Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                Label\n                                readOnly\n                                type='select'\n                                name={`masteritemuom${index}`}\n                                onChange={this.onChange}\n                                required={true}\n                                value={\n                                  data.selectedItemlist.itemuom[index]\n                                }\n                              >\n                                <option value=''>uom</option>\n                                {this.createSelectUomItems()}\n                              </AvField>\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`discount${index}`}>Discount %</Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                Label\n                                name={`itemdiscount${index}`}\n                                type='number'\n                                id={`itemdiscount${index}`}\n                                value={\n                                  data.selectedItemlist.itemdiscount[index]\n                                }\n                                onChange={e =>\n                                  this.itemdiscountChange(e, index)\n                                }\n                                validate={{\n                                  minLength: {\n                                    value: 1,\n                                    errorMessage:\n                                      'item Discount value is required'\n                                  },\n                                  maxLength: { value: 100 },\n                                  pattern: {\n                                    value: '^[0-9.]*$',\n                                    errorMessage: 'Please enter valid value'\n                                  }\n                                }}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`costperunit${index}`}>\n                                Unit Cost\n                              </Label>\n                              <AvField\n                                Label\n                                name={`costperunit${index}`}\n                                type='number'\n                                id={`costperunit${index}`}\n                                value={\n                                  data.selectedItemlist.costperunit[index]\n                                }\n                                onChange={e => this.unitChange(e, index)}\n                                validate={{\n                                  required: {\n                                    value: true,\n                                    errorMessage: 'Please enter cost'\n                                  },\n                                  pattern: {\n                                    value: '^[0-9.]*$',\n                                    errorMessage:\n                                      'Please enter valid costperunit'\n                                  }\n                                }}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`quantity${index}`}>Quantity</Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                Label\n                                name={`quantity${index}`}\n                                type='number'\n                                id={`quantity${index}`}\n                                value={\n                                  data.selectedItemlist.quantity[index] \n                                }\n                                onChange={e => this.quantityChange(e, index)}\n                                validate={{\n                                  required: {\n                                    value: true,\n                                    errorMessage: 'Please enter Item Quantity'\n                                  },\n                                  minLength: {\n                                    value: 1,\n                                    errorMessage: 'quantity value is required'\n                                  },\n                                  pattern: {\n                                    value: '^[0-9.]*$',\n                                    errorMessage: 'Please enter valid quantity'\n                                  }\n                                }}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`totalcost${index}`}>\n                                Total Cost\n                              </Label>\n                              <AvField\n                                Label\n                                name={`totalcost${index}`}\n                                type='number'\n                                id={`totalcost${index}`}\n                                value={\n                                  data.selectedItemlist.totalcost[index]\n                                    ? data.selectedItemlist.totalcost[index]\n                                    : ' '\n                                }\n                                onChange={e => this.onChange(e, index)}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <Button\n                              Label\n                              color='danger'\n                              type='button'\n                              onClick={e => this.removeClick(e, index)}\n                              style={{ marginTop: '30px' }}\n                            >\n                              -\n                            </Button>\n                          </Col>\n                        </Row>\n                      </div>\n                    </div>\n                  );\n                })}\n              </div>\n              <div style={{'borderBottom':'1px solid #CCC','borderTop':'1px solid #CCC','paddingTop':'10px'}}>\n              <Row>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='taxableamount'>Taxable Amount</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      Label\n                      name='taxableamount'\n                      type='number'\n                      id='taxableamount'\n                      value={data.taxableamount}\n                      disabled='true'\n                      onChange={e => this.onhandlerChange(e)}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter Taxable Amount'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='freightcharges'>Freight,w.s,loading and handling charges</Label>\n                    <AvField\n                      Label\n                      name='freightcharges'\n                      type='number'\n                      id='freightcharges'\n                      value={data.freightcharges}\n                      onChange={e => this.onhandlerChange(e)}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='subtotal'>Sub Total</Label>\n                    <AvField\n                      Label\n                      name='subtotal'\n                      type='number'\n                      id='subtotal'\n                      value={data.subtotal}\n                      disabled='true'\n                      onChange={e => this.onhandlerChange(e)}\n                    />\n                  </AvGroup>\n                </Col>\n           \n              </Row>\n              <Row>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='cgst'>CGST (%)</Label>\n                    <AvField\n                      Label\n                      name='cgst'\n                      type='number'\n                      id='cgst'\n                      value={data.cgst}\n                      onChange={e => this.onhandlerChange(e)}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='sgst'>SGST (%)</Label>\n                    <AvField\n                      Label\n                      name='sgst'\n                      type='number'\n                      id='sgst'\n                      value={data.sgst}\n                      onChange={e => this.onhandlerChange(e)}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='igst'>IGST (%)</Label>\n                    <AvField\n                      Label\n                      name='igst'\n                      type='number'\n                      id='igst'\n                      value={data.igst}\n                      onChange={e => this.onhandlerChange(e)}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='total'>Total</Label>\n                    <AvField\n                      Label\n                      name='total'\n                      type='number'\n                      id='total'\n                      disabled='true'\n                      value={data.total}\n                      onChange={e => this.onhandlerChange(e)}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='roundoffamount'>Round Off</Label>\n                    <AvField\n                      Label\n                      name='roundoffamount'\n                      type='number'\n                      id='roundoffamount'\n                      value={data.roundoffamount}\n                      onChange={e => this.onhandlerChange(e)}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='grandtotal'>Grand total</Label>\n                    <AvField\n                      Label\n                      name='grandtotal'\n                      type='number'\n                      id='grandtotal'\n                      value={data.grandtotal}\n                      disabled='true'\n                      onChange={e => this.onhandlerChange(e)}\n                    />\n                  </AvGroup>\n                </Col>\n              </Row>\n              </div>\n\n              <Row>\n                <div className='mg-20'>\n                  <Button\n                    Label\n                    color='primary'\n                  //  / disabled={loading}\n                    className='lgn-loader'\n                  >\n                    Submit\n                    {/* {loading} */}\n                  </Button>\n                </div>\n              </Row>\n            </CardBody>\n          </Card>\n        </AvForm>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    customerlistvalues: state.customerlistvalues,\n    masteritemlistvalues: state.masteritemlistvalues,\n    masteritemtypelistvalues: state.masteritemtypenamevalue,\n    uomlistvalues: state.uomlistvalue,\n    locationlistvalue: state.locationlistvalue,\n    quotationlistvalues: state.quotationlistvalues,\n    invoicelistvalues: state.invoicelistvalues,\n    challanlistvalues: state.challanlistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  null\n)(InvoiceForm);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport {\n  getMasterItemList,\n  getMasterItemTypes\n} from \"../../../../actions/Transaction\";\nimport { connect } from \"react-redux\";\nimport { getUomList } from \"../../../../actions/uom\";\nimport { getCustomerList } from \"../../../../actions/customerContact\";\nimport { addinvoice } from \"../../../../actions/Invoice\";\nimport { getinvoice } from \"../../../../actions/Invoice\";\nimport { updateinvoice } from \"../../../../actions/Invoice\";\n\nimport { getChallan } from '../../../../actions/challan';\nimport InvoiceForm from \"./InvoiceForm\";\nimport CustomLoader from \"../../../../Components/loader/loader\";\n\nclass AddInvoice extends React.Component {\n  state = {\n    loading: false,\n    ID:this.props.match.params.id\n  };\n  componentDidMount() {\n    this.props.getCustomerList();\n    this.props.getMasterItemTypes();\n    this.props.getMasterItemList();\n    this.props.getUomList();\n    this.props.getinvoice();\n    this.props.getChallan();\n  }\n  valid = () =>{\n    if( !localStorage.getItem('firstLoad') )\n    {\n      localStorage['firstLoad'] = true;\n      window.location.reload();\n    }  \n    else\n      localStorage.removeItem('firstLoad');\n  }\n  submit = data => {\n    console.log(data)\n    this.dataHandler(true);\n      if(this.props.match.params.id != undefined){\n        data['_id'] = this.props.match.params.id;\n        return this.props\n        .updateinvoice(data)\n        .then(data => {\n          this.dataHandler(false);\n          return data;\n        })\n        .catch(err => {\n          this.dataHandler(false);\n          throw err;\n        });\n      }\n      else{\n        return this.props\n        .addinvoice(data)\n        .then(data => {\n          this.dataHandler(false);\n          return data;\n        })\n        .catch(err => {\n          this.dataHandler(false);\n          throw err;\n        });\n      }\n  };\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n  render() {\n    const { loading,ID } = this.state;\n    return (\n      <div className=\"container mg-t-20\">\n        {loading ? <CustomLoader /> : null}\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to=\"/admin_dashboard\">Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/transaction_page\">Transactions</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/invoice\">Invoice</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>Add Invoice</BreadcrumbItem>\n        </Breadcrumb>\n        <div>\n          <InvoiceForm submit={this.submit} ID={ID} valid={this.valid}/>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  {\n    getMasterItemList,\n    getMasterItemTypes,\n    getUomList,\n    addinvoice,\n    updateinvoice,\n    getCustomerList,\n    getinvoice,\n    getChallan\n  }\n)(AddInvoice);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { AvForm, AvField, AvGroup } from 'availity-reactstrap-validation';\nimport moment from 'moment';\nimport {\n  Button,\n  Label,\n  Alert,\n  Card,\n  CardBody,\n  CardHeader,\n  Row,\n  Col,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from 'reactstrap';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport axios from 'axios';\nimport CustomLoader from \"../../../../Components/loader/loader\";\n\nclass ProformaInvoiceForm extends React.Component {\n  state = {\n    customerID: null,\n    transaction: [],\n    proformainvoicelist: [],\n    data: {\n      customerdetail: {\n        id: null,\n        customernumber: '',\n        customergstnumber: '',\n        customercontactnumber: '',\n        customergstnumber: '',\n        customeraddress1: '',\n        customeraddress2: '',\n        city: '',\n        state: '',\n        country: '',\n        pincode: '',\n        deliveryAddress: {\n          address1: '',\n          address2: '',\n          city: '',\n          pincode: '',\n          state: '',\n          country: ''\n        }\n      },\n      selectedItemlist: {\n        id: [null],\n        itemname: [null],\n        itemdescription: [null],\n        itemtype: [null],\n        itemrate: [null],\n        itemuom: [null],\n        itemdiscount: [],\n        costperunit: [],\n        quantity: [],\n        totalcost: []\n      },\n      invoicenumber: '',\n      deliverychallannumber: '',\n      purchaseordernumber: '',\n      vendorcode: '',\n      vehiclenumber: '',\n      hsncode: '',\n      saccode: '',\n      billingaddress: '',\n      remarks:'',\n      deliveryaddress: '',\n      taxableamount: '',\n      freightcharges: '',\n      cgst: '',\n      sgst: '',\n      igst: '',\n      total: '',\n      subtotal: '',\n      total: '',\n      grandtotal: '',\n      date: new Date(),\n      invoicedate: new Date(),\n      purchaseorderdate: new Date(),\n      goodsDescription: '',\n      roundoffamount: '',\n      deliverychallandata: '',\n      workorderno: '',\n      workorderdate: '',\n      despathdate: '',\n      removaltime:'',\n      transportationcharge:'',\n      transportationgst:'',\n      advanceamountreceived:'',\n      transportchargerequired: 'Yes',\n      values: ['']\n    },\n    errors: {},\n    customerobjects: {},\n    customerlistvalues: [],\n    challanlistvalues: [],\n    uom: [],\n    masteritemlistvalues: [],\n    masteritemlistvaluesobject: {},\n    masteritemtypelistvalues: [],\n    masteritemtypelistvaluesobject: {},\n    loading: false,\n    success: false,\n    visible: false,\n    successmsg: ''\n  };\n\n  componentDidMount() {\n    const invoicelistvalues = Object.keys(this.props.invoicelistvalues);\n\n      \n    const customerlistvalues = Object.values(this.props.customerlistvalues);\n    const customerobjects = this.props.customerlistvalues;\n    const masteritemlistvalues = Object.values(this.props.masteritemlistvalues);\n    const masteritemlistvaluesobject = this.props.masteritemlistvalues;\n    const challanlistvalues = Object.values(this.props.challanlistvalues);\n    console.log(challanlistvalues)\n    const masteritemtypelistvalues = Object.values(\n      this.props.masteritemtypelistvalues\n    );\n    const masteritemtypelistvaluesobject = this.props.masteritemtypelistvalues;\n\n    const uom = Object.values(this.props.uomlistvalues);\n    this.setState({\n      ...this.state,\n      customerlistvalues,\n      challanlistvalues,\n      customerobjects,\n      masteritemlistvalues,\n      masteritemlistvaluesobject,\n      masteritemtypelistvalues,\n      masteritemtypelistvaluesobject,\n      uom\n    });\n\n    if (this.props.ID != undefined) {\n  \n      this.getInvoiceDetails(this.props.ID)\n    }\n    else{\n    \n        this.dataHandler(true)\n        axios\n        .get(`${process.env.REACT_APP_BASE_URL}/proformainvoice/getproformainvoice`)\n        .then(res => {\n    \n          this.dataHandler(false)\n          if(res.data.invoicelist.invoicedata.length > 0){\n            let invoicelistlength =\n            res.data.invoicelist.invoicedata.length > 0 ? res.data.invoicelist.invoicedata.length : 0;\n            let invoicenumber = (1 + invoicelistlength)\n            this.setState({\n              ...this.state,\n              data: {\n                ...this.state.data,\n                invoicenumber\n              }\n            }); \n          }\n          else{\n            const invoicenumber = 1\n            this.setState({\n              data: {\n                ...this.state.data,\n                invoicenumber\n              }\n            })\n          }\n          this.getChallandata()\n        },\n        error =>{\n          this.dataHandler(false)\n         \n        });\n\n    \n      \n    }\n  }\n\n\n\n  getChallandata(){\n    \n    axios\n    .get(`${process.env.REACT_APP_BASE_URL}/challan/getchallan`)\n    .then(res => {\n       if (res.data.challanlist.challandata.length > 0) {\n         const challanlistvalues = res.data.challanlist.challandata;  \n         this.setState({\n          ...this.state,\n          challanlistvalues\n         })      \n      }\n    },\n      error => {\n        this.setState({ success: false, message: 'Server error.' });\n      });\n  }\n\n\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n\n  getInvoiceDetails(id) {\n    this.dataHandler(true)\n    axios\n      .get(`${process.env.REACT_APP_BASE_URL}/proformainvoice/getsingleproformainvoice/${id}`)\n      .then(res => {\n\n         if (res.data.invoicelist.invoicedata.length > 0) {\n           let founddata = res.data.invoicelist.invoicedata;\n\n           const newState = Object.assign({}, this.state);\n           newState.data.customerdetail.id = founddata[0].customerid;\n           newState.data.values = founddata[0].addeditemlist;\n\n           newState.data.invoicenumber = founddata[0].invoicenumber;\n           newState.data.date = new Date(founddata[0].date);\n           newState.data.deliverychallannumber = founddata[0].deliverychallannumber;\n           if(founddata[0].deliverychallannumber && founddata[0].deliverychallannumber != '')\n            this.handleChallanChange(founddata[0].deliverychallannumber)\n\n          if(founddata[0].purchaseordernumber != '' && founddata[0].purchaseordernumber != null){\n            if(founddata[0].purchaseordernumber.toString().lastIndexOf('$') > -1){\n              newState.data.purchaseordernumber = founddata[0].purchaseordernumber.toString().split('$')[0]\n            }\n            else\n              newState.data.purchaseordernumber = founddata[0].purchaseordernumber\n          }\n           \n           newState.data.vendorcode = founddata[0].vendorcode;\n\n           newState.data.vehiclenumber = founddata[0].vehiclenumber;\n           newState.data.hsncode = founddata[0].hsncode;\n           newState.data.saccode = founddata[0].saccode;\n           newState.data.billingaddress = founddata[0].billingaddress;\n           newState.data.remarks = founddata[0].remarks ? founddata[0].remarks : '';\n           newState.data.deliveryaddress = founddata[0].deliveryaddress;\n\n           newState.data.taxableamount = founddata[0].taxableamount;\n           newState.data.freightcharges = founddata[0].freightcharges;\n           newState.data.cgst = founddata[0].cgst;\n           newState.data.sgst = founddata[0].sgst;\n\n           newState.data.igst = founddata[0].igst;\n           newState.data.total = founddata[0].total;\n           newState.data.subtotal = founddata[0].subtotal;\n           newState.data.grandtotal = founddata[0].grandtotal;\n           newState.data.invoicedate = new Date(founddata[0].invoicedate);\n           newState.data.purchaseorderdate = new Date(founddata[0].purchaseorderdate);\n           newState.data.goodsDescription = founddata[0].goodsDescription;\n           newState.data.roundoffamount = founddata[0].roundoffamount;\n           \n           newState.data.deliverychallandata =  founddata[0].deliverychallandata ? founddata[0].deliverychallandata : '';\n           newState.data.workorderno =  founddata[0].workorderno ? founddata[0].workorderno : ''\n           newState.data.workorderdate = founddata[0].workorderdate ? new Date(founddata[0].workorderdate) : ''\n           newState.data. despathdate = founddata[0].despathdate ? new Date(founddata[0].despathdate) : ''\n           newState.data.removaltime = founddata[0].removaltime ? founddata[0].removaltime : ''\n           newState.data.transportationcharge = founddata[0].transportationcharge ?  founddata[0].transportationcharge : ''\n           newState.data.transportationgst = founddata[0].transportationgst ?  founddata[0].transportationgst : ''\n           \n           newState.data.advanceamountreceived = founddata[0].advanceamountreceived ? founddata[0].advanceamountreceived : ''\n           newState.data.transportchargerequired = founddata[0].transportchargerequired ? founddata[0].transportchargerequired : ''\n           \n          if (founddata[0].addeditemlist.length > 0) {\n\n            for (var i = 0; i < founddata[0].addeditemlist.length; i++) {\n              founddata[0].addeditemlist[i].itemdiscount = founddata[0].addeditemlist[i].itemdiscount == null || founddata[0].addeditemlist[i].itemdiscount == '' ?\n                founddata[0].addeditemlist[i].itemdiscount = 0 : founddata[0].addeditemlist[i].itemdiscount\n              founddata[0].addeditemlist[i].itemdiscount = (founddata[0].addeditemlist[i].itemdiscount).toString()\n\n\n              founddata[0].addeditemlist[i].quantity = founddata[0].addeditemlist[i].quantity == null || founddata[0].addeditemlist[i].quantity == '' ?\n                founddata[0].addeditemlist[i].quantity = 0 : founddata[0].addeditemlist[i].quantity\n              founddata[0].addeditemlist[i].quantity = (founddata[0].addeditemlist[i].quantity).toString()\n\n              founddata[0].addeditemlist[i].costperunit = founddata[0].addeditemlist[i].costperunit == null || founddata[0].addeditemlist[i].costperunit == '' ?\n                founddata[0].addeditemlist[i].costperunit = 0 : founddata[0].addeditemlist[i].costperunit\n              founddata[0].addeditemlist[i].costperunit = (founddata[0].addeditemlist[i].costperunit).toString()\n\n              founddata[0].addeditemlist[i].totalcost = founddata[0].addeditemlist[i].totalcost == null || founddata[0].addeditemlist[i].totalcost == '' ?\n                founddata[0].addeditemlist[i].totalcost = 0 : founddata[0].addeditemlist[i].totalcost\n              founddata[0].addeditemlist[i].totalcost = (founddata[0].addeditemlist[i].totalcost).toString()\n\n      \n\n\n\n              newState.data.selectedItemlist.itemdescription.push(founddata[0].addeditemlist[i].itemdescription)\n              newState.data.selectedItemlist.itemtype.push(founddata[0].addeditemlist[i].itemtype._id)\n              newState.data.selectedItemlist.itemdiscount.push(founddata[0].addeditemlist[i].itemdiscount)\n\n\n             \n              newState.data.selectedItemlist.itemuom.push(founddata[0].addeditemlist[i].itemuom._id)\n              newState.data.selectedItemlist.quantity.push(founddata[0].addeditemlist[i].quantity)\n\n              newState.data.selectedItemlist.costperunit.push(founddata[0].addeditemlist[i].costperunit)\n\n              newState.data.selectedItemlist.totalcost.push(founddata[0].addeditemlist[i].totalcost)\n              newState.data.selectedItemlist.id.push(founddata[0].addeditemlist[i].id)\n\n            }\n          }\n\n          this.setState(newState);\n          this.handleChange(founddata[0].customerid)\n          if (founddata[0].addeditemlist.length > 0) {\n            founddata[0].addeditemlist.filter((item, index) => {\n              this.selectitemchange(item.id._id, index,false);\n            })\n          }\n\n          this.dataHandler(false)\n        }\n        else {\n          this.setState({ count: 0 })\n          this.dataHandler(false)\n        }\n      },\n        error => {\n          this.dataHandler(false)\n          this.setState({ success: false, message: 'Server error.' });\n        });\n  }\n\n  componentWillReceiveProps(props) {\n    const invoicelistvalues = Object.keys(props.invoicelistvalues);\n    const customerlistvalues = Object.values(props.customerlistvalues);\n    const customerobjects = props.customerlistvalues;\n    const masteritemlistvalues = Object.values(props.masteritemlistvalues);\n    const masteritemlistvaluesobject = props.masteritemlistvalues;\n    const masteritemtypelistvalues = Object.values(\n      props.masteritemtypelistvalues\n    );\n    const masteritemtypelistvaluesobject = props.masteritemtypelistvalues;\n    const uom = Object.values(props.uomlistvalues);\n\n    if (this.props.ID == undefined) {\n      const invoicenumber =\n        invoicelistvalues.length > 0 ? 1 + invoicelistvalues.length : 1;\n\n      this.setState({\n        data: {\n          ...this.state.data,\n          invoicenumber\n        }\n      })\n    }\n\n\n    this.setState({\n      ...this.state,\n      customerlistvalues,\n      customerobjects,\n      masteritemlistvalues,\n      masteritemlistvaluesobject,\n      masteritemtypelistvalues,\n      masteritemtypelistvaluesobject,\n      uom\n    });\n  }\n\n  onhandlerChange = e => {\n    if (e.target.name === 'freightcharges') {\n      const sub = parseFloat(e.target.value)\n        ? parseFloat(e.target.value).toFixed(2)\n        : 0;\n      const taxable = parseFloat(this.state.data.taxableamount).toFixed(2);\n      const subtotal = Number(sub) + Number(taxable);\n      console.log(subtotal);\n      this.setState(\n        {\n          ...this.state,\n          data: {\n            ...this.state.data,\n            [e.target.name]: e.target.value,\n            ['subtotal']: subtotal\n          }\n        },\n        () => {\n          this.calculatePercentageAmount();\n        }\n      );\n    } else if (\n      e.target.name === 'cgst' ||\n      e.target.name === 'igst' ||\n      e.target.name === 'sgst'\n    ) {\n      const ttl = parseFloat(this.state.data.total).toFixed(2);\n      const gst = parseFloat(e.target.value).toFixed(2);\n      const total = Number(ttl) + Number(ttl) * (Number(gst) / 100).toFixed(2);\n      const gt = parseFloat(this.state.data.grandtotal).toFixed(2);\n      const grandtotal =\n        Number(gt) + Number(gt) * (Number(gst) / 100).toFixed(2);\n      this.setState(\n        {\n          ...this.state,\n          data: {\n            ...this.state.data,\n            [e.target.name]: e.target.value\n          }\n        },\n        () => {\n          this.calculatePercentageAmount();\n        }\n      );\n    } else if (e.target.name === 'roundoffamount') {\n      const roa = parseFloat(e.target.value)\n        ? parseFloat(e.target.value).toFixed(2)\n        : 0;\n      const gt = parseFloat(this.state.data.grandtotal).toFixed(2);\n\n      let grandtotal = 0;\n      if (roa > 0) grandtotal = Number(gt) + Number(roa);\n      else {\n        grandtotal = Number(gt) - Number(this.state.data.roundoffamount);\n      }\n      this.setState({\n        ...this.state,\n        data: {\n          ...this.state.data,\n          [e.target.name]: e.target.value\n        }\n      }, () => {\n        this.calculateRoundoffTotal();\n      });\n    } else {\n      this.setState({\n        ...this.state,\n        data: { ...this.state.data, [e.target.name]: e.target.value }\n      });\n    }\n  };\n  calculateRoundoffTotal = () => {\n    let grandtotal = 0;\n    const gt = parseFloat(this.state.data.grandtotal).toFixed(2);\n    const total = parseFloat(this.state.data.total).toFixed(2);\n    const roa = Number(this.state.data.roundoffamount);\n    if (roa > 0) {\n      grandtotal = Number(total) + Number(roa)\n    } else if (roa < 0) {\n      grandtotal = Number(total) + Number(roa)\n    } else {\n      grandtotal = total\n    }\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        ['grandtotal']: grandtotal\n      }\n    });\n  }\n  calculatePercentageAmount = () => {\n    // CGST\n    let cgst = this.state.data.cgst;\n    cgst = parseFloat(cgst) ? parseFloat(cgst).toFixed(2) : 0;\n    // SGST\n    let sgst = this.state.data.sgst;\n    sgst = parseFloat(sgst) ? parseFloat(sgst).toFixed(2) : 0;\n    // CGST\n    let igst = this.state.data.igst;\n    igst = parseFloat(igst) ? parseFloat(igst).toFixed(2) : 0;\n\n    let subTotal = parseFloat(this.state.data.subtotal)\n      ? Number(parseFloat(this.state.data.subtotal).toFixed(2))\n      : 0;\n    let roundoffamount = parseFloat(this.state.data.roundoffamount)\n      ? parseFloat(this.state.data.roundoffamount).toFixed(2)\n      : 0;\n    // Convert it to percentage\n    cgst = (subTotal * cgst) / 100;\n    sgst = (subTotal * sgst) / 100;\n    igst = (subTotal * igst) / 100;\n\n    const total = (Number(subTotal) + Number(cgst) + Number(sgst) + Number(igst)).toFixed(2);\n    const grandtotal = (Number(total) + Number(roundoffamount)).toFixed(2);\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        ['total']: total,\n        ['grandtotal']: grandtotal\n      }\n    });\n  };\n  \n  onCustomerChange = e => {\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        customerdetail: {\n          ...this.state.data.customerdetail,\n          [e.target.name]: e.target.value\n        }\n      }\n    });\n  };\n\n  onRemarksChange = e => {\n\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        remarks: e.target.value\n      }\n    });\n  };\n\n  handleDate = date => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, ['date']: date }\n    });\n  };\n  handleWorkorderDate = date => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, ['workorderdate']: date }\n    });\n  };\n  handleDespathdate = date => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, ['despathdate']: date }\n    });\n  };\n  \n  purchaseDate = date => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, ['purchaseorderdate']: date }\n    });\n  };\n  invocieDate = date => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, ['invoicedate']: date }\n    });\n  };\n  onSubjectHandler = e => {\n    console.log(e.target.value)\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    },() =>{\n      console.log(this.state.data)\n    });\n  };\n\n  createSelectcustomer = () => {\n    let items = [];\n    const customerlistvalues = this.state.customerlistvalues;\n    customerlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.customername}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  selectitemchange = (e, index,bool) => {\n    let selected_id = e.target ? e.target.value : e;\n    if (selected_id) {\n      let selected_item = this.state.masteritemlistvaluesobject[selected_id];\n      if(selected_item){\n        const selectedItemlist = { ...this.state.data.selectedItemlist };\n        selectedItemlist.id[index] = selected_item.id;\n        selectedItemlist.itemname[index] = selected_item.masteritemtypename;\n        selectedItemlist.itemdescription[index] =\n          selected_item.masteritemdescription;\n        // selectedItemlist.itemdescription[index] = selected_item.masteritemshortdescription == '' ? selected_item.masteritemdescription \n        // : selected_item.masteritemshortdescription\n        selectedItemlist.itemtype[index] = selected_item.masteritemtype._id;\n        selectedItemlist.itemrate[index] = selected_item.masteritemrate;\n        selectedItemlist.itemuom[index] = selected_item.masteritemuom._id;\n\n          if (this.props.ID == undefined) {\n\n              selectedItemlist.itemdiscount[index] = '0';\n              selectedItemlist.costperunit[index] = selected_item.masteritemcostperunit\n                ? selected_item.masteritemcostperunit.toString()\n                : '';\n              selectedItemlist.quantity[index] = (1).toString();\n              selectedItemlist.totalcost[index] = selected_item.masteritemcostperunit\n                ? selected_item.masteritemcostperunit.toString()\n                : '';\n      \n          }\n\n\n      \n        this.setState({\n          ...this.state.data,\n          data: {\n            ...this.state.data,\n            selectedItemlist\n          }\n        },()=>{\n          if(bool)\n            this.totalValue();\n        });\n      }\n     \n\n    }\n \n  };\n\n  quantityChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    const costperunit = selectedItemlist.costperunit[index] || null;\n    selectedItemlist.quantity[index] = e.target.value;\n    const quantity = e.target.value;\n    const discountpercentagevalue = selectedItemlist.itemdiscount[index];\n    if (discountpercentagevalue && costperunit && quantity) {\n      const totalcost =\n        parseFloat(quantity) * parseFloat(selectedItemlist.costperunit[index]);\n      const discountvalue = parseFloat(discountpercentagevalue / 100).toFixed(\n        2\n      );\n      const totaldiscountcost = parseFloat(totalcost * discountvalue).toFixed(\n        2\n      );\n      const totalvaluecost = totalcost - totaldiscountcost;\n      selectedItemlist.totalcost[index] = totalvaluecost\n        ? totalvaluecost.toFixed(2)\n        : null || '';\n    } else {\n      const totalValue = costperunit\n        ? e.target.value * costperunit\n        : null || undefined || '';\n      selectedItemlist.totalcost[index] = totalValue\n        ? parseFloat(totalValue).toFixed(2)\n        : '';\n    }\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n    this.totalValue();\n  };\n\n  itemdiscountChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    const discount = e.target.value;\n    selectedItemlist.itemdiscount[index] = e.target.value;\n    const unitcost = selectedItemlist.costperunit[index];\n    const quantity = selectedItemlist.quantity[index];\n    const particularindextotalvalue = parseFloat(unitcost * quantity).toFixed(\n      2\n    );\n    if (particularindextotalvalue && discount) {\n      const discountvalue = parseFloat(discount / 100).toFixed(2);\n      const totaldiscountcost = parseFloat(\n        particularindextotalvalue * discountvalue\n      ).toFixed(2);\n      const totalvaluecost = particularindextotalvalue - totaldiscountcost;\n      selectedItemlist.totalcost[index] = parseFloat(totalvaluecost).toFixed(2);\n    } else {\n      selectedItemlist.totalcost[index] = particularindextotalvalue;\n    }\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n    this.totalValue();\n  };\n\n  unitChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.costperunit[index] = e.target.value;\n    const discountpercentagevalue = selectedItemlist.itemdiscount[index];\n    if (discountpercentagevalue) {\n      const totalcost =\n        parseFloat(selectedItemlist.quantity[index]) *\n        parseFloat(selectedItemlist.costperunit[index]);\n      const discountvalue = parseFloat(discountpercentagevalue / 100).toFixed(\n        2\n      );\n      const totaldiscountcost = parseFloat(totalcost * discountvalue).toFixed(\n        2\n      );\n      const totalvaluecost = totalcost - totaldiscountcost;\n      selectedItemlist.totalcost[index] = totalvaluecost\n        ? totalvaluecost.toFixed(2)\n        : null || '';\n    } else {\n      const totalcost =\n        parseFloat(selectedItemlist.quantity[index]) *\n        parseFloat(selectedItemlist.costperunit[index]);\n      selectedItemlist.totalcost[index] = totalcost\n        ? totalcost.toFixed(2)\n        : null || '';\n    }\n\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n    this.totalValue();\n  };\n\n  createSelectItemTypes = () => {\n    let items = [];\n    const masteritemtypelistvalues = this.state.masteritemtypelistvalues;\n    masteritemtypelistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.masteritemtypename}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  totalValue = () => {\n    const { totalcost } = this.state.data.selectedItemlist;\n    if (totalcost.length > 0) {\n      const taxableamount = totalcost\n        .map((value, i) => {\n          if (parseFloat(value)) {\n            const floatvalue = parseFloat(value).toFixed(2);\n            return floatvalue;\n          } else {\n            return parseFloat(0);\n          }\n        })\n        .reduce((a, b) => {\n          const parsedvalue = parseFloat(a) + parseFloat(b);\n          return parsedvalue;\n        });\n      this.setState({\n        ...this.state.data,\n        data: {\n          ...this.state.data,\n          taxableamount,\n          ['subtotal']: taxableamount,\n          ['total']: taxableamount,\n          ['grandtotal']: taxableamount\n        }\n      });\n    }\n  };\n\n  createSelectUomItems = () => {\n    let items = [];\n    const uomlistvalues = this.state.uom;\n    uomlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.uomname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  handleChange = e => {\n    let selected_id = e.target ? e.target.value : e\n    this.updateQuotation(selected_id);\n    let customerdetail = this.state.customerobjects[selected_id];\n    if(customerdetail){\n      this.setState({\n        ...this.state,\n        data: {\n          ...this.state.data,\n          billingaddress:\n            customerdetail.customeraddress1 +\n            ', ' +\n            customerdetail.customeraddress2 +\n            ', ' +\n            customerdetail.city +\n            ', ' +\n            customerdetail.state +\n            ', ' +\n            customerdetail.country +\n            ', ' +\n            customerdetail.pincode,\n          deliveryaddress:\n            customerdetail.deliveryAddress.address1 +\n            ', ' +\n            customerdetail.deliveryAddress.address2 +\n            ', ' +\n            customerdetail.deliveryAddress.city +\n            ', ' +\n            customerdetail.deliveryAddress.state +\n            ', ' +\n            customerdetail.deliveryAddress.country +\n            ', ' +\n            customerdetail.deliveryAddress.pincode,\n          customerdetail\n        }\n      });\n    }\n   \n  };\n\n  handleClick = e => {\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        values: [...this.state.data.values, ''],\n        selectedItemlist: {\n          ...this.state.data.selectedItemlist,\n          id: [...this.state.data.selectedItemlist.id, ''],\n          itemname: [...this.state.data.selectedItemlist.itemname, ''],\n          itemdescription: [\n            ...this.state.data.selectedItemlist.itemdescription,\n            ''\n          ],\n          itemtype: [...this.state.data.selectedItemlist.itemtype, ''],\n          itemrate: [...this.state.data.selectedItemlist.itemrate, ''],\n          itemuom: [...this.state.data.selectedItemlist.itemuom, ''],\n          itemdiscount: [...this.state.data.selectedItemlist.itemdiscount, ''],\n          costperunit: [...this.state.data.selectedItemlist.costperunit, ''],\n          quantity: [...this.state.data.selectedItemlist.quantity, ''],\n          totalcost: [...this.state.data.selectedItemlist.totalcost, '']\n        }\n      }\n    });\n\n\n\n\n  };\n\n  filterItems(itemarray, key) {\n    return itemarray.sort((a, b) => { return a[key].toLowerCase().localeCompare(b[key].toLowerCase()) })\n  }\n\n  createSelectItems = () => {\n    let items = [];\n    let masteritemlistvalues = this.state.masteritemlistvalues;\n    masteritemlistvalues = this.filterItems(masteritemlistvalues, 'masteritemtypename')\n    masteritemlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.masteritemtypename}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  removeClick = (e, index) => {\n    const removeItem = { ...this.state.data };\n    const values = removeItem.values;\n    const id = removeItem.selectedItemlist.id;\n    const itemname = removeItem.selectedItemlist.itemname;\n    const itemdescription = removeItem.selectedItemlist.itemdescription;\n    const itemtype = removeItem.selectedItemlist.itemtype;\n    const itemrate = removeItem.selectedItemlist.itemrate;\n    const itemuom = removeItem.selectedItemlist.itemuom;\n    const itemdiscount = removeItem.selectedItemlist.itemdiscount;\n    const costperunit = removeItem.selectedItemlist.costperunit;\n    const quantity = removeItem.selectedItemlist.quantity;\n    const totalcost = removeItem.selectedItemlist.totalcost;\n    values.splice(index, 1);\n    id.splice(index, 1);\n    itemname.splice(index, 1);\n    itemdescription.splice(index, 1);\n    itemtype.splice(index, 1);\n    itemrate.splice(index, 1);\n    itemuom.splice(index, 1);\n    itemdiscount.splice(index, 1);\n    costperunit.splice(index, 1);\n    quantity.splice(index, 1);\n    totalcost.splice(index, 1);\n\n\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        values,\n        selectedItemlist: {\n          ...this.state.data.selectedItemlist,\n          id,\n          itemname,\n          itemdescription,\n          itemtype,\n          itemrate,\n          itemuom,\n          itemdiscount,\n          costperunit,\n          quantity,\n          totalcost\n        }\n      }\n    });\n  };\n\n  handleValidSubmit = () => {\n\n    this.saveDynamicPonum();\n    let AddedIteminfo = [];\n    const { customerdetail, selectedItemlist } = this.state.data;\n    const id = selectedItemlist.id;\n    const itemname = selectedItemlist.itemname;\n    const itemdescription = selectedItemlist.itemdescription;\n    const itemtype = selectedItemlist.itemtype;\n    const itemrate = selectedItemlist.itemrate;\n    const itemuom = selectedItemlist.itemuom;\n    const itemdiscount = selectedItemlist.itemdiscount;\n    const costperunit = selectedItemlist.costperunit;\n    const quantity = selectedItemlist.quantity;\n    const totalcost = selectedItemlist.totalcost;\n   \n    this.setState({ loading: true });\n    const { data } = this.state;\n    console.log(data);\n    let values = data.values;\n    values.forEach(function (value, i) {\n      let obj = {};\n      obj.id = id[i] || null;\n      obj.itemname = itemname[i] || null;\n      obj.itemdescription = itemdescription[i] || null;\n      obj.itemtype = itemtype[i] || null;\n      obj.itemrate = itemrate[i] || null;\n      obj.itemuom = itemuom[i] || null;\n      obj.itemdiscount = itemdiscount[i] || null;\n      obj.costperunit = costperunit[i] || null;\n      obj.quantity = quantity[i] || null;\n      obj.totalcost = totalcost[i] || null;\n      AddedIteminfo.push(obj);\n    });\n    data['AddedIteminfo'] = AddedIteminfo;\n    console.log(JSON.stringify(data));\n\n    if (this.props.ID != undefined) {\n      data['_id'] = this.props.ID;\n      axios\n      .post(`${process.env.REACT_APP_BASE_URL}/proformainvoice/updateproformainvoice`, {\n        data\n      })\n      .then(res => {\n        this.setState({ loading: false, errors: {}, success: true,successmsg:'Proforma Invoice edited successfully' });\n        \n      },(err) =>{\n        this.setState({ loading: false, errors: {}, success: true,successmsg:'Proforma Invoice edited successfully' });\n        \n      });\n    }\n\n    else{\n      axios\n      .post(`${process.env.REACT_APP_BASE_URL}/proformainvoice/addproformainvoice`, {\n        data\n      })\n      .then(res => {\n        \n          this.myFormRef.reset();\n          this.setState({ loading: false, errors: {}, success: true,successmsg:'Proforma Invoice is generated successfully' });\n        \n      },(err) =>{\n \n          this.myFormRef.reset();\n          this.setState({ loading: false, errors: {}, success: true,successmsg:'Proforma Invoice is generated successfully' });\n        \n      });\n    }\n  };\n\n  updateQuotation(id) {\n    if (id != '') {\n      localStorage.setItem('customerId', id);\n    }\n  }\n\n  onShowAlert = () => {\n    this.setState({ visible: true }, () => {\n      window.setTimeout(() => {\n        this.setState({ visible: false });\n      }, 5000);\n    });\n  };\n\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n\n  handleInvalidSubmit = () => {\n    console.log('invalid submit');\n  };\n\n  createChallanList = () => {\n    let items = [];\n    const challanlistvalues = this.state.challanlistvalues;\n    challanlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.deliverychallanno}>\n          {option.deliverychallanno}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  saveDynamicPonum(){\n    let purchaseordernumber = this.state.data.purchaseordernumber + \"$\" + new Date().getTime()\n    \n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        purchaseordernumber,\n      }\n    },()=>{\n      console.log(this.state.data)\n    })\n  }\n\n  handleChallanChange = e => {\n    console.log(e)\n    let selecteddeliveryChallan = e.target ? e.target.value : e\n    console.log(selecteddeliveryChallan)\n    const challanlistvalues = this.state.challanlistvalues;\n    let selectedChallan = challanlistvalues.filter(\n      challan => challan._id === selecteddeliveryChallan || challan.deliverychallanno === selecteddeliveryChallan\n    );\n    console.log(selectedChallan)\n    if(selectedChallan && selectedChallan.length > 0){\n      selectedChallan = selectedChallan[0];\n      const newState = Object.assign({}, this.state);\n      newState.data.customerdetail.id = selectedChallan.customerid ? selectedChallan.customerid._id : '';\n      this.setState(newState);\n      const deliverychallannumber = selectedChallan.deliverychallanno;\n      const purchaseordernumber = selectedChallan.ponumber;\n      const date = new Date(selectedChallan.date);\n      const purchaseorderdate = new Date(selectedChallan.podate);\n      const vehiclenumber = selectedChallan.vehiclenumber;\n      console.log(JSON.stringify(selectedChallan));\n  \n      let addeditemlist = selectedChallan.addeditemlist;\n\n      let selectedItemlist = {\n        id: [],\n        itemname: [],\n        itemdescription: [],\n        itemtype: [],\n        itemrate: [],\n        itemuom: [],\n        itemdiscount: [],\n        costperunit: [],\n        quantity: [],\n        totalcost: []\n      }\n      let values = selectedChallan.addeditemlist\n      if (selectedChallan.addeditemlist.length > 0) {\n\n        for (var i = 0; i < selectedChallan.addeditemlist.length; i++) {\n          selectedChallan.addeditemlist[i].itemdiscount = selectedChallan.addeditemlist[i].itemdiscount == null || selectedChallan.addeditemlist[i].itemdiscount == '' ?\n          selectedChallan.addeditemlist[i].itemdiscount = 0 : selectedChallan.addeditemlist[i].itemdiscount\n          selectedChallan.addeditemlist[i].itemdiscount = (selectedChallan.addeditemlist[i].itemdiscount).toString()\n\n\n          selectedChallan.addeditemlist[i].quantity = selectedChallan.addeditemlist[i].quantity == null || selectedChallan.addeditemlist[i].quantity == '' ?\n          selectedChallan.addeditemlist[i].quantity = 0 : selectedChallan.addeditemlist[i].quantity\n          selectedChallan.addeditemlist[i].quantity = (selectedChallan.addeditemlist[i].quantity).toString()\n\n          selectedChallan.addeditemlist[i].costperunit = selectedChallan.addeditemlist[i].costperunit == null || selectedChallan.addeditemlist[i].costperunit == '' ?\n          selectedChallan.addeditemlist[i].costperunit = 0 : selectedChallan.addeditemlist[i].costperunit\n          selectedChallan.addeditemlist[i].costperunit = (selectedChallan.addeditemlist[i].costperunit).toString()\n\n          selectedChallan.addeditemlist[i].totalcost = selectedChallan.addeditemlist[i].totalcost == null || selectedChallan.addeditemlist[i].totalcost == '' ?\n          selectedChallan.addeditemlist[i].totalcost = 0 : selectedChallan.addeditemlist[i].totalcost\n          selectedChallan.addeditemlist[i].totalcost = (selectedChallan.addeditemlist[i].totalcost).toString()\n\n  \n\n\n\n          selectedItemlist.itemdescription.push(selectedChallan.addeditemlist[i].itemdescription)\n          selectedItemlist.itemtype.push(selectedChallan.addeditemlist[i].itemtype._id)\n          selectedItemlist.itemdiscount.push(selectedChallan.addeditemlist[i].itemdiscount)\n\n\n         \n          selectedItemlist.itemuom.push(selectedChallan.addeditemlist[i].itemuom._id)\n          selectedItemlist.quantity.push(selectedChallan.addeditemlist[i].quantity)\n\n          selectedItemlist.costperunit.push(selectedChallan.addeditemlist[i].costperunit)\n\n          selectedItemlist.totalcost.push(selectedChallan.addeditemlist[i].totalcost)\n          selectedItemlist.id.push(selectedChallan.addeditemlist[i].id)\n\n        }\n      }\n  \n      this.setState({\n        ...this.state,\n        data: {\n          ...this.state.data,\n       //   values: values,\n          deliverychallannumber,\n          purchaseordernumber,\n          date,\n          purchaseorderdate,\n          vehiclenumber,\n          selectedItemlist,\n          values\n        }\n      }, () => {\n       \n        this.setState({\n          ...this.state.data,\n          data: {\n            ...this.state.data,\n            deliverychallannumber : deliverychallannumber\n          //  values: values\n          }\n        },() =>{\n          console.log(this.state.data)\n          if (selectedChallan.addeditemlist.length > 0) {\n            selectedChallan.addeditemlist.filter((item, index) => {\n              this.selectitemchange(item.id._id, index,false);\n            })\n          }\n          this.handleChange(selectedChallan.customerid._id)\n        });\n      });\n    }\n  \n  };\n\n  render() {\n    const { data, errors, loading, success, visible,successmsg } = this.state;\n    return (\n      <div>\n        <div>\n        {loading ? <CustomLoader /> : null}\n          {!!success ? (\n            // <Alert color=\"info\" isOpen={visible}>\n            //   Quotation is added successfully\n            // </Alert>\n            <Modal\n              isOpen={success}\n              toggle={this.toggle}\n              className={this.props.className}\n            >\n              <ModalHeader  toggle={this.toggle}>Invoice</ModalHeader>\n              <ModalBody >{successmsg}</ModalBody>\n              <ModalFooter>\n                <Button color='primary' onClick={this.toggle}>\n                  Ok\n                </Button>\n              </ModalFooter>\n            </Modal>\n          ) : null}\n        </div>\n        <div>\n          {!!errors.quotationnumber ? (\n            <Alert Label color='danger' isOpen={visible}>\n              Proforma Invoice number should have unique value.\n            </Alert>\n          ) : null}\n        </div>\n        <AvForm\n          onValidSubmit={this.handleValidSubmit}\n        //  onInvalidSubmit={this.handleInvalidSubmit}\n          ref={el => (this.myFormRef = el)}\n        >\n          <Card>\n            <CardHeader>Proforma Invoice</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='ponumber'>Proforma Invoice Number</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      Label\n                      name='invoicenumber'\n                      type='number'\n                      id='invoicenumber'\n                      value={data.invoicenumber || null}\n                      onChange={this.onhandlerChange}\n              \n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter quotation Number'\n                        },\n                        pattern: {\n                          value: '^[0-9]+$',\n                          errorMessage: 'Please enter valid Number'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <Label className='small-font-size' for='vendorcode'>Delivery Challan No</Label>\n                  {/* <AvField\n                    name='deliverychallannumber'\n                    type='text'\n                    id='deliverychallannumber'\n                    value={data.deliverychallannumber || null}\n                    onChange={e => this.onhandlerChange(e)}\n                  /> */}\n                  <AvField\n                    Label\n                    type='select'\n                    name={`deliverychallannumber`}\n                    //required={true}          \n                    value={data.deliverychallannumber}\n                    onChange={e => this.handleChallanChange(e)}\n                  >\n                    <option value=''>select challan</option>\n                    {this.createChallanList()}\n                  </AvField>\n                </Col>\n                <Col sm={2}>\n                  <Label className='small-font-size' for='date'>Delivery challan date</Label>\n                  <DatePicker\n                  readOnly\n                    selected={data.date}\n                    autoComplete=\"new-password\"\n                    onChange={this.handleDate}\n                    className='form-control small-font-size'\n                    dateFormat='dd/MM/yyyy'\n                    id='date'\n                  />\n                </Col>\n               \n\n                <Col sm={2}>\n                  <Label className='small-font-size' for='date'>Date of invoice</Label>\n                  <DatePicker\n                  autoComplete=\"new-password\"\n                    selected={data.invoicedate}\n                    onChange={this.invocieDate}\n                    className='form-control small-font-size'\n                    dateFormat='dd/MM/yyyy'\n                    id='invoicedate'\n                  />\n                </Col>\n                <Col sm={2}>\n                  <Label className='small-font-size' for='date'>Purchase order date</Label>\n                  <DatePicker\n                  autoComplete=\"new-password\"\n                    selected={data.purchaseorderdate}\n                    onChange={this.purchaseDate}\n                    readOnly\n                    className='form-control small-font-size'\n                    dateFormat='dd/MM/yyyy'\n                    id='purchaseorderdate'\n                  />\n                </Col>\n                <Col sm={2}>\n                  <Label className='small-font-size' for='vendorcode'>Vender code</Label>\n                  <AvField\n                    Label\n                    name='vendorcode'\n                    type='text'\n                    id='vendorcode'\n                    value={data.vendorcode || null}\n                    onChange={e => this.onhandlerChange(e)}\n                  />\n                </Col>\n                <Col sm={2}>\n                  <Label className='small-font-size' for='vehiclenumber'>Vehicle number</Label>\n                  <AvField\n                    Label\n                    name='vehiclenumber'\n                    type='text'\n                    id='vehiclenumber'\n                    value={data.vehiclenumber || null}\n                    onChange={e => this.onhandlerChange(e)}\n                  />\n                </Col>\n                <Col sm={2}>\n                  <Label className='small-font-size' for='hsncode'>HSN Code</Label>\n                  <AvField\n                    Label\n                    name='hsncode'\n                    type='text'\n                    id='hsncode'\n                    value={data.hsncode || null}\n                    onChange={e => this.onhandlerChange(e)}\n                  />\n                </Col>\n                <Col sm={2}>\n                  <Label className='small-font-size' for='saccode'>SAC Code</Label>\n                  <AvField\n                    Label\n                    Label\n                    name='saccode'\n                    type='text'\n                    id='saccode'\n                    value={data.saccode || null}\n                    onChange={e => this.onhandlerChange(e)}\n                  />\n                </Col>\n           \n\n                 <Col sm={2}>\n                  <Label className='small-font-size' for='purchaseordernumber'>Purchase order number</Label>\n                  <span className='required-label'>*</span>\n                  <AvField\n                    Label\n                    readOnly\n                    name='purchaseordernumber'\n                    type='text'\n                    id='purchaseordernumber'\n                    value={data.purchaseordernumber || ' ' || null}\n                    onChange={e => this.onhandlerChange(e)}\n                  />\n                </Col> \n                <Col sm={2}>\n                  <Label className='small-font-size' for='goodsDescription'>\n                    Description of Excisible Goods\n                  </Label>\n                  <AvField\n                    Label\n                    name='goodsDescription'\n                    type='text'\n                    id='goodsDescription'\n                    value={data.goodsDescription || null}\n                    onChange={e => this.onhandlerChange(e)}\n                  />\n                </Col>\n              </Row>\n              <Row>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='customername'>Customer Name</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      Label\n                      type='select'\n                      name={`customername`}\n                      value={data.customerdetail.id || null}\n                      required={true}\n                      onChange={e => this.handleChange(e)}\n                    >\n                      <option value=''>select customer name</option>\n                      {this.createSelectcustomer()}\n                    </AvField>\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='customernumber'>Customer Number</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      Label\n                      name='customernumber'\n                      type='number'\n                      id='customernumber'\n                      readOnly\n                      value={data.customerdetail.customernumber}\n                      onChange={this.onCustomerChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter Customer Number'\n                        },\n                  \n                        pattern: {\n                          value: '^[0-9]+$',\n                          errorMessage: 'Please enter valid Number'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='customergstnumber'>Customer GST </Label>\n                    <AvField\n                      Label\n                      name='customergstnumber'\n                      type='text'\n                      id='customergstnumber'\n                      readOnly\n                      value={data.customerdetail.customergstnumber}\n                      onChange={e => this.onCustomerChange}\n                      validate={{\n                    \n                        pattern: {\n                          value: '^[a-zA-z0-9]+$',\n                          errorMessage: 'Please enter valid GST Number'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n              </Row>\n              <Row>\n                <Col sm={4}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='billingaddress'>Billing Address</Label>\n                    <AvField\n                      Label\n                      name='billingaddress'\n                      type='text'\n                      id='billingaddress'\n                      readOnly\n                      value={\n                        data.customerdetail.customeraddress1 +\n                        ', ' +\n                        data.customerdetail.customeraddress2 +\n                        ', ' +\n                        data.customerdetail.city +\n                        ', ' +\n                        data.customerdetail.state +\n                        ', ' +\n                        data.customerdetail.country +\n                        ', ' +\n                        data.customerdetail.pincode\n                      }\n                      onChange={e => this.onhandlerChange(e)}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={4}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='deliveryaddress'>Delivery Address</Label>\n                    <AvField\n                      Label\n                      name='deliveryaddress'\n                      type='text'\n                      id='deliveryaddress'\n                      readOnly\n                      value={\n                        data.customerdetail.deliveryAddress.address1 +\n                        ', ' +\n                        data.customerdetail.deliveryAddress.address2 +\n                        ', ' +\n                        data.customerdetail.deliveryAddress.city +\n                        ', ' +\n                        data.customerdetail.deliveryAddress.state +\n                        ', ' +\n                        data.customerdetail.deliveryAddress.country +\n                        ', ' +\n                        data.customerdetail.deliveryAddress.pincode\n                      }\n                      onChange={e => this.onhandlerChange(e)}\n                    />\n                  </AvGroup>\n                </Col>\n                \n                <Col sm={4}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='remarks'>Remarks </Label>\n                    <AvField\n                      Label\n                      name='remarks'\n                      type='text'\n                      id='remarks'\n                      value={data.remarks}\n                      onChange={e => this.onRemarksChange(e)}\n                    \n                    />\n                  </AvGroup>\n                </Col>\n\n              </Row>\n              \n            \n              <Row>\n                <Col sm={3}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='deliverychallandata'>Delivary challan data </Label>\n                    <AvField\n                      Label\n                      name='deliverychallandata'\n                      type='text'\n                      id='deliverychallandata'\n                      value={data.deliverychallandata}\n                      onChange={e => this.onSubjectHandler(e)}\n                    \n                    />\n                  </AvGroup>\n                </Col>\n\n\n                <Col sm={3}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='workorderno'>Work Order no </Label>\n                    <AvField\n                      Label\n                      name='workorderno'\n                      type='text'\n                      id='workorderno'\n                      value={data.workorderno}\n                      onChange={e => this.onSubjectHandler(e)}\n                    \n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={3}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='workorderdate'>Work Order Date </Label>\n               \n                       <DatePicker\n                        autoComplete=\"new-password\"\n                        selected={data.workorderdate}\n                        onChange={this.handleWorkorderDate}\n                        className='form-control small-font-size'\n                        dateFormat='dd/MM/yyyy'\n                        id='workorderdate'\n                  />\n                  </AvGroup>\n                </Col>\n                <Col sm={3}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='despathdate'> Date of Dispatch </Label>\n               \n                       <DatePicker\n                        autoComplete=\"new-password\"\n                        selected={data.despathdate}\n                        onChange={this.handleDespathdate}\n                        className='form-control small-font-size'\n                        dateFormat='dd/MM/yyyy'\n                        id='despathdate'\n                  />\n                  </AvGroup>\n                </Col>\n              </Row>\n              <Row>\n                <Col sm={3}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='removaltime'>Time of Removal </Label>\n               \n                    <AvField\n                      Label\n                      name='removaltime'\n                      type='text'\n                      id='removaltime'\n                      value={data.removaltime}\n                      onChange={e => this.onSubjectHandler(e)}\n                    \n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={3}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='transportationcharge'>Transportation Charges </Label>\n                    <AvField\n                      Label\n                      name='transportationcharge'\n                      type='text'\n                      id='transportationcharge'\n                      value={data.transportationcharge}\n                      onChange={e => this.onSubjectHandler(e)}\n                    \n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={3}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='transportationgst'>Transportation GST </Label>\n                    <AvField\n                      Label\n                      name='transportationgst'\n                      type='text'\n                      id='transportationgst'\n                      value={data.transportationgst}\n                      onChange={e => this.onSubjectHandler(e)}\n                    \n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={3}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='advanceamountreceived'>Advance Received </Label>\n                    <AvField\n                      Label\n                      name='advanceamountreceived'\n                      type='text'\n                      id='advanceamountreceived'\n                      value={data.advanceamountreceived}\n                      onChange={e => this.onSubjectHandler(e)}\n                    \n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={3}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='transportchargerequired'>GST required for Transport charge </Label>\n                    <AvField\n                      Label\n                      name='transportchargerequired'\n                      type='select'\n                      id='transportchargerequired'\n                      value={data.transportchargerequired}\n                      onChange={e => this.onSubjectHandler(e)}\n                    \n                    >\n                    <option value='Yes'>Yes</option>\n                    <option value='No'>No</option>\n                    </AvField>\n                  </AvGroup>\n                </Col>\n              </Row>\n\n             \n\n              <Row>\n                <div className='mg-t-20'>\n                  <Button color='info' onClick={this.handleClick} type='button'>\n                    Add Item\n                  </Button>\n                </div>\n              </Row>\n              <div className='purchaseorder-item-row'>\n                {data.values.map((values, index) => {\n\n                  \n\n                  return (\n                    <div key={index}>\n                      <div className='purchaseorder-table'>\n                        <Row key={index}>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for='selectitem'>Item Code</Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                Label\n                                type='select'\n                                name={`selectitem${index}`}\n                                onChange={e => this.selectitemchange(e, index,true)}\n                                required={true}\n                                value={data.selectedItemlist.id[index]}\n                              >\n                                <option value=''>select Item</option>\n                                {this.createSelectItems()}\n                              </AvField>\n                            </AvGroup>\n                          </Col>\n                          <Col sm={2}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`masteritemdescription${index}`}>\n                                Description\n                              </Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                Label\n                                readOnly\n                                name={`masteritemdescription${index}`}\n                                type='text'\n                                id='masteritemdescription'\n                                value={\n                                  data.selectedItemlist.itemdescription[index]\n                                }\n                                onChange={this.onChange}\n                                validate={{\n                                  required: {\n                                    value: true,\n                                    errorMessage:\n                                      'Please enter Item Description'\n                                  }\n                        \n                                 \n                                }}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`masteritemtype${index}`}>Type</Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                Label\n                                // style={{ width: '150px' }}\n                                readOnly\n                                type='select'\n                                name={`masteritemtype${index}`}\n                                onChange={this.onChange}\n                                required={true}\n                                value={\n                                  data.selectedItemlist.itemtype[index]\n                                }\n                              >\n                                <option value=''>select</option>\n                                {this.createSelectItemTypes()}\n                              </AvField>\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`masteritemuom${index}`}>UOM</Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                Label\n                                readOnly\n                                type='select'\n                                name={`masteritemuom${index}`}\n                                onChange={this.onChange}\n                                required={true}\n                                value={\n                                  data.selectedItemlist.itemuom[index]\n                                }\n                              >\n                                <option value=''>uom</option>\n                                {this.createSelectUomItems()}\n                              </AvField>\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`discount${index}`}>Discount %</Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                Label\n                                name={`itemdiscount${index}`}\n                                type='number'\n                                id={`itemdiscount${index}`}\n                                value={\n                                  data.selectedItemlist.itemdiscount[index]\n                                }\n                                onChange={e =>\n                                  this.itemdiscountChange(e, index)\n                                }\n                                validate={{\n                                  minLength: {\n                                    value: 1,\n                                    errorMessage:\n                                      'item Discount value is required'\n                                  },\n                                  maxLength: { value: 100 },\n                                  pattern: {\n                                    value: '^[0-9.]*$',\n                                    errorMessage: 'Please enter valid value'\n                                  }\n                                }}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`costperunit${index}`}>\n                                Unit Cost\n                              </Label>\n                              <AvField\n                                Label\n                                name={`costperunit${index}`}\n                                type='number'\n                                id={`costperunit${index}`}\n                                value={\n                                  data.selectedItemlist.costperunit[index]\n                                }\n                                onChange={e => this.unitChange(e, index)}\n                                validate={{\n                                  required: {\n                                    value: true,\n                                    errorMessage: 'Please enter cost'\n                                  },\n                                  pattern: {\n                                    value: '^[0-9.]*$',\n                                    errorMessage:\n                                      'Please enter valid costperunit'\n                                  }\n                                }}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`quantity${index}`}>Quantity</Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                Label\n                                name={`quantity${index}`}\n                                type='number'\n                                id={`quantity${index}`}\n                                value={\n                                  data.selectedItemlist.quantity[index] \n                                }\n                                onChange={e => this.quantityChange(e, index)}\n                                validate={{\n                                  required: {\n                                    value: true,\n                                    errorMessage: 'Please enter Item Quantity'\n                                  },\n                                  minLength: {\n                                    value: 1,\n                                    errorMessage: 'quantity value is required'\n                                  },\n                                  pattern: {\n                                    value: '^[0-9.]*$',\n                                    errorMessage: 'Please enter valid quantity'\n                                  }\n                                }}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`totalcost${index}`}>\n                                Total Cost\n                              </Label>\n                              <AvField\n                                Label\n                                name={`totalcost${index}`}\n                                type='number'\n                                id={`totalcost${index}`}\n                                value={\n                                  data.selectedItemlist.totalcost[index]\n                                    ? data.selectedItemlist.totalcost[index]\n                                    : ' '\n                                }\n                                onChange={e => this.onChange(e, index)}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <Button\n                              Label\n                              color='danger'\n                              type='button'\n                              onClick={e => this.removeClick(e, index)}\n                              style={{ marginTop: '30px' }}\n                            >\n                              -\n                            </Button>\n                          </Col>\n                        </Row>\n                      </div>\n                    </div>\n                  );\n                })}\n              </div>\n              <div style={{'borderBottom':'1px solid #CCC','borderTop':'1px solid #CCC','paddingTop':'10px'}}>\n              <Row>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='taxableamount'>Taxable Amount</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      Label\n                      name='taxableamount'\n                      type='number'\n                      id='taxableamount'\n                      value={data.taxableamount}\n                      disabled='true'\n                      onChange={e => this.onhandlerChange(e)}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter Taxable Amount'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='freightcharges'>Freight,w.s,loading and handling charges</Label>\n                    <AvField\n                      Label\n                      name='freightcharges'\n                      type='number'\n                      id='freightcharges'\n                      value={data.freightcharges}\n                      onChange={e => this.onhandlerChange(e)}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='subtotal'>Sub Total</Label>\n                    <AvField\n                      Label\n                      name='subtotal'\n                      type='number'\n                      id='subtotal'\n                      value={data.subtotal}\n                      disabled='true'\n                      onChange={e => this.onhandlerChange(e)}\n                    />\n                  </AvGroup>\n                </Col>\n         \n              </Row>\n              <Row>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='cgst'>CGST (%)</Label>\n                    <AvField\n                      Label\n                      name='cgst'\n                      type='number'\n                      id='cgst'\n                      value={data.cgst}\n                      onChange={e => this.onhandlerChange(e)}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='sgst'>SGST (%)</Label>\n                    <AvField\n                      Label\n                      name='sgst'\n                      type='number'\n                      id='sgst'\n                      value={data.sgst}\n                      onChange={e => this.onhandlerChange(e)}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='igst'>IGST (%)</Label>\n                    <AvField\n                      Label\n                      name='igst'\n                      type='number'\n                      id='igst'\n                      value={data.igst}\n                      onChange={e => this.onhandlerChange(e)}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='total'>Total</Label>\n                    <AvField\n                      Label\n                      name='total'\n                      type='number'\n                      id='total'\n                      disabled='true'\n                      value={data.total}\n                      onChange={e => this.onhandlerChange(e)}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='roundoffamount'>Round Off</Label>\n                    <AvField\n                      Label\n                      name='roundoffamount'\n                      type='number'\n                      id='roundoffamount'\n                      value={data.roundoffamount}\n                      onChange={e => this.onhandlerChange(e)}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='grandtotal'>Grand total</Label>\n                    <AvField\n                      Label\n                      name='grandtotal'\n                      type='number'\n                      id='grandtotal'\n                      value={data.grandtotal}\n                      disabled='true'\n                      onChange={e => this.onhandlerChange(e)}\n                    />\n                  </AvGroup>\n                </Col>\n              </Row>\n              </div>\n              <Row>\n                <div className='mg-20'>\n                  <Button\n                    Label\n                    color='primary'\n                  //  / disabled={loading}\n                    className='lgn-loader'\n                  >\n                    Submit\n                    {/* {loading} */}\n                  </Button>\n                </div>\n              </Row>\n            </CardBody>\n          </Card>\n        </AvForm>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    customerlistvalues: state.customerlistvalues,\n    masteritemlistvalues: state.masteritemlistvalues,\n    masteritemtypelistvalues: state.masteritemtypenamevalue,\n    uomlistvalues: state.uomlistvalue,\n    locationlistvalue: state.locationlistvalue,\n    quotationlistvalues: state.quotationlistvalues,\n    invoicelistvalues: state.invoicelistvalues,\n    challanlistvalues: state.challanlistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  null\n)(ProformaInvoiceForm);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport {\n  getMasterItemList,\n  getMasterItemTypes\n} from \"../../../../actions/Transaction\";\nimport { connect } from \"react-redux\";\nimport { getUomList } from \"../../../../actions/uom\";\nimport { getCustomerList } from \"../../../../actions/customerContact\";\nimport { addinvoice } from \"../../../../actions/Invoice\";\nimport { getinvoice } from \"../../../../actions/Invoice\";\nimport { updateinvoice } from \"../../../../actions/Invoice\";\n\nimport { getChallan } from '../../../../actions/challan';\nimport ProformaInvoiceForm from \"./ProformaInvoiceForm\";\nimport CustomLoader from \"../../../../Components/loader/loader\";\n\nclass AddProformaInvoice extends React.Component {\n  state = {\n    loading: false,\n    ID:this.props.match.params.id\n  };\n  componentDidMount() {\n    this.props.getCustomerList();\n    this.props.getMasterItemTypes();\n    this.props.getMasterItemList();\n    this.props.getUomList();\n    this.props.getinvoice();\n    this.props.getChallan();\n  }\n  valid = () =>{\n    if( !localStorage.getItem('firstLoad') )\n    {\n      localStorage['firstLoad'] = true;\n      window.location.reload();\n    }  \n    else\n      localStorage.removeItem('firstLoad');\n  }\n\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n  render() {\n    const { loading,ID } = this.state;\n    return (\n      <div className=\"container mg-t-20\">\n        {loading ? <CustomLoader /> : null}\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to=\"/admin_dashboard\">Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/transaction_page\">Transactions</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/invoice\">Proforma Invoice</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>Add Proforma Invoice</BreadcrumbItem>\n        </Breadcrumb>\n        <div>\n          <ProformaInvoiceForm ID={ID} valid={this.valid}/>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  {\n    getMasterItemList,\n    getMasterItemTypes,\n    getUomList,\n    addinvoice,\n    updateinvoice,\n    getCustomerList,\n    getinvoice,\n    getChallan\n  }\n)(AddProformaInvoice);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { getinvoice } from '../../../../actions/Invoice';\nimport { Button, Alert } from 'reactstrap';\nimport DataTable from '../../../../Components/Table/DatatablePage';\nimport CustomLoader from '../../../../Components/loader/loader';\n\n\nimport {\n  getMasterItemList,\n  getMasterItemTypes\n} from \"../../../../actions/Transaction\";\n\nimport { getUomList } from \"../../../../actions/uom\";\nimport { getCustomerList } from \"../../../../actions/customerContact\";\n\n\nimport { getChallan } from '../../../../actions/challan';\nimport { tr } from 'date-fns/esm/locale';\n\nclass ViewInvoice extends React.Component {\n  state = {\n    count: 0,\n    loading: true,\n    success:false,\n    invoiceid:'',\n    invoicelistvalues: []\n  };\n  componentDidMount() {\n\n\n    this.props.getCustomerList();\n    this.props.getMasterItemTypes();\n    this.props.getMasterItemList();\n\n    this.props.getUomList();\n    this.props.getinvoice();\n    this.props.getChallan();\n\n    console.log(this.props);\n    if (this.props.invoicelistvalues) {\n      let quotationlist = Object.values(this.props.invoicelistvalues);\n      quotationlist.sort(function(a, b){\n        return parseInt(b.invoicenumber) - parseInt(a.invoicenumber);\n      });\n      const invoicelistvalues = quotationlist.map(quotationvalue => {\n        return {\n          invoicenumber: quotationvalue.invoicenumber,\n          customername: quotationvalue.customername,\n          customernumber: quotationvalue.customernumber,\n          customercontactnumber: quotationvalue.customercontactnumber,\n\n          view: (\n            <div className=\"actionbuttons\">\n            <Button\n              Label\n              color='primary'\n              onClick={() => {\n                this.updateButton(quotationvalue._id);\n              }}\n            >\n              Print\n            </Button>\n            <Button\n              Label\n              color='primary'\n              onClick={() => {\n                this.updateinvoice(quotationvalue._id);\n              }}\n            >\n              Edit\n            </Button>\n            </div>\n          )\n        };\n      });\n      this.setState({ ...this.state, invoicelistvalues });\n      this.dataHandler(false);\n    }\n  }\n  componentWillReceiveProps(props) {\n    let quotationlist = Object.values(props.invoicelistvalues);\n    console.log(quotationlist)\n    //quotationlist= quotationlist.sort((a, b) => b.invoicenumber.toString().toLowerCase().localeCompare(a.invoicenumber.toString().toLowerCase()));\n    quotationlist.sort(function(a, b){\n      return parseInt(b.invoicenumber) - parseInt(a.invoicenumber);\n    });\n    const invoicelistvalues = quotationlist.map(quotationvalue => {\n      return {\n        invoicenumber: quotationvalue.invoicenumber,\n        customername: quotationvalue.customername,\n        customernumber: quotationvalue.customernumber,\n        customercontactnumber: quotationvalue.customercontactnumber,\n\n        view: (\n          <div className=\"actionbuttons\">\n            <Button\n              Label\n              color='primary'\n              onClick={() => {\n                this.updateButton(quotationvalue._id);\n              }}\n            >\n              Print\n            </Button>\n            <Button\n              Label\n              color='primary'\n              onClick={() => {\n                this.updateinvoice(quotationvalue._id);\n              }}\n            >\n              Edit\n            </Button>\n            </div>\n        )\n      };\n    });\n    this.setState({ ...this.state, invoicelistvalues });\n    this.dataHandler(false);\n  }\n\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n\n\n  updateButton = id => {\n    let path = `/view_invoicepdf/${id}`;\n    this.props.history.push(path);\n  };\n\n  originalInvoice = () =>{\n    let path = `/view_invoicepdf/${this.state.invoiceid}`;\n    this.props.history.push(path);\n  }\n\n  profomaInvoice = () =>{\n    let path = `/view_proformainvoicepdf/${this.state.invoiceid}`;\n    this.props.history.push(path);\n  }\n\n  updateinvoice = id => {\n    // let path = `/view_invoicepdf/${id}`;\n    // window.open(path, '_blank');\n    let path = `/editinvoice/${id}`;\n    //window.open(path, \"_blank\");\n    this.props.history.push(path);\n  };\n\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n\n  render() {\n    const { loading, count, invoicelistvalues,success } = this.state;\n    console.log(invoicelistvalues)\n    const columnvalue = [\n      {\n        label: 'Invoice Number',\n        field: 'invoicenumber',\n        sort: 'asc',\n        width: 40\n      },\n      {\n        label: 'Customer Name',\n        field: 'customername',\n        sort: 'asc',\n        width: 40\n      },\n      {\n        label: 'Customer Number',\n        field: 'customernumber',\n        sort: 'asc',\n        width: 40\n      },\n\n      {\n        label: 'Contact Number',\n        field: 'customercontactnumber',\n        sort: 'asc',\n        width: 40\n      },\n      {\n        label: 'Print/Edit',\n        field: 'view',\n        sort: 'asc',\n        width: 40\n      }\n    ];\n    return (\n      <div className='container mg-t-20'>\n\n          {!!success ? (\n            <Modal\n              isOpen={success}\n              toggle={this.toggle}\n              className={this.props.className}\n            >\n              <ModalHeader toggle={this.toggle}>Invoice</ModalHeader>\n              <ModalBody style={{'textAlign': 'center'}}>Please select type of invoice</ModalBody>\n              <ModalFooter>\n                <Button color=\"primary\" onClick={this.originalInvoice}>\n                  Original Invoice\n                </Button>\n                <Button color=\"primary\" onClick={this.profomaInvoice}>\n                  Proforma Invoice\n                </Button>\n              </ModalFooter>\n            </Modal>\n          ) : null}\n\n        {loading ? <CustomLoader /> : null}\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to=\"/admin_dashboard\">Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/transaction_page\">Transactions</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/invoice\">Invoice</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>List</BreadcrumbItem>\n        </Breadcrumb>\n        <div>\n          <DataTable\n            rowvalues={invoicelistvalues}\n            columnvalue={columnvalue}\n            className=\"invoicelist\" />\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    invoicelistvalues: state.invoicelistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  {\n    getMasterItemList,\n    getMasterItemTypes,\n    getUomList,\n    getCustomerList,\n    getinvoice,\n    getChallan\n  }\n)(ViewInvoice);\n","import React from 'react';\nimport logo from '../../../../Images/logo.png';\nimport seal from '../../../../Images/seal.jpg';\nimport client from '../../../../Images/client.png';\nimport { connect } from 'react-redux';\nimport './ViewInvoice.scss';\nimport moment from 'moment';\nimport {\n  Document,\n  Page,\n  Text,\n  View,\n  StyleSheet,\n  Image\n} from '@react-pdf/renderer';\nimport {\n  TableCell,\n  Table,\n  TableHeader,\n  TableBody,\n  DataTableCell\n} from '@david.kucsai/react-pdf-table';\nimport styled from '@react-pdf/styled-components';\n\n// Create styles\nconst styles = StyleSheet.create({\n  textcenter: { textAlign: 'center' },\n  textright: { textAlign: 'right' },\n  textleft: { textAlign: 'left' },\n  paddingleft: { paddingLeft: 5 },\n  margin: {\n    margin: 5\n  },\n  pagepadding: {\n   padding:5,\n   paddingLeft:10,\n   paddingRight:10,\n\n    // display: 'flex',\n    // flexDirection: 'row',\n    // overflow: 'hidden'\n    border: 'none',\n    boxShadow: 'none',\n    border: '30px solid green',\n    background:'#000'\n  },\n  section_column: {\n    position: 'relative',\n    display: 'flex',\n    flexDirection: 'column',\n    overflow: 'hidden'\n  },\n  myHeight: {\n    height: '100px'\n  },\n  headerfont: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    padding: 5\n  },\n  descriptionText: {\n    fontSize: 10,\n    fontWeight: 'normal',\n    padding: 8,\n    wordWrap: 'break-word'\n  },\n  headerfont2: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    padding: 5\n  },\n  headerfont4: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    textAlign: 'left',\n    paddingLeft: 5,\n    paddingTop: 5,\n    paddingBottom: 5,\n  },\n  headerfont5: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    paddingRight: 5\n  },\n  headerfont3: {\n    fontSize: 10,\n    paddingLeft: 8\n  },\n  headerfontleft: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    textAlign: 'left',\n    padding: 5\n  },\n  billingaddress: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    textAlign: 'left',\n    // height: 70,\n    // maxWidth: 200,\n    wordWrap: 'break-word',\n    padding: 5\n  },\n  shippingaddress: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    textAlign: 'left',\n    // height: 130,\n    // maxWidth: 200,\n    wordWrap: 'break-word',\n    padding: 5\n  },\n  row: {\n    flexDirection: 'row',\n    // justifyContent: 'space-between'\n  },\n  column: {\n    width: '50%'\n    // flex: 1\n  },\n  headerwidth: {\n    // width: 210,\n    // textAlign: 'center',\n    marginLeft: 75,\n    fontWeight: 900\n  },\n  headerwidthdate: {\n    width: 210,\n    paddingTop: 23,\n    fontSize: 10\n  },\n  headerwidthlogo: {\n    width: 350,\n    fontSize: 10\n  },\n  logo: {\n    width: 225,\n    height: 90\n  },\n  seal: {\n    width: 50,\n    height: 50\n  },\n  headerwidthAddress: {\n    fontSize: 10\n  },\n  refstyle: {\n    paddingBottom: 20,\n    fontSize: 10\n  },\n  headerpadding: {\n    padding: 20\n  },\n  flexgrow: {\n    flexGrow: 1\n  },\n  fontsize18: {\n    fontSize: 10\n  },\n  kindattend: {\n    paddingTop: 15,\n    fontSize: 10\n  },\n  yourref: {\n    fontSize: 13,\n    paddingBottom: 10\n  },\n  main: {\n    fontSize: 10\n  },\n  tableheaderbgcolor: {\n    backgroundColor: 'red',\n    color: 'red',\n    background: 'red'\n  },\n  footerfixed: {\n    position: 'absolute',\n    bottom: 0,\n    width: '100%'\n  },\n  invoice_header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  nobordertable: {\n    borderWidth: 0, borderRightWidth: 0, borderBottomWidth: 0\n  }\n});\n\nconst Small = ({ children }) => {\n  return (\n    <Text style={{ fontSize: 10, padding: 5 }}>{children}</Text>\n  )\n}\n\nconst Description = ({ children }) => {\n  return (\n    <Text style={{\n      fontSize: 10,\n      padding: 5,\n      wordWrap: 'break-word',\n      paddingRight: 16,\n      textAlign: 'left'\n    }}>{children}</Text>\n  )\n}\n\nconst SmallBold = ({ children }) => {\n  return (\n    <Text style={{ fontSize: 10, padding: 5, fontWeight: 'bold' }}>{children}</Text>\n  )\n}\n\n\n// Create Document Component\n\nconst MyDocument = ({ invoicelistvalues, data_cond }) => {\n  let amountinwords = ''\n  let Rs = function (amount) {\n    var words = new Array();\n    words[0] = 'Zero'; words[1] = 'One'; words[2] = 'Two'; words[3] = 'Three'; words[4] = 'Four'; words[5] = 'Five'; words[6] = 'Six'; words[7] = 'Seven'; words[8] = 'Eight'; words[9] = 'Nine'; words[10] = 'Ten'; words[11] = 'Eleven'; words[12] = 'Twelve'; words[13] = 'Thirteen'; words[14] = 'Fourteen'; words[15] = 'Fifteen'; words[16] = 'Sixteen'; words[17] = 'Seventeen'; words[18] = 'Eighteen'; words[19] = 'Nineteen'; words[20] = 'Twenty'; words[30] = 'Thirty'; words[40] = 'Forty'; words[50] = 'Fifty'; words[60] = 'Sixty'; words[70] = 'Seventy'; words[80] = 'Eighty'; words[90] = 'Ninety'; var op;\n    amount = amount.toString();\n    var atemp = amount.split(\".\");\n    var number = atemp[0].split(\",\").join(\"\");\n    var n_length = number.length;\n    var words_string = \"\";\n    if (n_length <= 9) {\n      var n_array = new Array(0, 0, 0, 0, 0, 0, 0, 0, 0);\n      var received_n_array = new Array();\n      for (var i = 0; i < n_length; i++) {\n        received_n_array[i] = number.substr(i, 1);\n      }\n      for (var i = 9 - n_length, j = 0; i < 9; i++ , j++) {\n        n_array[i] = received_n_array[j];\n      }\n      for (var i = 0, j = 1; i < 9; i++ , j++) {\n        if (i == 0 || i == 2 || i == 4 || i == 7) {\n          if (n_array[i] == 1) {\n            n_array[j] = 10 + parseInt(n_array[j]);\n            n_array[i] = 0;\n          }\n        }\n      }\n      var value = \"\";\n      for (var i = 0; i < 9; i++) {\n        if (i == 0 || i == 2 || i == 4 || i == 7) {\n          value = n_array[i] * 10;\n        } else {\n          value = n_array[i];\n        }\n        if (value != 0) {\n          words_string += words[value] + \" \";\n        }\n        if ((i == 1 && value != 0) || (i == 0 && value != 0 && n_array[i + 1] == 0)) {\n          words_string += \"Crores \";\n        }\n        if ((i == 3 && value != 0) || (i == 2 && value != 0 && n_array[i + 1] == 0)) {\n          words_string += \"Lakhs \";\n        }\n        if ((i == 5 && value != 0) || (i == 4 && value != 0 && n_array[i + 1] == 0)) {\n          words_string += \"Thousand \";\n        }\n        if (i == 6 && value != 0 && (n_array[i + 1] != 0 && n_array[i + 2] != 0)) {\n          words_string += \"Hundred and \";\n        } else if (i == 6 && value != 0) {\n          words_string += \"Hundred \";\n        }\n      }\n      words_string = words_string.split(\" \").join(\" \");\n    }\n    return words_string;\n  }\n\n  let RsPaise = function (n) {\n    var op;\n    var nums = n.toString().split('.')\n    var whole = Rs(nums[0])\n    if (nums[1] == null) nums[1] = 0;\n    if (nums[1].length == 1) nums[1] = nums[1] + '0';\n    if (nums[1].length > 2) { nums[1] = nums[1].substring(2, nums[1].length - 1) }\n    if (nums.length == 2) {\n      if (nums[0] <= 9) { nums[0] = nums[0] * 10 } else { nums[0] = nums[0] };\n      var fraction = Rs(nums[1])\n      if (whole == '' && fraction == '') { op = 'Zero only'; }\n      if (whole == '' && fraction != '') { op = 'paise ' + fraction + ' only'; }\n      if (whole != '' && fraction == '') { op = 'INR: ' + whole + ' only'; }\n      if (whole != '' && fraction != '') { op = 'INR: ' + whole + 'and ' + fraction + ' paise only'; }\n      amountinwords = op\n    }\n  }\n\n\n\n  invoicelistvalues['total'] = Number(invoicelistvalues['total']).toFixed(2)\n  console.log(JSON.stringify(invoicelistvalues));\n  const data = invoicelistvalues.addeditemlist;\n  console.log('data');\n  console.log(data);\n  const totalrs = invoicelistvalues.totalvalue\n    ? invoicelistvalues.totalvalue\n    : '';\n  let taxableAmount = invoicelistvalues.taxableamount;\n  taxableAmount = parseFloat(taxableAmount)\n  taxableAmount = taxableAmount.toFixed(2)\n  console.log(taxableAmount)\n  const date = moment(invoicelistvalues.date).format('DD MMM, YYYY');\n  const invoicedate = moment(invoicelistvalues.invoicedate).format(\n    'DD MMM, YYYY'\n  );\n  const purchaseorderdate = moment(invoicelistvalues.purchaseorderdate).format(\n    'DD MMM, YYYY'\n  );\n  const billingaddress = invoicelistvalues.billingaddress;\n  const deliveryaddress = invoicelistvalues.deliveryaddress;\n  const vendorcode = invoicelistvalues.vendorcode;\n  let {\n    freightcharges,\n    subtotal,\n    cgst,\n    sgst,\n    igst,\n    total,\n    grandtotal,\n    deliverychallannumber,\n    goodsDescription,\n    invoicenumber,\n    vehiclenumber,\n    hsncode,\n    saccode,\n    roundoffamount,\n    customername\n  } = invoicelistvalues;\n  let purchaseordernumber = invoicelistvalues.purchaseordernumber;\n\n  const podate = invoicelistvalues.purchaseorderdate ? moment(invoicelistvalues.purchaseorderdate).format('DD MMM, YYYY') : '-'\n  let customergstnumber = invoicelistvalues.customergstnumber && invoicelistvalues.customergstnumber != '' ? invoicelistvalues.customergstnumber : ''\n  if(purchaseordernumber != '' && purchaseordernumber != null){\n    if(purchaseordernumber.toString().lastIndexOf('$') > -1){\n      purchaseordernumber = purchaseordernumber.toString().split('$')[0]\n    }\n  }\n   \n  const remarks = invoicelistvalues.remarks\n  const tax = invoicelistvalues.tax ? invoicelistvalues.tax : '';\n  const taxpercentage = invoicelistvalues.tax\n    ? invoicelistvalues.tax / 100\n    : '';\n\n\n\n\n  freightcharges = freightcharges != '' && freightcharges != null ? parseFloat(freightcharges) : 0\n  freightcharges = freightcharges.toFixed(2)\n  subtotal = parseFloat(taxableAmount) + parseFloat(freightcharges)\n  subtotal = parseFloat(subtotal)\n  subtotal = subtotal.toFixed(2)\n  \n  let cgstval = cgst != '' && cgst != null ? (parseFloat(subtotal) * parseFloat(cgst)) / 100 : 0\n  if (cgstval == 0)\n    cgst = 0\n\n  cgstval = cgstval.toFixed(2)\n  let sgstval = sgst != '' && sgst != null ? (parseFloat(subtotal) * parseFloat(sgst)) / 100 : 0\n  if (sgstval == 0)\n    sgst = 0\n  sgstval = sgstval.toFixed(2)\n  let igstval = igst != '' && igst != null ? (parseFloat(subtotal) * parseFloat(igst)) / 100 : 0\n  if (igstval == 0)\n    igst = 0\n  igstval = igstval.toFixed(2)\n\n\n  total = parseFloat(subtotal) + parseFloat(cgstval) + parseFloat(sgstval) + parseFloat(igstval)\n  total = total.toFixed(2)\n\n  roundoffamount = roundoffamount != '' && roundoffamount != null ? parseFloat(roundoffamount) : 0\n  roundoffamount = roundoffamount.toFixed(2)\n\n  grandtotal = parseFloat(total) + parseFloat(roundoffamount)\n  grandtotal = grandtotal.toFixed(2)\n\n  RsPaise(grandtotal)\n\n  console.log(amountinwords)\n  // const grandtotal = taxpercentage * totalrs;\n  //   const selectecontactlist = invoicelistvalues.selectedcontactlist[0]\n  //     ? invoicelistvalues.selectedcontactlist[0].suppliercontactname\n  //     : \"\";\n  const cond_data = data_cond;\n  const tableComponentTwo = [];\n  for (let i = 0; i < data.length; i++) {\n    if (data[i] && data[i + 1]) {\n      tableComponentTwo.push([data[i], data[i + 1]]);\n    } else {\n      tableComponentTwo.push([data[i]]);\n    }\n    ++i;\n  }\n  const datalength = tableComponentTwo.length - 1;\n  const tableComponent = tableComponentTwo.map((data, i) => {\n    if (i >= 1 && i === datalength) {\n      return (\n        <Page size='A4' style={styles.pagepadding} wrap key={i}>\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={data}\n          >\n            <TableHeader\n              textAlign={'center'}\n              style={{ backgroundColor: 'tomato' }}\n            >\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Text style={styles.headerfont}>SL No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont}>Particular</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Weight Each kgs(+/-5%)</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Rate/{'\\n'}Each RS</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Dist %</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>\n                  After Dist Rate/Each{'\\n'}Rs\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Qty</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Total RS</Text>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell\n                weighting={0.08}\n                style={styles.padding}\n                getContent={r => r.slno}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.6}\n                getContent={r => {\n                  return (\n                    <View>\n                      <Text>{r.itemname + '\\n'}</Text>\n                      <Text>{'\\n'}</Text>\n                      <Image\n                        src={`${process.env.REACT_APP_BASE_URL}/${r.itemimage}`}\n                      />\n                      <Text>{'\\n'}</Text>\n                    </View>\n                  );\n                }}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => {\n                  return r.weighteach;\n                }}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.costperunit} />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.quantity} />\n              <DataTableCell weighting={0.2} getContent={r => r.totalcost} />\n            </TableBody>\n          </Table>\n          <Table style={styles.section}>\n            <TableHeader style={styles.section}>\n              <TableCell weighting={1.087} style={styles.section}>\n                <Text style={styles.headerfont2}>Taxable Amount</Text>\n              </TableCell>\n              <TableCell weighting={0.13} style={styles.section}>\n                <Text style={{ textAlign: 'center' }}>{taxableAmount}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1.087}>\n                <Text style={styles.headerfont2}>GST %</Text>\n              </TableCell>\n              <TableCell weighting={0.13}>\n                <Text style={{ textAlign: 'center' }}>{tax}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1.087}>\n                <Text style={styles.headerfont2}>Grand Total Rs</Text>\n              </TableCell>\n              <TableCell weighting={0.13}>\n                <Text style={{ textAlign: 'center' }}>\n                  {/* {(grandtotal + +totalrs).toFixed(2)} */}\n                  23131\n                </Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n        </Page>\n      );\n    } else if (i >= 1) {\n      return (\n        <Page size='A4' style={styles.pagepadding} wrap key={i}>\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={data}\n          >\n            <TableHeader\n              textAlign={'center'}\n              style={{ backgroundColor: 'tomato' }}\n            >\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Text style={styles.headerfont}>SL No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont}>Particular</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Weight Each kgs(+/-3%)</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Rate/{'\\n'}Each RS</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Dist %</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>\n                  After Dist Rate/Each{'\\n'}Rs\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Qty</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Total RS</Text>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell\n                weighting={0.08}\n                style={styles.padding}\n                getContent={r => r.slno}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.6}\n                getContent={r => {\n                  return (\n                    <View>\n                      <Text>{r.itemname + '\\n'}</Text>\n                      <Text>{'\\n'}</Text>\n                      <Image\n                        src={`${process.env.REACT_APP_BASE_URL}/${r.itemimage}`}\n                      />\n                      <Text>{'\\n'}</Text>\n                    </View>\n                  );\n                }}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.weighteach} />\n              <DataTableCell weighting={0.2} getContent={r => r.costperunit} />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.quantity} />\n              <DataTableCell weighting={0.2} getContent={r => r.totalcost} />\n            </TableBody>\n          </Table>\n        </Page>\n      );\n    } else if (i < 1 && i === datalength) {\n      return (\n        <View>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1}>\n                <Text style={styles.descriptionText}>\n                  {'\\n'}\n                  Range : Yelahanka -I Basaveshwara Building, Cresent Road (Opp Mallige Nursing Home) - Bangalore, Karnataka {\n                    '\\n'\n                  }{' '}\n                  Division : Bangalore-C Basaveshwara Building, Cresent Road (Opp Mallige Nursing Home) - Bangalore, Karnataka {\n                    '\\n'\n                  }{' '}\n                  Commissionerte : Obadenahalli Industrial Area, {'\\n'} Doddabalapura,\n                  Bangalore Rural District PIN : 561203\n                  {'\\n'}\n                  {'\\n'}\n                </Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.5}>\n                <Text style={styles.headerfontleft} textAlign={'left'}>\n                  Invoice No: {invoicenumber}\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Text style={[styles.headerfont, { textAlign: 'center' }]}>{date}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <View style={styles.row}>\n            <View style={styles.column}>\n              <Table>\n                <TableHeader>\n                  <TableCell weighting={1}>\n                    <Text style={styles.billingaddress}>\n                      Billing To {'\\n'}\n                      {billingaddress}\n                      {'\\n'}\n          \n                      GST No: {customergstnumber}\n                    </Text>\n                  </TableCell>\n                </TableHeader>\n                >\n              </Table>\n            </View>\n            <View style={styles.column}>\n              <Table>\n                <TableHeader>\n                  <TableCell weighting={1}>\n                    <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>\n                            Delivery Challan No:\n                          </Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                            {deliverychallannumber}\n                          </Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table>\n                    <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>Date</Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont, { textAlign: 'center' }]}>{date}</Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table>\n                    <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>\n                            Purchase Order No:\n                          </Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                            {purchaseordernumber}\n                          </Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table>\n                    {/* <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>Date:</Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                            {purchaseorderdate}\n                          </Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table> */}\n                  </TableCell>\n                </TableHeader>\n              </Table>\n            </View>\n          </View>\n          {/* Shipping Address */}\n          <View style={styles.row}>\n            <View style={styles.column}>\n              <Table>\n                <TableHeader>\n                  <TableCell weighting={1}>\n                    <Text style={styles.shippingaddress}>\n                      Delivery To {'\\n'}\n                      {deliveryaddress}\n                      {'\\n'}\n                      GST No. {customergstnumber}\n                    </Text>\n                  </TableCell>\n                </TableHeader>\n                >\n              </Table>\n            </View>\n            <View style={styles.column}>\n              <Table>\n                <TableHeader>\n                  <TableCell weighting={1}>\n                    <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>Vehicle No:</Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                            {taxableAmount}\n                          </Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table>\n                    <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>HSN Code</Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont, { textAlign: 'center' }]}>{date}</Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table>\n                    <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>\n                            Vendor Code No:\n                          </Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                            {vendorcode}\n                          </Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table>\n                    <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>SAC Code:</Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                            {vendorcode}\n                          </Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table>\n                    {/* <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>\n                            Time of invoice:\n                          </Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont, { textAlign: 'center' }]}></Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table> */}\n                    <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>\n                            Date of invoice:\n                          </Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                            {invoicedate}\n                          </Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table>\n                    {/* <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>\n                            Description of Excisible Goods:\n                          </Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                            {goodsDescription}\n                          </Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table> */}\n                  </TableCell>\n                </TableHeader>\n              </Table>\n            </View>\n          </View>\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={data}\n            key={i}\n          >\n            <TableHeader\n              textAlign={'center'}\n              style={{ backgroundColor: 'tomato' }}\n            >\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Text style={styles.headerfont}>SL No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont}>Particular</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Weight Each kgs(+/-3%)</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Rate/{'\\n'}Each RS</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Dist %</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>\n                  After Dist Rate/Each{'\\n'}Rs\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Qty</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Total RS</Text>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell\n                weighting={0.08}\n                style={styles.padding}\n                getContent={r => r.slno}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.6}\n                getContent={r => {\n                  return (\n                    <View>\n                      <Text>{r.itemname + '\\n'}</Text>\n                      <Text>{'\\n'}</Text>\n                      <Image\n                        src={`${process.env.REACT_APP_BASE_URL}/${r.itemimage}`}\n                      />\n                      <Text>{'\\n'}</Text>\n                    </View>\n                  );\n                }}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.weighteach} />\n              <DataTableCell weighting={0.2} getContent={r => r.costperunit} />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.quantity} />\n              <DataTableCell weighting={0.2} getContent={r => r.totalcost} />\n            </TableBody>\n          </Table>\n          {/* Three divs for remarks, tax details and amoun */}\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.5}>\n                <Text style={{ fontSize: 10 }}>\n                  Remarks\n                  {'\\n'}\n                  {'\\n'}\n\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.73}>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont2}>Taxable Amount</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={{ textAlign: 'center' }}>\n                        {taxableAmount}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont2}>Freight Charges RS</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={{ textAlign: 'center' }}>\n                        {freightcharges}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont2}>Sub Total Rs</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={[styles.headerfont, { textAlign: 'center' }]}>{subtotal}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont2}>CGST @ 9%</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={[styles.headerfont, { textAlign: 'center' }]}>{cgst}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          {/* Two */}\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.5}>\n                <Text style={styles.headerfont2}>\n                  {'\\n'}\n                  {'\\n'}\n                  {'\\n'}\n                  {'\\n'}\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.73}>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont2}>SGST @ 9%</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={{ textAlign: 'center' }}>{sgst}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont2}>IGST @ 18%</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={{ textAlign: 'center' }}>{igst}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont2}>Total</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={{ textAlign: 'center' }}>{total}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          {/* Three */}\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.5}>\n                <Text style={styles.headerfont2}>\n                  {'\\n'}\n                  {'\\n'}\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.73}>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont2}>Round Off</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={{ textAlign: 'center' }}>\n                        {roundoffamount}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont2}>Grand total</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={{ textAlign: 'center' }}>{grandtotal}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          {/* ends here */}\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1.087}>\n                <Text style={styles.descriptionText}>\n                  Certified that the particulars given above are true and the\n                  amount indicated represents the price actually charged and\n                  that there is no additional flow directly or indirectly from\n                  the buyer\n                </Text>\n              \n              </TableCell>\n            </TableHeader>\n          </Table>\n          <View style={styles.row}>\n            <View style={styles.column}>\n              <Table>\n                <TableHeader>\n                  <TableCell weighting={1}>\n                    <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                      Authentication\n                      {'\\n'}\n                      {'\\n'}\n                      {'\\n'}\n                      {'\\n'}\n                      E & O.E.\n                    </Text>\n                  </TableCell>\n                </TableHeader>\n                >\n              </Table>\n            </View>\n            <View style={styles.column}>\n              <Table>\n                <TableHeader>\n                  <TableCell weighting={1}>\n                    <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                      For PONDHAN SCAFFOLDING PVT LTD\n                      {'\\n'}\n                      {'\\n'}\n                      {'\\n'}\n                      {'\\n'}\n                      Authorised Signatories\n                    </Text>\n                  </TableCell>\n                </TableHeader>\n                >\n              </Table>\n            </View>\n            \n         \n\n\n          </View>\n        </View>\n      );\n    } else {\n      return (\n        <View>\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={data}\n            key={i}\n          >\n            <TableHeader textAlign={'center'} style={styles.tableheaderbgcolor}>\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Text style={styles.headerfont}>SL No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont}>Particular</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Weight Each kgs(+/-3%)</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Rate/{'\\n'}Each RS</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Dist %</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>\n                  After Dist Rate/Each{'\\n'}Rs\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Qty</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Total RS</Text>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell\n                weighting={0.08}\n                style={styles.padding}\n                getContent={r => <Small>{r.slno}</Small>}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.6}\n                getContent={r => {\n                  return (\n                    <View>\n                      <Text><Small>{r.itemname}</Small>{'\\n'}</Text>\n                      <Text>{'\\n'}</Text>\n                      <Image\n                        src={`${process.env.REACT_APP_BASE_URL}/${r.itemimage}`}\n                      />\n                      <Text>{'\\n'}</Text>\n                    </View>\n                  );\n                }}\n              />\n              <DataTableCell weighting={0.2} getContent={r => <Small>{r.weighteach}</Small>} />\n              <DataTableCell weighting={0.2} getContent={r => <Small>{r.costperunit}</Small>} />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => <Small>{r.itemdiscount.toString()}</Small>}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => <Small>{r.itemdiscount.toString()}</Small>}\n              />\n              <DataTableCell weighting={0.2} getContent={r => <Small>{r.quantity}</Small>} />\n              <DataTableCell weighting={0.2} getContent={r => <Small>{r.totalcost}</Small>} />\n            </TableBody>\n          </Table>\n        </View>\n      );\n    }\n  });\n\n  return (\n    <Document>\n      <Page size='A4' style={styles.pagepadding} wrap>\n        <View style={styles.invoice_header}>\n          <Image style={styles.logo} src={logo} />\n          <View style={{ flex: 1, paddingLeft: 25 }}>\n            <Text style={{ fontSize: 11, textAlign: 'right' }}>Original/Duplicate/Office Copy</Text>\n            <Text style={styles.headerwidth}>INVOICE</Text>\n            <Text style={{ fontSize: 8, marginTop: 8 }}>(Invoice for removal of Excisable goods from a Factory or Warehouse under Rule 11)</Text>\n            <Text style={[styles.headerwidthAddress, { marginTop: 4 }]}>Email: info@pondhan.com, Website: www.pondhan.com</Text>\n            <Text style={[styles.headerwidthAddress, { marginTop: 4 }]}>TIN No: 29710660725</Text>\n            <Text style={[styles.headerwidthAddress, { marginTop: 4 }]}>GSTIN:29AAGCP4018E1ZJ RCC No: U28110KA2012PTC062181</Text>\n           \n           \n          </View>\n        </View>\n        {/* <View style={styles.section}>\n          <Text style={styles.headerwidth}></Text>\n\n          <Text style={styles.headerwidthdate}>\n            Date:{invoicelistvalues.requestdeliverydate}\n          </Text>\n        </View> */}\n        <View>\n          {/*  style={styles.section} */}\n          <Table>\n            <TableHeader>\n              <TableCell weighting={0.9}>\n                <Text style={styles.descriptionText}>\n                Address:Plot no.40 & 41 (corner) Road,no.5, KIADB Obadenahalli Industrial Area,3rd phase Doddaballapura, {'\\n'} Bangalore Rural District-561203.\n\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.1} styles={{ flexDirection: 'row', justifyContent: 'center', alignItems: 'center' }}>\n                <Image style={styles.seal} src={seal} />\n              </TableCell>\n            </TableHeader>\n          </Table>\n          {/* <View style={{ borderLeftWidth: 1, borderRightWidth: 1, borderColor: 'black' }}>\n            <Text>Hello World!</Text>\n          </View> */}\n          \n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.5}>\n                <Text style={[styles.headerfontleft]} textAlign={'left'}>\n                  Invoice No: {invoicenumber}/2020-21\n                 \n                </Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Text style={[styles.headerfontleft, { textAlign: 'center', fontWeight: 'bold' }]}>\n                  {invoicedate}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n\n          \n          <Text> {'\\n'}</Text>\n          <Table>\n            <TableHeader>\n              <TableCell weighting={0.5}>\n                {/* <Table>\n                  <TableHeader>\n                    <TableCell weighting={1}>\n                      \n                    </TableCell>\n                  </TableHeader>\n                </Table> */}\n                <Text style={[styles.headerfont, { textAlign: 'center', marginTop: 5 }]}>\n                  Billing To\n                </Text>\n                <Text style={[styles.billingaddress]}>\n                  {customername}  {'\\n'}\n                  {billingaddress} {'\\n'}\n                  GST No: {customergstnumber}\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={0.5}>\n                      <Text style={styles.headerfont2}>\n                        Delivery Challan No:\n                          </Text>\n                    </TableCell>\n                    <TableCell weighting={0.5}>\n                      <Text style={[styles.headerfont]}>\n                        {deliverychallannumber}/2020-21\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={0.5}>\n                      <Text style={styles.headerfont2}>Delivery Challan Date</Text>\n                    </TableCell>\n                    <TableCell weighting={0.5}>\n                      <Text style={[styles.headerfont]}>{date}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={0.5}>\n                      <Text style={styles.headerfont2}>\n                        Purchase Order No:\n                          </Text>\n                    </TableCell>\n                    <TableCell weighting={0.5}>\n                      <Text style={[styles.headerfont]}>\n                        {purchaseordernumber}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={0.5}>\n                      <Text style={styles.headerfont2}>\n                        Purchase Order Date:\n                          </Text>\n                    </TableCell>\n                    <TableCell weighting={0.5}>\n                      <Text style={[styles.headerfont]}>\n                        {podate}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n\n                \n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={0.5}>\n                      <Text style={styles.headerfont2}>\n                        Vendor Code No:\n                          </Text>\n                    </TableCell>\n                    <TableCell weighting={0.5}>\n                      <Text style={[styles.headerfont]}>\n                        {vendorcode}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                {/* <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>Date:</Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont]}>\n                            {purchaseorderdate}\n                          </Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table> */}\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <Text> {'\\n'}</Text>\n          <Table styles={{'borderWidth':'0'}}>\n            <TableHeader>\n              <TableCell weighting={0.5}>\n                {/* <Table>\n                  <TableHeader>\n                    <TableCell weighting={1}>\n                      \n                    </TableCell>\n                  </TableHeader>\n                </Table> */}\n                <Text style={[styles.headerfont, { textAlign: 'center', marginTop: 5 }]}>\n                  Delivery To\n                </Text>\n                <Text style={[styles.shippingaddress]}>\n               \n                  {deliveryaddress} \n                </Text>\n              </TableCell>\n\n              <TableCell weighting={0.5} >\n                <Table style={styles.section} style={{borderWidth: 0}}>\n                  <TableHeader>\n                    <TableCell weighting={0.5}>\n                      <Text style={styles.headerfont2}>Vehicle No:</Text>\n                    </TableCell>\n                    <TableCell weighting={0.5}>\n                      <Text style={[styles.headerfont]}>\n                        {vehiclenumber}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={0.5}>\n                      <Text style={styles.headerfont2}>HSN Code</Text>\n                    </TableCell>\n                    <TableCell weighting={0.5}>\n                      <Text style={[styles.headerfont]}>{hsncode}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={0.5}>\n                      <Text style={styles.headerfont2}>SAC Code:</Text>\n                    </TableCell>\n                    <TableCell weighting={0.5}>\n                      <Text style={[styles.headerfont]}>\n                        {saccode}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                {/* <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>\n                            Time of invoice:\n                          </Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont]}></Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table> */}\n                {/* <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>\n                            Date of invoice:\n                          </Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont]}>\n                            {invoicedate}\n                          </Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table> */}\n                {/* <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>\n                            Description of Excisible Goods:\n                          </Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont]}>\n                            {goodsDescription}\n                          </Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table> */}\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <Text> {'\\n'}</Text>\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={data}\n          >\n            <TableHeader\n              textAlign={'center'}\n              style={{ backgroundColor: 'tomato' }}\n            >\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Small>SL No</Small>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                {/* style={styles.headerfont} */}\n                <Description >Description</Description>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Small>UOM</Small>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Small>Qty</Small>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Small>Rate</Small>\n              </TableCell>\n              {/* <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Dist %</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>\n                  After Dist Rate/Each{'\\n'}Rs\n                </Text>\n              </TableCell> */}\n\n              <TableCell weighting={0.2}>\n                <Small>Amount</Small>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell weighting={0.08} getContent={r => <Small>{r.slno}</Small>} />\n              <DataTableCell weighting={0.6} getContent={r => <Description>{r.itemname}</Description>} />\n              <DataTableCell weighting={0.2} getContent={r => <Small>{r.weighteach}</Small>} />\n              <DataTableCell weighting={0.2} getContent={r => <Small>{r.quantity}</Small>} />\n              <DataTableCell weighting={0.2} getContent={r => <Small>{r.costperunit}</Small>} />\n              {/* <DataTableCell weighting={0.2} getContent={r => <Small>{r.itemdiscount.toString()}</Small>} />\n              <DataTableCell weighting={0.2} getContent={r => <Small>{r.itemdiscount.toString()}</Small>} />\n            */}\n              <DataTableCell weighting={0.2} getContent={r => <Small>{r.totalcost}</Small>} />\n            </TableBody>\n          </Table>\n          <Text> {'\\n'}</Text>\n          {/* Three divs for remarks, tax details and amount */}\n          </View>\n          </Page>\n          <Page size='A4' style={styles.pagepadding} wrap>\n          <Table style={[styles.section,styles.nobordertable]}>\n            <TableHeader>\n              <TableCell weighting={0.5}>\n                <Text style={styles.headerfont3}>\n                  Remarks:\n                  {'\\n'}\n                  {'\\n'}\n                  {remarks}\n                  {'\\n'}\n                  {'\\n'}\n                </Text>\n                <Text style={styles.headerfont3}>{amountinwords}</Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Table style={[styles.section,styles.nobordertable]}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont4}>Taxable Amount</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                        {taxableAmount}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont4}>Freight,w.s,loading and handling charges</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                        {freightcharges}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont4}>Sub Total</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={[styles.headerfont, { textAlign: 'center' }]}>{subtotal}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n\n                  <Table style={styles.section}>\n                    <TableHeader>\n                      <TableCell weighting={1.087}>\n                        <Text style={styles.headerfont4}>CGST@{cgst}%</Text>\n                      </TableCell>\n                      <TableCell weighting={0.45}>\n                        <Text style={[styles.headerfont, { textAlign: 'center' }]}>{cgstval}</Text>\n                      </TableCell>\n                    </TableHeader>\n                  </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont4}>SGST@{sgst}%</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={[styles.headerfont, { textAlign: 'center' }]}>{sgstval}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont4}>IGST@{igst}%</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={[styles.headerfont, { textAlign: 'center' }]}>{igstval}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={[styles.section,styles.nobordertable]}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont4}>Total</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={[styles.headerfont, { textAlign: 'center' }]}>{total}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n\n                      <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont4}>Round Off</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                        {roundoffamount}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont4}>Grand Total</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={[styles.headerfont, { textAlign: 'center' }]}>{grandtotal}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n            \n              </TableCell>\n            </TableHeader>\n          </Table>\n          \n          {/* Two */}\n          {/* <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.5}>\n                <Text style={styles.headerfont3}>\n                  {'\\n'}\n                  {'\\n'}\n\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n      \n              </TableCell>\n            </TableHeader>\n          </Table> */}\n          {/* Three */}\n          {/* <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.5}>\n                <Text style={styles.headerfont3}>\n                {amountinwords}\n                </Text>\n              </TableCell>\n   \n            </TableHeader>\n          </Table> */}\n          {/* ends here */}\n          <Text> {'\\n'}</Text>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1.087}>\n                <Text style={styles.descriptionText}>\n                  Certified that the particulars given above are true and the\n                  amount indicated represents the price actually charged and\n                  that there is no additional flow directly or indirectly from\n                  the buyer\n                </Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          {/* <Text>\n            {'\\n'}\n            {'\\n'}\n          </Text> */}\n          <View style={styles.row}>\n            <View style={styles.column}>\n              <Table>\n                <TableHeader>\n                  <TableCell weighting={1}>\n                    <Text style={[styles.headerfont, { textAlign: 'center', padding: 5 }]}>\n                      <SmallBold>Authentication</SmallBold>\n                      {'\\n'}\n                      {'\\n'}\n                      {'\\n'}\n                      {'\\n'}\n                      {'\\n'}\n                      {'\\n'}\n                      E & O.E.\n                    </Text>\n                  </TableCell>\n                </TableHeader>\n                {/* > */}\n              </Table>\n            </View>\n            <View style={styles.column}>\n              <Table>\n                <TableHeader>\n                  <TableCell weighting={1}>\n                    <Text style={[styles.headerfont, { textAlign: 'center', padding: 5 }]}>\n                      <SmallBold>For PONDHAN SCAFFOLDING PVT LTD</SmallBold>\n                      {'\\n'}\n                      {'\\n'}\n                      {'\\n'}\n                      {'\\n'}\n                      {'\\n'}\n                      {'\\n'}\n                      <SmallBold>Authorised Signatories</SmallBold>\n                    </Text>\n                  </TableCell>\n                </TableHeader>\n              </Table>\n          \n            </View>\n\n       \n\n          </View>\n\n          <View style={styles.row}>\n            \n              <View>\n              <Text\n                 style={[styles.headerfont, { color: 'red' }]}\n                >\n                 {'\\n'} {'\\n'} \n                 Note: Any legal matter should be under Bengaluru Jurisdiction </Text>\n              </View>\n            \n          </View>\n          </Page>\n\n     \n     \n    </Document >\n  );\n};\n\nexport default MyDocument;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport ReactPDF from \"@react-pdf/renderer\";\nimport moment from \"moment\";\nimport { PDFViewer } from \"@react-pdf/renderer\";\nimport { getinvoice } from '../../../../actions/Invoice';\nimport MyDocument from \"./Component\";\nimport logo from \"../../../../Images/logo.png\";\nimport \"./ViewInvoice\";\n\nclass ViewInvoicePdf extends React.Component {\n  state = {\n    invoicelistvalues: {},\n    status: false,\n    link: \"\"\n  };\n  componentDidMount() {\n    this.props.getinvoice();\n    const quotationid = this.props.match.params.id;\n    const invoicelistvalues = this.props.invoicelistvalues[quotationid];\n    invoicelistvalues.requestdeliverydate = moment(\n      invoicelistvalues.date\n    ).format(\"DD MMM, YYYY\");\n    invoicelistvalues.addeditemlist = invoicelistvalues.addeditemlist.map(\n      (itemlist, i) => {\n        return {\n          slno: (i + 1).toString(),\n          itemname: itemlist.itemdescription ? itemlist.itemdescription : \"\",\n          weighteach: itemlist.itemuom\n            ? itemlist.itemuom.uomname\n            : \"\",\n          itemimage: itemlist.id.masteritemimage\n            ? itemlist.id.masteritemimage\n            : \"\",\n          quantity: itemlist.quantity ? itemlist.quantity.toString() : \"\",\n          itemdiscount: itemlist.itemdiscount ? \n              itemlist.itemdiscount.toString()\n            : \"0\",\n          costperunit: itemlist.costperunit\n            ? itemlist.costperunit.toString()\n            : \"\",\n          totalcost: itemlist.totalcost\n            ? itemlist.totalcost.toFixed(2).toString()\n            : \"\"\n        };\n      }\n    );\n    const customerid = invoicelistvalues.customerid;\n    const customernumber = invoicelistvalues.customernumber;\n    const customername = invoicelistvalues.customername;\n    console.log(\"--COMPONENTDIDMOUNT--\");\n    console.log(invoicelistvalues);\n    setTimeout(() => {\n      this.setState({\n        ...this.state.purchaseorderlistvalues,\n        invoicelistvalues,\n        status: true\n      });\n    },2000);\n   \n    this.dynamicClick();\n  }\n  dynamicClick() {\n    if (document.getElementsByClassName(\"pdf-class\")) {\n      if (\n        document.getElementsByClassName(\"pdf-class\")[0].children.length <= 1\n      ) {\n        setTimeout(() => {\n          this.dynamicClick();\n        }, 7000);\n      } else if (\n        document.getElementsByClassName(\"pdf-class\")[0].children.length > 1\n      ) {\n        this.setState({\n          link: document.getElementsByClassName(\"pdf-class\")[0].children[1].src\n          // status : undefined,\n        },()=>{\n          setTimeout(() => {\n            document.getElementById(\"D1\").click();\n            this.props.history.push(\"/invoicelist\");\n          }, 300);\n        });\n  \n      }\n    } else {\n    }\n  }\n  render() {\n    const data_cond = [\n      {\n        slno: \"1\",\n        title: \"Invoices\",\n        value: \"2 copies Invoices (original & duplicate)\"\n      },\n      {\n        slno: \"2\",\n        title: \"Tax & Duty\",\n        value: \"Included\"\n      },\n      {\n        slno: \"3\",\n        title: \"Payment Schedule\",\n        value: \"15 days from the date of delivery\"\n      },\n      {\n        slno: \"4\",\n        title: \"Delivery Schedule\",\n        value: \"Immediately\"\n      },\n      {\n        slno: \"5\",\n        title: \"Billing address & GST No\",\n        value:\n          \"M/s Pondhan Scaffolding Pvt Ltd \\n Plot no. 40/41, Road no.5, Obedanahalli,\"\n      },\n      {\n        slno: \"6\",\n        title: \"Delivery Address\",\n        value: \"M/s Pondhan Scaffolding Pvt Ltd\"\n      }\n    ];\n    const { status, invoicelistvalues,link } = this.state;\n    console.log(this.state)\n    return (\n      <div>\n        <div className=\"pdf-class\">\n          Downloading file.Please wait.\n          {/* {!status && (\n          <h1 style={{ 'position': 'absolute','left': '50%','top': '50%','transform': 'translate(-50%, -50%);'}}>Downloading file.Please wait.</h1>\n        )} */}\n          <a href={link} download id=\"D1\"></a>\n          {status && (\n            <PDFViewer>\n              <MyDocument\n                invoicelistvalues={this.state.invoicelistvalues}\n                data_cond={data_cond}\n                logo={logo}\n              />\n            </PDFViewer>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\nfunction mapStateToProps(state) {\n  return {\n    invoicelistvalues: state.invoicelistvalues\n  };\n}\nexport default connect(\n  mapStateToProps,\n  { getinvoice }\n)(ViewInvoicePdf);\n","\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { getproformainvoice } from '../../../../actions/Invoice';\nimport { Button, Alert } from 'reactstrap';\nimport DataTable from '../../../../Components/Table/DatatablePage';\nimport CustomLoader from '../../../../Components/loader/loader';\nimport axios from 'axios';\n\nimport {\n  getMasterItemList,\n  getMasterItemTypes\n} from \"../../../../actions/Transaction\";\n\nimport { getUomList } from \"../../../../actions/uom\";\nimport { getCustomerList } from \"../../../../actions/customerContact\";\n\n\nimport { getChallan } from '../../../../actions/challan';\nimport { tr } from 'date-fns/esm/locale';\n\nclass ViewProformaInvoice extends React.Component {\n  state = {\n    count: 0,\n    loading: true,\n    success:false,\n    invoiceid:'',\n    invoicelistvalues: []\n  };\n  componentDidMount() {\n\n\n    this.props.getCustomerList();\n    this.props.getMasterItemTypes();\n    this.props.getMasterItemList();\n\n    this.props.getUomList();\n    this.getProformaInvoice();\n    this.props.getChallan();\n  }\n\n\n  getProformaInvoice(){\n     axios\n        .get(`${process.env.REACT_APP_BASE_URL}/proformainvoice/getproformainvoice`)\n        .then(res => {\n         console.log(res)\n         this.dataHandler(false);\n         if (res.data.invoicelist.invoicedata.length > 0) {\n           let invoicelist = res.data.invoicelist.invoicedata;\n           //invoicelist= invoicelist.sort((a, b) => b.invoicenumber.toLowerCase().localeCompare(a.invoicenumber.toLowerCase()));\n           invoicelist.sort(function(a, b){\n            return parseInt(b.invoicenumber) - parseInt(a.invoicenumber);\n          });\n          const proformainvoicelistvalues = invoicelist.map(quotationvalue => {\n            return {\n              invoicenumber: quotationvalue.invoicenumber,\n              customername: quotationvalue.customername,\n              customernumber: quotationvalue.customernumber,\n              customercontactnumber: quotationvalue.customercontactnumber,\n      \n              view: (\n                <div className=\"actionbuttons\">\n                  <Button\n                    Label\n                    color='primary'\n                    onClick={() => {\n                      this.updateButton(quotationvalue);\n                    }}\n                  >\n                    Print\n                  </Button>\n                  <Button\n                    Label\n                    color='primary'\n                    onClick={() => {\n                      this.updateinvoice(quotationvalue._id);\n                    }}\n                  >\n                    Edit\n                  </Button>\n                  </div>\n              )\n            };\n          });\n          this.setState({ ...this.state, proformainvoicelistvalues });\n         }\n        },error =>{\n          this.dataHandler(false)\n         \n        });\n  }\n\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n\n\n  updateButton = obj => {\n    sessionStorage.setItem(\"pformadata\",JSON.stringify(obj))\n    let path = `/view_proformainvoicepdf/123`;\n    this.props.history.push(path);\n  };\n\n  originalInvoice = () =>{\n    let path = `/view_invoicepdf/${this.state.invoiceid}`;\n    this.props.history.push(path);\n  }\n\n  profomaInvoice = () =>{\n    let path = `/view_proformainvoicepdf/${this.state.invoiceid}`;\n    this.props.history.push(path);\n  }\n\n  updateinvoice = id => {\n    // let path = `/view_invoicepdf/${id}`;\n    // window.open(path, '_blank');\n    let path = `/editproformainvoice/${id}`;\n    //window.open(path, \"_blank\");\n    this.props.history.push(path);\n  };\n\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n\n  render() {\n    const { loading, count, proformainvoicelistvalues,success } = this.state;\n    console.log(proformainvoicelistvalues)\n    const columnvalue = [\n      {\n        label: 'Invoice Number',\n        field: 'invoicenumber',\n        sort: 'asc',\n        width: 40\n      },\n      {\n        label: 'Customer Name',\n        field: 'customername',\n        sort: 'asc',\n        width: 40\n      },\n      {\n        label: 'Customer Number',\n        field: 'customernumber',\n        sort: 'asc',\n        width: 40\n      },\n\n      {\n        label: 'Contact Number',\n        field: 'customercontactnumber',\n        sort: 'asc',\n        width: 40\n      },\n      {\n        label: 'Print/Edit',\n        field: 'view',\n        sort: 'asc',\n        width: 40\n      }\n    ];\n    return (\n      <div className='container mg-t-20'>\n\n          {!!success ? (\n            <Modal\n              isOpen={success}\n              toggle={this.toggle}\n              className={this.props.className}\n            >\n              <ModalHeader toggle={this.toggle}>Invoice</ModalHeader>\n              <ModalBody style={{'textAlign': 'center'}}>Please select type of invoice</ModalBody>\n              <ModalFooter>\n                <Button color=\"primary\" onClick={this.originalInvoice}>\n                  Original Invoice\n                </Button>\n                <Button color=\"primary\" onClick={this.profomaInvoice}>\n                  Proforma Invoice\n                </Button>\n              </ModalFooter>\n            </Modal>\n          ) : null}\n\n        {loading ? <CustomLoader /> : null}\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to=\"/admin_dashboard\">Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/transaction_page\">Transactions</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/invoice\">Proforma Invoice</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>List</BreadcrumbItem>\n        </Breadcrumb>\n        <div>\n          <DataTable\n            rowvalues={proformainvoicelistvalues}\n            columnvalue={columnvalue}\n            className=\"invoicelist\" />\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    proformainvoicelistvalues: state.proformainvoicelistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  {\n    getMasterItemList,\n    getMasterItemTypes,\n    getUomList,\n    getCustomerList,\n    getproformainvoice,\n    getChallan\n  }\n)(ViewProformaInvoice);\n","import {\n  DataTableCell, Table, TableBody, TableCell, TableHeader\n} from '@david.kucsai/react-pdf-table';\nimport {\n  Document, Image, Page, StyleSheet, Text,\n  View\n} from '@react-pdf/renderer';\nimport moment from 'moment';\nimport React from 'react';\nimport logo from '../../../../Images/logo.png';\nimport seal from '../../../../Images/seal.jpg';\nimport sign from '../../../../Images/sign.jpg';\nimport './ViewInvoice.scss';\n\n// Create styles\nconst styles = StyleSheet.create({\n  textcenter: { textAlign: 'center' },\n  textright: { textAlign: 'right' },\n  textleft: { textAlign: 'left' },\n  paddingleft: { paddingLeft: 5 },\n  margin: {\n    margin: 5\n  },\n  \n  pagepadding: {\n    padding:5,\n    paddingLeft:10,\n    paddingRight:10,\n  },\n  section: {\n    // position: 'relative',\n    // display: 'flex',\n    // flexDirection: 'row',\n    // overflow: 'hidden'\n  },\n  section_column: {\n    position: 'relative',\n    display: 'flex',\n    flexDirection: 'column',\n    overflow: 'hidden'\n  },\n  myHeight: {\n    height: '100px'\n  },\n  headerfont: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    padding: 5\n  },\n  descriptionText: {\n    fontSize: 10,\n    fontWeight: 'normal',\n    padding: 8,\n    wordWrap: 'break-word'\n  },\n  headerfont2: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    padding: 5\n  },\n  headerfont4: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    textAlign: 'left',\n    paddingLeft: 5,\n    paddingTop: 5,\n    paddingBottom: 5,\n  },\n  headerfont5: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    paddingRight: 5\n  },\n  headerfont3: {\n    fontSize: 10,\n    paddingLeft: 8\n  },\n  headerfontleft: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    textAlign: 'left',\n    padding: 5\n  },\n  billingaddress: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    textAlign: 'left',\n    // height: 70,\n    // maxWidth: 200,\n    wordWrap: 'break-word',\n    padding: 5\n  },\n  shippingaddress: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    textAlign: 'left',\n    // height: 130,\n    // maxWidth: 200,\n    wordWrap: 'break-word',\n    padding: 5\n  },\n  row: {\n    flexDirection: 'row',\n    // justifyContent: 'space-between'\n  },\n  column: {\n    width: '50%'\n    // flex: 1\n  },\n  headerwidth: {\n    // width: 210,\n    // textAlign: 'center',\n    marginLeft: 75,\n    fontWeight: 900\n  },\n  headerwidthdate: {\n    width: 210,\n    paddingTop: 23,\n    fontSize: 10\n  },\n  headerwidthlogo: {\n    width: 350,\n    fontSize: 10\n  },\n  logo: {\n    width: 225,\n    height: 90\n  },\n  seal: {\n    width: 50,\n    height: 50\n  },\n  headerwidthAddress: {\n    fontSize: 10\n  },\n  refstyle: {\n    paddingBottom: 20,\n    fontSize: 10\n  },\n  headerpadding: {\n    padding: 20\n  },\n  flexgrow: {\n    flexGrow: 1\n  },\n  fontsize18: {\n    fontSize: 10\n  },\n  kindattend: {\n    paddingTop: 15,\n    fontSize: 10\n  },\n  yourref: {\n    fontSize: 13,\n    paddingBottom: 10\n  },\n  main: {\n    fontSize: 10\n  },\n  tableheaderbgcolor: {\n    backgroundColor: 'red',\n    color: 'red',\n    background: 'red'\n  },\n  footerfixed: {\n    position: 'absolute',\n    bottom: 0,\n    width: '100%'\n  },\n  invoice_header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  }\n});\n\nconst Small = ({ children }) => {\n  return (\n    <Text style={{ fontSize: 10, padding: 5 }}>{children}</Text>\n  )\n}\n\nconst Description = ({ children }) => {\n  return (\n    <Text style={{\n      fontSize: 10,\n      padding: 5,\n      wordWrap: 'break-word',\n      paddingRight: 16,\n      textAlign: 'left'\n    }}>{children}</Text>\n  )\n}\n\nconst SmallBold = ({ children }) => {\n  return (\n    <Text style={{ fontSize: 10, padding: 5, fontWeight: 'bold' }}>{children}</Text>\n  )\n}\n\n\n// Create Document Component\n\nconst MyDocument2 = ({ invoicelistvalues, data_cond }) => {\n  let amountinwords = ''\n  const financialYear = invoicelistvalues.financialyear;\n  let Rs = function (amount) {\n    var words = new Array();\n    words[0] = 'Zero'; words[1] = 'One'; words[2] = 'Two'; words[3] = 'Three'; words[4] = 'Four'; words[5] = 'Five'; words[6] = 'Six'; words[7] = 'Seven'; words[8] = 'Eight'; words[9] = 'Nine'; words[10] = 'Ten'; words[11] = 'Eleven'; words[12] = 'Twelve'; words[13] = 'Thirteen'; words[14] = 'Fourteen'; words[15] = 'Fifteen'; words[16] = 'Sixteen'; words[17] = 'Seventeen'; words[18] = 'Eighteen'; words[19] = 'Nineteen'; words[20] = 'Twenty'; words[30] = 'Thirty'; words[40] = 'Forty'; words[50] = 'Fifty'; words[60] = 'Sixty'; words[70] = 'Seventy'; words[80] = 'Eighty'; words[90] = 'Ninety'; var op;\n    amount = amount.toString();\n    var atemp = amount.split(\".\");\n    var number = atemp[0].split(\",\").join(\"\");\n    var n_length = number.length;\n    var words_string = \"\";\n    if (n_length <= 9) {\n      var n_array = new Array(0, 0, 0, 0, 0, 0, 0, 0, 0);\n      var received_n_array = new Array();\n      for (var i = 0; i < n_length; i++) {\n        received_n_array[i] = number.substr(i, 1);\n      }\n      for (var i = 9 - n_length, j = 0; i < 9; i++ , j++) {\n        n_array[i] = received_n_array[j];\n      }\n      for (var i = 0, j = 1; i < 9; i++ , j++) {\n        if (i == 0 || i == 2 || i == 4 || i == 7) {\n          if (n_array[i] == 1) {\n            n_array[j] = 10 + parseInt(n_array[j]);\n            n_array[i] = 0;\n          }\n        }\n      }\n      var value = \"\";\n      for (var i = 0; i < 9; i++) {\n        if (i == 0 || i == 2 || i == 4 || i == 7) {\n          value = n_array[i] * 10;\n        } else {\n          value = n_array[i];\n        }\n        if (value != 0) {\n          words_string += words[value] + \" \";\n        }\n        if ((i == 1 && value != 0) || (i == 0 && value != 0 && n_array[i + 1] == 0)) {\n          words_string += \"Crores \";\n        }\n        if ((i == 3 && value != 0) || (i == 2 && value != 0 && n_array[i + 1] == 0)) {\n          words_string += \"Lakhs \";\n        }\n        if ((i == 5 && value != 0) || (i == 4 && value != 0 && n_array[i + 1] == 0)) {\n          words_string += \"Thousand \";\n        }\n        if (i == 6 && value != 0 && (n_array[i + 1] != 0 && n_array[i + 2] != 0)) {\n          words_string += \"Hundred and \";\n        } else if (i == 6 && value != 0) {\n          words_string += \"Hundred \";\n        }\n      }\n      words_string = words_string.split(\" \").join(\" \");\n    }\n    return words_string;\n  }\n\n  let RsPaise = function (n) {\n    var op;\n    var nums = n.toString().split('.')\n    var whole = Rs(nums[0])\n    if (nums[1] == null) nums[1] = 0;\n    if (nums[1].length == 1) nums[1] = nums[1] + '0';\n    if (nums[1].length > 2) { nums[1] = nums[1].substring(2, nums[1].length - 1) }\n    if (nums.length == 2) {\n      if (nums[0] <= 9) { nums[0] = nums[0] * 10 } else { nums[0] = nums[0] };\n      var fraction = Rs(nums[1])\n      if (whole == '' && fraction == '') { op = 'Zero only'; }\n      if (whole == '' && fraction != '') { op = 'paise ' + fraction + ' only'; }\n      if (whole != '' && fraction == '') { op = 'INR: ' + whole + ' only'; }\n      if (whole != '' && fraction != '') { op = 'INR: ' + whole + 'and ' + fraction + ' paise only'; }\n      amountinwords = op\n    }\n  }\n\n\n\n  invoicelistvalues['total'] = Number(invoicelistvalues['total']).toFixed(2)\n  console.log(JSON.stringify(invoicelistvalues));\n  const data = invoicelistvalues.addeditemlist;\n  console.log('data');\n  console.log(data);\n  const totalrs = invoicelistvalues.totalvalue\n    ? invoicelistvalues.totalvalue\n    : '';\n  let taxableAmount = parseFloat(invoicelistvalues.taxableamount)\n  taxableAmount = taxableAmount.toFixed(2)\n  const date = moment(invoicelistvalues.date).format('DD MMM, YYYY');\n  let workorderdate = invoicelistvalues.workorderdate != '' ? moment(invoicelistvalues.workorderdate).format('DD MMM, YYYY') : '';\n  let despathdate = invoicelistvalues.despathdate != '' ? moment(invoicelistvalues.despathdate).format('DD MMM, YYYY') : '-';\n  const invoicedate = moment(invoicelistvalues.invoicedate).format(\n    'DD MMM, YYYY'\n  );\n  const purchaseorderdate = moment(invoicelistvalues.purchaseorderdate).format(\n    'DD MMM, YYYY'\n  );\n  const billingaddress = invoicelistvalues.billingaddress;\n  const deliveryaddress = invoicelistvalues.deliveryaddress;\n  const vendorcode = invoicelistvalues.vendorcode;\n  let {\n    freightcharges,\n    subtotal,\n    cgst,\n    sgst,\n    igst,\n    total,\n    grandtotal,\n    deliverychallannumber,\n    goodsDescription,\n    invoicenumber,\n    vehiclenumber,\n    hsncode,\n    saccode,\n    roundoffamount,\n    customername,\n    deliverychallandata,\n    workorderno,\n    removaltime,\n    transportationcharge,\n    transportationgst,\n    advanceamountreceived,\n    transportchargerequired\n  } = invoicelistvalues;\n  deliverychallannumber = deliverychallannumber && deliverychallannumber != '' ? deliverychallannumber.toString() + '/2020-21': ''\n  let purchaseordernumber = deliverychallannumber && deliverychallannumber != '' ? invoicelistvalues.purchaseordernumber : ''\n  const podate = invoicelistvalues.purchaseorderdate ? moment(invoicelistvalues.purchaseorderdate).format('DD MMM, YYYY') : '-'\n\n\n  \n  if(purchaseordernumber != '' && purchaseordernumber != null){\n    if(purchaseordernumber.toString().lastIndexOf('$') > -1){\n      purchaseordernumber = purchaseordernumber.toString().split('$')[0]\n    }\n  }\n  let customergstnumber = invoicelistvalues.customergstnumber && invoicelistvalues.customergstnumber != '' ? invoicelistvalues.customergstnumber : ''\n  const remarks = invoicelistvalues.remarks\n  const tax = invoicelistvalues.tax ? invoicelistvalues.tax : '';\n  const taxpercentage = invoicelistvalues.tax\n    ? invoicelistvalues.tax / 100\n    : '';\n   freightcharges = freightcharges != '' && freightcharges != null ? parseFloat(freightcharges) : 0\n   freightcharges = freightcharges.toFixed(2)\n   subtotal = 0;\n   subtotal = parseFloat(taxableAmount) + parseFloat(freightcharges)\n   subtotal = parseFloat(subtotal)\n   subtotal = subtotal.toFixed(2)\n  // total = parseFloat(total)\n  // total = total.toFixed(2)\n\n\n  let cgstval = cgst != '' && cgst != null ? (parseFloat(subtotal) * parseFloat(cgst)) / 100 : 0\n  if (cgstval == 0)\n    cgst = 0\n\n  cgstval = cgstval.toFixed(2)\n  let sgstval = sgst != '' && sgst != null ? (parseFloat(subtotal) * parseFloat(sgst)) / 100 : 0\n  if (sgstval == 0)\n    sgst = 0\n  sgstval = sgstval.toFixed(2)\n  let igstval = igst != '' && igst != null ? (parseFloat(subtotal) * parseFloat(igst)) / 100 : 0\n  if (igstval == 0)\n    igst = 0\n  igstval = igstval.toFixed(2)\n  let total2 = 0\n  total2 = parseFloat(subtotal) + parseFloat(cgstval) + parseFloat(sgstval) + parseFloat(igstval)\n  total2 = parseFloat(total2)\n  total2 = total2.toFixed(2)\n  let transportationgstper=0;\n  transportationgst = transportationgst && transportationgst != '' ? parseFloat(transportationgst) : 0\n  transportationgstper = transportationgst\n  transportationgst = transportationgst / 100;\n  transportationcharge = transportationcharge != '' && transportationcharge != null ? parseFloat(transportationcharge) : 0\n  transportationcharge = transportationcharge.toFixed(2)\n  let transportationchargegst = transportationcharge * transportationgst\n  transportationchargegst = transportationchargegst.toFixed(2)\n  transportationchargegst = transportchargerequired != '' && transportchargerequired == 'No' ? 0.00 : transportationchargegst\n  let totalaftertransportcharge = parseFloat(total2) + parseFloat(transportationchargegst) + parseFloat(transportationcharge)\n  totalaftertransportcharge = parseFloat(totalaftertransportcharge)\n  totalaftertransportcharge = totalaftertransportcharge.toFixed(2)\n\n\n  advanceamountreceived = advanceamountreceived != '' && advanceamountreceived != null ? parseFloat(advanceamountreceived) : 0\n  advanceamountreceived = advanceamountreceived.toFixed(2)\n  grandtotal = parseFloat(totalaftertransportcharge) - parseFloat(advanceamountreceived)\n  grandtotal = parseFloat(grandtotal)\n  grandtotal = grandtotal.toFixed(2)\n\n  \n  RsPaise(grandtotal)\n  console.log(amountinwords)\n  // const grandtotal = taxpercentage * totalrs;\n  //   const selectecontactlist = invoicelistvalues.selectedcontactlist[0]\n  //     ? invoicelistvalues.selectedcontactlist[0].suppliercontactname\n  //     : \"\";\n  const cond_data = data_cond;\n  const tableComponentTwo = [];\n  for (let i = 0; i < data.length; i++) {\n    if (data[i] && data[i + 1]) {\n      tableComponentTwo.push([data[i], data[i + 1]]);\n    } else {\n      tableComponentTwo.push([data[i]]);\n    }\n    ++i;\n  }\n  const datalength = tableComponentTwo.length - 1;\n  const tableComponent = tableComponentTwo.map((data, i) => {\n    if (i >= 1 && i === datalength) {\n      return (\n        <Page size='A4' style={styles.pagepadding} wrap key={i}>\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={data}\n          >\n            <TableHeader\n              textAlign={'center'}\n              style={{ backgroundColor: 'tomato' }}\n            >\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Text style={styles.headerfont}>SL No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont}>Particular</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Weight Each kgs(+/-5%)</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Rate/{'\\n'}Each RS</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Dist %</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>\n                  After Dist Rate/Each{'\\n'}Rs\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Qty</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Total RS</Text>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell\n                weighting={0.08}\n                style={styles.padding}\n                getContent={r => r.slno}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.6}\n                getContent={r => {\n                  return (\n                    <View>\n                      <Text>{r.itemname + '\\n'}</Text>\n                      <Text>{'\\n'}</Text>\n                      <Image\n                        src={`${process.env.REACT_APP_BASE_URL}/${r.itemimage}`}\n                      />\n                      <Text>{'\\n'}</Text>\n                    </View>\n                  );\n                }}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => {\n                  return r.weighteach;\n                }}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.costperunit} />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.quantity} />\n              <DataTableCell weighting={0.2} getContent={r => r.totalcost} />\n            </TableBody>\n          </Table>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1.087}>\n                <Text style={styles.headerfont2}>Taxable Amount</Text>\n              </TableCell>\n              <TableCell weighting={0.13}>\n                <Text style={{ textAlign: 'center' }}>{taxableAmount}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1.087}>\n                <Text style={styles.headerfont2}>GST %</Text>\n              </TableCell>\n              <TableCell weighting={0.13}>\n                <Text style={{ textAlign: 'center' }}>{tax}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1.087}>\n                <Text style={styles.headerfont2}>Grand Total Rs</Text>\n              </TableCell>\n              <TableCell weighting={0.13}>\n                <Text style={{ textAlign: 'center' }}>\n                  {/* {(grandtotal + +totalrs).toFixed(2)} */}\n                  23131\n                </Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n        </Page>\n      );\n    } else if (i >= 1) {\n      return (\n        <Page size='A4' style={styles.pagepadding} wrap key={i}>\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={data}\n          >\n            <TableHeader\n              textAlign={'center'}\n              style={{ backgroundColor: 'tomato' }}\n            >\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Text style={styles.headerfont}>SL No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont}>Particular</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Weight Each kgs(+/-3%)</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Rate/{'\\n'}Each RS</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Dist %</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>\n                  After Dist Rate/Each{'\\n'}Rs\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Qty</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Total RS</Text>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell\n                weighting={0.08}\n                style={styles.padding}\n                getContent={r => r.slno}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.6}\n                getContent={r => {\n                  return (\n                    <View>\n                      <Text>{r.itemname + '\\n'}</Text>\n                      <Text>{'\\n'}</Text>\n                      <Image\n                        src={`${process.env.REACT_APP_BASE_URL}/${r.itemimage}`}\n                      />\n                      <Text>{'\\n'}</Text>\n                    </View>\n                  );\n                }}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.weighteach} />\n              <DataTableCell weighting={0.2} getContent={r => r.costperunit} />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.quantity} />\n              <DataTableCell weighting={0.2} getContent={r => r.totalcost} />\n            </TableBody>\n          </Table>\n        </Page>\n      );\n    } else if (i < 1 && i === datalength) {\n      return (\n        <View>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1}>\n                <Text style={styles.descriptionText}>\n                  {'\\n'}\n                  Range : Yelahanka -I Basaveshwara Building, Cresent Road (Opp Mallige Nursing Home) - Bangalore, Karnataka {\n                    '\\n'\n                  }{' '}\n                  Division : Bangalore-C Basaveshwara Building, Cresent Road (Opp Mallige Nursing Home) - Bangalore, Karnataka {\n                    '\\n'\n                  }{' '}\n                  Commissionerte : Obadenahalli Industrial Area, {'\\n'} Doddabalapura,\n                  Bangalore Rural District PIN : 561203\n                  {'\\n'}\n                  {'\\n'}\n                </Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.5}>\n                <Text style={styles.headerfontleft} textAlign={'left'}>\n                  Invoice No: {invoicenumber}/2020-21\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Text style={[styles.headerfont, { textAlign: 'center' }]}>{invoicedate}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <View style={styles.row}>\n            <View style={styles.column}>\n              <Table>\n                <TableHeader>\n                  <TableCell weighting={1}>\n                    <Text style={styles.billingaddress}>\n                      Billing To {'\\n'}\n                      {billingaddress}\n                      {'\\n'}\n                    </Text>\n                  </TableCell>\n                </TableHeader>\n                >\n              </Table>\n            </View>\n            <View style={styles.column}>\n              <Table>\n                <TableHeader>\n                  <TableCell weighting={1}>\n                    <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>\n                            Delivery Challan No:\n                          </Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                            {deliverychallannumber}\n                          </Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table>\n                    <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>Date</Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont, { textAlign: 'center' }]}>{date}</Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table>\n                    <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>\n                            Purchase Order No:\n                          </Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                            {purchaseordernumber}\n                          </Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table>\n                    {/* <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>Date:</Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                            {purchaseorderdate}\n                          </Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table> */}\n                  </TableCell>\n                </TableHeader>\n              </Table>\n            </View>\n          </View>\n          {/* Shipping Address */}\n          <View style={styles.row}>\n            <View style={styles.column}>\n              <Table>\n                <TableHeader>\n                  <TableCell weighting={1}>\n                    <Text style={styles.shippingaddress}>\n                      Delivery To {'\\n'}\n                      {deliveryaddress}\n                      {'\\n'}\n                    </Text>\n                  </TableCell>\n                </TableHeader>\n                >\n              </Table>\n            </View>\n            <View style={styles.column}>\n              <Table>\n                <TableHeader>\n                  <TableCell weighting={1}>\n                    <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>Vehicle No:</Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                            {taxableAmount}\n                          </Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table>\n                    <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>HSN Code</Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont, { textAlign: 'center' }]}>{date}</Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table>\n                    <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>\n                            Vendor Code No:\n                          </Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                            {vendorcode}\n                          </Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table>\n                    <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>SAC Code:</Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                            {vendorcode}\n                          </Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table>\n                    {/* <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>\n                            Time of invoice:\n                          </Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont, { textAlign: 'center' }]}></Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table> */}\n                    <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>\n                            Date of invoice:\n                          </Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                            {invoicedate}\n                          </Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table>\n                    {/* <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>\n                            Description of Excisible Goods:\n                          </Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                            {goodsDescription}\n                          </Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table> */}\n                  </TableCell>\n                </TableHeader>\n              </Table>\n            </View>\n          </View>\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={data}\n            key={i}\n          >\n            <TableHeader\n              textAlign={'center'}\n              style={{ backgroundColor: 'tomato' }}\n            >\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Text style={styles.headerfont}>SL No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont}>Particular</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Weight Each kgs(+/-3%)</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Rate/{'\\n'}Each RS</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Dist %</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>\n                  After Dist Rate/Each{'\\n'}Rs\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Qty</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Total RS</Text>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell\n                weighting={0.08}\n                style={styles.padding}\n                getContent={r => r.slno}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.6}\n                getContent={r => {\n                  return (\n                    <View>\n                      <Text>{r.itemname + '\\n'}</Text>\n                      <Text>{'\\n'}</Text>\n                      <Image\n                        src={`${process.env.REACT_APP_BASE_URL}/${r.itemimage}`}\n                      />\n                      <Text>{'\\n'}</Text>\n                    </View>\n                  );\n                }}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.weighteach} />\n              <DataTableCell weighting={0.2} getContent={r => r.costperunit} />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.quantity} />\n              <DataTableCell weighting={0.2} getContent={r => r.totalcost} />\n            </TableBody>\n          </Table>\n          {/* Three divs for remarks, tax details and amoun */}\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.5}>\n                <Text style={{ fontSize: 10 }}>\n                  Remarks\n                  {'\\n'}\n                  {'\\n'}\n\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.73}>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont2}>Taxable Amount</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={{ textAlign: 'center' }}>\n                        {taxableAmount}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont2}>Freight Charges RS</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={{ textAlign: 'center' }}>\n                        {freightcharges}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont2}>Sub Total Rs</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={[styles.headerfont, { textAlign: 'center' }]}>{subtotal}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont2}>CGST @ 9%</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={[styles.headerfont, { textAlign: 'center' }]}>{cgst}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          {/* Two */}\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.5}>\n                <Text style={styles.headerfont2}>\n                  {'\\n'}\n                  {'\\n'}\n                  {'\\n'}\n                  {'\\n'}\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.73}>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont2}>SGST @ 9%</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={{ textAlign: 'center' }}>{sgst}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont2}>IGST @ 18%</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={{ textAlign: 'center' }}>{igst}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont2}>Total</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={{ textAlign: 'center' }}>{total}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          {/* Three */}\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.5}>\n                <Text style={styles.headerfont2}>\n                  {'\\n'}\n                  {'\\n'}\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.73}>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont2}>Round Off</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={{ textAlign: 'center' }}>\n                        {roundoffamount}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont2}>Grand total</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={{ textAlign: 'center' }}>{grandtotal}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          {/* ends here */}\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1.087}>\n                <Text style={styles.descriptionText}>\n                  Certified that the particulars given above are true and the\n                  amount indicated represents the price actually charged and\n                  that there is no additional flow directly or indirectly from\n                  the buyer\n                </Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <View style={styles.row}>\n            <View style={styles.column}>\n              <Table>\n                <TableHeader>\n                  <TableCell weighting={1}>\n                    <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                      Authentication\n                      {'\\n'}\n                      {'\\n'}\n                      {'\\n'}\n                      {'\\n'}\n                      E & O.E.\n                    </Text>\n                  </TableCell>\n                </TableHeader>\n                >\n              </Table>\n            </View>\n            <View style={styles.column}>\n              <Table>\n                <TableHeader>\n                  <TableCell weighting={1}>\n                    <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                      For PONDHAN SCAFFOLDING PVT LTD\n                      {'\\n'}\n                      {'\\n'}\n                      {'\\n'}\n                      {'\\n'}\n                      Authorised Signatories\n                    </Text>\n                  </TableCell>\n                </TableHeader>\n                >\n              </Table>\n            </View>\n          </View>\n        </View>\n      );\n    } else {\n      return (\n        <View>\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={data}\n            key={i}\n          >\n            <TableHeader textAlign={'center'} style={styles.tableheaderbgcolor}>\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Text style={styles.headerfont}>SL No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont}>Particular</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Weight Each kgs(+/-3%)</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Rate/{'\\n'}Each RS</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Dist %</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>\n                  After Dist Rate/Each{'\\n'}Rs\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Qty</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Total RS</Text>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell\n                weighting={0.08}\n                style={styles.padding}\n                getContent={r => <Small>{r.slno}</Small>}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.6}\n                getContent={r => {\n                  return (\n                    <View>\n                      <Text><Small>{r.itemname}</Small>{'\\n'}</Text>\n                      <Text>{'\\n'}</Text>\n                      <Image\n                        src={`${process.env.REACT_APP_BASE_URL}/${r.itemimage}`}\n                      />\n                      <Text>{'\\n'}</Text>\n                    </View>\n                  );\n                }}\n              />\n              <DataTableCell weighting={0.2} getContent={r => <Small>{r.weighteach}</Small>} />\n              <DataTableCell weighting={0.2} getContent={r => <Small>{r.costperunit}</Small>} />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => <Small>{r.itemdiscount.toString()}</Small>}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => <Small>{r.itemdiscount.toString()}</Small>}\n              />\n              <DataTableCell weighting={0.2} getContent={r => <Small>{r.quantity}</Small>} />\n              <DataTableCell weighting={0.2} getContent={r => <Small>{r.totalcost}</Small>} />\n            </TableBody>\n          </Table>\n        </View>\n      );\n    }\n  });\n\n  return (\n    <Document>\n      <Page size='A4' style={styles.pagepadding} wrap>\n        <View style={styles.invoice_header}>\n          <Image style={styles.logo} src={logo} />\n          <View style={{ flex: 1, paddingLeft: 25 }}>\n            <Text style={{ fontSize: 11, textAlign: 'right' }}>Original for Buyer</Text>\n            <Text style={styles.headerwidth}>PROFORMA INVOICE</Text>\n            <Text style={{ fontSize: 8, marginTop: 8 }}>(Proforma Invoice for removal of Excisable goods from a Factory or Warehouse under Rule 11)</Text>\n            <Text style={[styles.headerwidthAddress, { marginTop: 4 }]}>Email: info@pondhan.com, Website: www.pondhan.com</Text>\n            <Text style={[styles.headerwidthAddress, { marginTop: 4 }]}>TIN No: 29710660725</Text>\n            <Text style={[styles.headerwidthAddress, { marginTop: 4 }]}>GSTIN:29AAGCP4018E1ZJ RCC No: U28110KA2012PTC062181</Text>\n            \n          </View>\n        </View>\n        {/* <View style={styles.section}>\n          <Text style={styles.headerwidth}></Text>\n\n          <Text style={styles.headerwidthdate}>\n            Date:{invoicelistvalues.requestdeliverydate}\n          </Text>\n        </View> */}\n        <View>\n          {/*  style={styles.section} */}\n          <Table>\n            <TableHeader>\n              <TableCell weighting={0.9}>\n                <Text style={styles.descriptionText}>\n                Address:Plot no.40 & 41 (corner) Road,no.5, KIADB Obadenahalli Industrial Area,3rd phase Doddaballapura, {'\\n'} Bangalore Rural District-561203.\n\n                \n                </Text>\n              </TableCell>\n              <TableCell weighting={0.1} styles={{ flexDirection: 'row', justifyContent: 'center', alignItems: 'center' }}>\n                <Image style={styles.seal} src={seal} />\n              </TableCell>\n            </TableHeader>\n          </Table>\n          {/* <View style={{ borderLeftWidth: 1, borderRightWidth: 1, borderColor: 'black' }}>\n            <Text>Hello World!</Text>\n          </View> */}\n          \n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.5}>\n                <Text style={[styles.headerfontleft]} textAlign={'left'}>\n                  Proforma Invoice No: {invoicenumber}/{financialYear}\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Text style={[styles.headerfontleft, { textAlign: 'center', fontWeight: 'bold' }]}>\n                  {invoicedate}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <Text> {'\\n'}</Text>\n          <Table>\n            <TableHeader>\n              <TableCell weighting={0.5}>\n                {/* <Table>\n                  <TableHeader>\n                    <TableCell weighting={1}>\n                      \n                    </TableCell>\n                  </TableHeader>\n                </Table> */}\n                <Text style={[styles.headerfont, { textAlign: 'center', marginTop: 5 }]}>\n                  Billing To\n                </Text>\n                <Text style={[styles.billingaddress]}>\n                  {customername}  {'\\n'}\n                  {billingaddress}\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={0.5}>\n                      <Text style={styles.headerfont2}>\n                        Delivery Challan No:\n                          </Text>\n                    </TableCell>\n                    <TableCell weighting={0.5}>\n                      <Text style={[styles.headerfont]}>\n                        {deliverychallannumber}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={0.5}>\n                      <Text style={styles.headerfont2}>Delivery Challan Date</Text>\n                    </TableCell>\n                    <TableCell weighting={0.5}>\n                      <Text style={[styles.headerfont]}>{date}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={0.5}>\n                      <Text style={styles.headerfont2}>\n                        Purchase Order No:\n                          </Text>\n                    </TableCell>\n                    <TableCell weighting={0.5}>\n                      <Text style={[styles.headerfont]}>\n                        {purchaseordernumber}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={0.5}>\n                      <Text style={styles.headerfont2}>\n                        Purchase Order Date:\n                          </Text>\n                    </TableCell>\n                    <TableCell weighting={0.5}>\n                      <Text style={[styles.headerfont]}>\n                        {podate}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={0.5}>\n                      <Text style={styles.headerfont2}>\n                        Dispatch Date:\n                          </Text>\n                    </TableCell>\n                    <TableCell weighting={0.5}>\n                      <Text style={[styles.headerfont]}>\n                        {despathdate}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n\n                \n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={0.5}>\n                      <Text style={styles.headerfont2}>\n                        Vendor Code No:\n                          </Text>\n                    </TableCell>\n                    <TableCell weighting={0.5}>\n                      <Text style={[styles.headerfont]}>\n                        {vendorcode}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                {/* <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>Date:</Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont]}>\n                            {purchaseorderdate}\n                          </Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table> */}\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <Text> {'\\n'}</Text>\n          <Table>\n            <TableHeader>\n              <TableCell weighting={0.5}>\n                {/* <Table>\n                  <TableHeader>\n                    <TableCell weighting={1}>\n                      \n                    </TableCell>\n                  </TableHeader>\n                </Table> */}\n                <Text style={[styles.headerfont, { textAlign: 'center', marginTop: 5 }]}>\n                  Delivery To\n                </Text>\n                <Text style={[styles.shippingaddress]}>\n         \n                  {deliveryaddress} {'\\n'}\n                  GST No: {customergstnumber}\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={0.5}>\n                      <Text style={styles.headerfont2}>Vehicle No:</Text>\n                    </TableCell>\n                    <TableCell weighting={0.5}>\n                      <Text style={[styles.headerfont]}>\n                        {vehiclenumber}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={0.5}>\n                      <Text style={styles.headerfont2}>HSN Code</Text>\n                    </TableCell>\n                    <TableCell weighting={0.5}>\n                      <Text style={[styles.headerfont]}>{hsncode}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={0.5}>\n                      <Text style={styles.headerfont2}>SAC Code:</Text>\n                    </TableCell>\n                    <TableCell weighting={0.5}>\n                      <Text style={[styles.headerfont]}>\n                        {saccode}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                {/* <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>\n                            Time of invoice:\n                          </Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont]}></Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table> */}\n                {/* <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>\n                            Date of invoice:\n                          </Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont]}>\n                            {invoicedate}\n                          </Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table> */}\n                {/* <Table style={styles.section}>\n                      <TableHeader>\n                        <TableCell weighting={0.5}>\n                          <Text style={styles.headerfont2}>\n                            Description of Excisible Goods:\n                          </Text>\n                        </TableCell>\n                        <TableCell weighting={0.5}>\n                          <Text style={[styles.headerfont]}>\n                            {goodsDescription}\n                          </Text>\n                        </TableCell>\n                      </TableHeader>\n                    </Table> */}\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <Text> {'\\n'}</Text>\n\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={data}\n          >\n            <TableHeader\n              textAlign={'center'}\n              style={{ backgroundColor: 'tomato' }}\n            >\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Small>SL No</Small>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                \n                <Description >Description</Description>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Small>UOM</Small>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Small>Qty</Small>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Small>Rate</Small>\n              </TableCell>\n \n\n              <TableCell weighting={0.2}>\n                <Small>Amount</Small>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell  weighting={0.08} getContent={r => <Small>{r.slno}</Small>} />\n              <DataTableCell  weighting={0.6} getContent={r => <Description>{r.itemname}</Description>} />\n              <DataTableCell weighting={0.2} getContent={r => <Small>{r.weighteach}</Small>} />\n              <DataTableCell weighting={0.2} getContent={r => <Small>{r.quantity}</Small>} />\n              <DataTableCell weighting={0.2} getContent={r => <Small>{r.costperunit}</Small>} />\n            \n              <DataTableCell weighting={0.2} getContent={r => <Small>{r.totalcost}</Small>} />\n            </TableBody>\n          </Table>\n          <Text> {'\\n'}</Text>\n          {/* Three divs for remarks, tax details and amount */}\n          </View>\n        </Page>\n        <Page size='A4' style={styles.pagepadding} wrap>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.5}>\n   \n                   <Text style={styles.headerfont3}>\n                  {amountinwords}\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont4}>Taxable amount</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                        {taxableAmount}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n\n                    <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont4}>Freight,w.s,loading and handling charges </Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                        {freightcharges}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n\n                    <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont4}>Sub Total</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                        {subtotal}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont4}>CGST@{cgst}%</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={[styles.headerfont, { textAlign: 'center' }]}>{cgstval}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont4}>SGST@{sgst}%</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={[styles.headerfont, { textAlign: 'center' }]}>{sgstval}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n\n                <Table style={styles.section}>\n                  <TableHeader>\n              \n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont4}>IGST@{igst}%</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={[styles.headerfont, { textAlign: 'center' }]}>{igstval}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n\n                     <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont4}>Total</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={[styles.headerfont, { textAlign: 'center' }]}>{total2}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n\n                \n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont4}>Transportation Charge</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={[styles.headerfont, { textAlign: 'center' }]}>{transportationcharge}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n\n                  <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont4}>Transportation @ {transportationgstper}%</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={[styles.headerfont, { textAlign: 'center' }]}>{transportationchargegst}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n\n                \n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont4}>Grand Total</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={[styles.headerfont, { textAlign: 'center' }]}>{totalaftertransportcharge}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n\n                  <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont4}>Advance Received</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                        {advanceamountreceived}\n                      </Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n                <Table style={styles.section}>\n                  <TableHeader>\n                    <TableCell weighting={1.087}>\n                      <Text style={styles.headerfont4}>Balance Amount</Text>\n                    </TableCell>\n                    <TableCell weighting={0.45}>\n                      <Text style={[styles.headerfont, { textAlign: 'center' }]}>{grandtotal}</Text>\n                    </TableCell>\n                  </TableHeader>\n                </Table>\n\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <Text>\n          {'\\n'}\n          {'\\n'}\n            {'\\n'}\n          </Text> \n          {/* Two */}\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1.0}>\n                <Text style={styles.headerfont3}>\n                 \n                  \n                  Our Bank details:-  {'\\n'} {'\\n'}\n                  Company Name : Pondhan Scaffolding Pvt Ltd  {'\\n'}\n                  Bank : Vijaya Bank, Branch: Byatarayanapura, Bangalore-92  {'\\n'}\n                  A/c No: 104 00 6211 000 006 Transportation {'\\n'}\n                  IFSC Code: VIJB 000 1040\n                </Text>\n              </TableCell>\n             \n            </TableHeader>\n          </Table>\n          <Text>\n         \n            {'\\n'}\n          </Text> \n          {/* Three */}\n\n          {/* ends here */}\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1.087}>\n                <Text style={styles.descriptionText}>\n                  Certified that the particulars given above are true and the\n                  amount indicated represents the price actually charged and\n                  that there is no additional flow directly or indirectly from\n                  the buyer\n                  {'\\n'}{'\\n'}{'\\n'}{'\\n'}\n                </Text>\n                <Text\n                 style={[styles.descriptionText, { color: 'red' }]}\n                > Note: Any legal matter should be under Bengaluru Jurisdiction </Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <Text>\n         \n            {'\\n'}\n          </Text> \n          {/* <Text>\n            {'\\n'}\n            {'\\n'}\n          </Text> */}\n          <View style={styles.row}>\n            <View style={styles.column}>\n              <Table>\n                <TableHeader>\n                  <TableCell weighting={1}>\n                    <Text style={[styles.headerfont, { textAlign: 'center', padding: 5 }]}>\n                      <SmallBold>Authentication</SmallBold>\n                      {'\\n'}\n                      {'\\n'}\n                      {'\\n'}\n                      {'\\n'}\n                      {'\\n'}\n                \n         \n                      E & O.E.\n                    </Text>\n                  </TableCell>\n                </TableHeader>\n                {/* > */}\n              </Table>\n            </View>\n            <View style={styles.column}>\n              <Table>\n                <TableHeader>\n                  <TableCell weighting={1}>\n                    <Text style={[styles.headerfont, { textAlign: 'center', padding: 5 }]}>\n                      <SmallBold>For PONDHAN SCAFFOLDING PVT LTD</SmallBold>\n                      {'\\n'}\n              \n                      <View style={{ flexDirection: 'row', justifyContent: 'center', padding: 5  }}>\n                        <Image style={{ width: 53, height: 53 }} src={sign} />\n                        <Image style={{ width: 53, height: 53 }} src={seal} />\n                      </View>\n                      <SmallBold>Authorised Signatories</SmallBold>\n                    </Text>\n                   \n                  </TableCell>\n                </TableHeader>\n               \n              </Table>\n          \n            </View>\n\n       \n            \n          </View>\n          </Page>\n    </Document >\n  );\n};\n\nexport default MyDocument2;","import { PDFViewer } from \"@react-pdf/renderer\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { getinvoice } from '../../../../actions/Invoice';\nimport logo from \"../../../../Images/logo.png\";\nimport MyDocument2 from \"./Component2\";\nimport \"./ViewInvoice\";\n\nclass ViewProformaInvoicePdf extends React.Component {\n  state = {\n    invoicelistvalues: {},\n    status: false,\n    link: \"\"\n  };\n  async componentDidMount() {\n    this.props.getinvoice();\n    const quotationid = this.props.match.params.id;\n    let invoicelistvalues = JSON.parse(sessionStorage.getItem('pformadata'))\n    invoicelistvalues.requestdeliverydate = moment(\n      invoicelistvalues.date\n    ).format(\"DD MMM, YYYY\");\n    invoicelistvalues.addeditemlist = invoicelistvalues.addeditemlist.map(\n      (itemlist, i) => {\n        return {\n          slno: (i + 1).toString(),\n          itemname: itemlist.itemdescription ? itemlist.itemdescription : \"\",\n          weighteach: itemlist.itemuom\n            ? itemlist.itemuom.uomname\n            : \"\",\n          itemimage: itemlist.id.masteritemimage\n            ? itemlist.id.masteritemimage\n            : \"\",\n          quantity: itemlist.quantity ? itemlist.quantity.toString() : \"\",\n          itemdiscount: itemlist.itemdiscount ? \n              itemlist.itemdiscount.toString()\n            : \"0\",\n          costperunit: itemlist.costperunit\n            ? itemlist.costperunit.toString()\n            : \"\",\n          totalcost: itemlist.totalcost\n            ? itemlist.totalcost.toFixed(2).toString()\n            : \"\"\n        };\n      }\n    );\n    const customerid = invoicelistvalues.customerid;\n    const customernumber = invoicelistvalues.customernumber;\n    const customername = invoicelistvalues.customername;\n    await axios.get(`${process.env.REACT_APP_BASE_URL}/year/getyear`).then(\n      (res) => {\n        if(res.data.year) {\n          invoicelistvalues.financialyear = res.data.year.currentyear;\n        }\n        else {\n          invoicelistvalues.financialyear = \"2020-21\";          \n        }\n      },\n      (error) => {\n        invoicelistvalues.financialyear = \"2020-21\";\n      }\n    )\n    console.log(\"--COMPONENTDIDMOUNT--\");\n    console.log(invoicelistvalues);\n    setTimeout(() => {\n      this.setState({\n        ...this.state.invoicelistvalues,\n        invoicelistvalues,\n        status: true\n      });\n    },2000);\n    this.dynamicClick();\n  }\n  dynamicClick() {\n    if (document.getElementsByClassName(\"pdf-class\")) {\n      if (\n        document.getElementsByClassName(\"pdf-class\")[0].children.length <= 1\n      ) {\n        setTimeout(() => {\n          this.dynamicClick();\n        }, 7000);\n      } else if (\n        document.getElementsByClassName(\"pdf-class\")[0].children.length > 1\n      ) {\n        this.setState({\n          link: document.getElementsByClassName(\"pdf-class\")[0].children[1].src\n          // status : undefined,\n        },()=>{\n          setTimeout(() => {\n            document.getElementById(\"D1\").click();\n            this.props.history.push(\"/proformainvoicelist\");\n          }, 300);\n        });\n       \n      }\n    } else {\n    }\n  }\n  \n  render() {\n    const data_cond = [\n      {\n        slno: \"1\",\n        title: \"Invoices\",\n        value: \"2 copies Invoices (original & duplicate)\"\n      },\n      {\n        slno: \"2\",\n        title: \"Tax & Duty\",\n        value: \"Included\"\n      },\n      {\n        slno: \"3\",\n        title: \"Payment Schedule\",\n        value: \"15 days from the date of delivery\"\n      },\n      {\n        slno: \"4\",\n        title: \"Delivery Schedule\",\n        value: \"Immediately\"\n      },\n      {\n        slno: \"5\",\n        title: \"Billing address & GST No\",\n        value:\n          \"M/s Pondhan Scaffolding Pvt Ltd \\n Plot no. 40/41, Road no.5, Obedanahalli,\"\n      },\n      {\n        slno: \"6\",\n        title: \"Delivery Address\",\n        value: \"M/s Pondhan Scaffolding Pvt Ltd\"\n      }\n    ];\n    const { status, invoicelistvalues,link } = this.state;\n    console.log(this.state)\n    return (\n      <div>\n        <div className=\"pdf-class\">\n          Downloading file.Please wait.\n          {/* {!status && (\n          <h1 style={{ 'position': 'absolute','left': '50%','top': '50%','transform': 'translate(-50%, -50%);'}}>Downloading file.Please wait.</h1>\n        )} */}\n          <a href={link} download id=\"D1\"></a>\n          {status && (\n            <PDFViewer>\n              <MyDocument2\n                invoicelistvalues={this.state.invoicelistvalues}\n                data_cond={data_cond}\n                logo={logo}\n              />\n            </PDFViewer>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\nfunction mapStateToProps(state) {\n  return {\n    invoicelistvalues: state.invoicelistvalues\n  };\n}\nexport default connect(\n  mapStateToProps,\n  { getinvoice }\n)(ViewProformaInvoicePdf);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { AvForm, AvField, AvGroup } from 'availity-reactstrap-validation';\nimport {\n  Button,\n  Label,\n  Alert,\n  Card,\n  CardBody,\n  CardHeader,\n  Row,\n  Col,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from 'reactstrap';\nimport PropTypes from 'prop-types';\n\nclass AddItemListForm extends React.Component {\n  state = {\n    data: {\n      masteritemtype: '',\n      masteritemname: null,\n      masteritemdescription: '',\n      masteritemshortdescription:'',\n      masteritemuom: '',\n      costperunit: null,\n      masteritemrate: null,\n      masteritemunitwt: null,\n      permeter: null,\n      perfeet: null,\n      perinch: null,\n      masteritemimagefile: null\n    },\n    materialoptionlistvalues: [],\n    masteritemlistvalues: [],\n    uom: [],\n    errors: {},\n    loading: false,\n    success: false,\n    filename:''\n  };\n\n  onChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  onChange2 = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value,\n        perfeet : (e.target.value / 3.2808).toFixed(2),\n        perinch : (e.target.value / 39.3701).toFixed(2)\n       },\n\n    });\n  };\n\n  componentDidMount() {\n    const materialoptionlistvalues = Object.values(\n      this.props.materialoptionlistvalues\n    );\n    const uomlistvalues = Object.values(this.props.uomlistvalues);\n    const masteritemlistvalues = Object.values(this.props.masteritemlistvalues);\n    this.setState({\n      ...this.state,\n      materialoptionlistvalues,\n      uom: uomlistvalues,\n      masteritemlistvalues: masteritemlistvalues\n    });\n  }\n\n  componentWillReceiveProps(props) {\n    const materialoptionlistvalues = Object.values(\n      props.materialoptionlistvalues\n    );\n    const uomlistvalues = Object.values(props.uomlistvalues);\n    const masteritemlistvalues = Object.values(props.masteritemlistvalues);\n    this.setState({\n      ...this.state,\n      materialoptionlistvalues,\n      uom: uomlistvalues,\n      masteritemlistvalues: masteritemlistvalues\n    });\n  }\n\n  onItemTypeChange = e => {\n    const selecteditemtype = e.target.value;\n    const materialoptionlistvalues = this.state.materialoptionlistvalues;\n    const masteritemlistvalues = this.state.masteritemlistvalues;\n    const selecteditemtypevalue = materialoptionlistvalues.filter(\n      (option, i) => {\n        if (option.id === selecteditemtype) {\n          return option;\n        }\n      }\n    );\n    const selectitemid = selecteditemtypevalue[0].id;\n    if (selectitemid) {\n      const selecteditemvalues = masteritemlistvalues.filter(item => {\n        if (item.masteritemtype._id == selectitemid) {\n          return item;\n        }\n      });\n      console.log(selecteditemtypevalue);\n      console.log(selecteditemvalues);\n      const count = selecteditemvalues.length;\n      if ((selectitemid === '5d263475917f5e27146d9ee4' || selectitemid === '5df361a6f57a6f7c679da493' || selectitemid === '5f0830f14d38d207245a37eb')) {\n        const itemname = count > 0 ? 1002 + count : 1001;\n        this.setState({\n          ...this.state,\n          data: {\n            ...this.state.data,\n            masteritemtype: selectitemid,\n            masteritemname: itemname\n          }\n        });\n      }\n      if ((selectitemid === '5d263480917f5e27146d9ee5' || selectitemid == '5df361e1f57a6f7c679da494'  || selectitemid === '5f0831104d38d207245a37ec')) {\n        const itemname = count > 0 ? 2002 + count : 2001;\n        this.setState({\n          ...this.state,\n          data: {\n            ...this.state.data,\n            masteritemtype: selectitemid,\n            masteritemname: itemname\n          }\n        });\n      }\n      if ((selectitemid === '5d270f30136e660798dce139' || selectitemid == '5df361eaf57a6f7c679da495'  || selectitemid === '5f0831204d38d207245a37ed')) {\n        const itemname = count > 0 ? 3002 + count : 3001;\n        this.setState({\n          ...this.state,\n          data: {\n            ...this.state.data,\n            masteritemtype: selectitemid,\n            masteritemname: itemname\n          }\n        });\n      }\n\n      if ((selectitemid === '5d5e206ea24f1806712491b7' || selectitemid == '5df361f3f57a6f7c679da496'  || selectitemid === '5f08312c4d38d207245a37ee')) {\n        const itemname = count > 0 ? 4002 + count : 4001;\n        this.setState({\n          ...this.state,\n          data: {\n            ...this.state.data,\n            masteritemtype: selectitemid,\n            masteritemname: itemname\n          }\n        });\n      }\n    }\n  };\n\n  createSelectItems = () => {\n    let items = [];\n    const materialoptionlistvalues = this.state.materialoptionlistvalues;\n    materialoptionlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.masteritemtypename}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  createSelectUomItems = () => {\n    let items = [];\n    const uomlistvalues = this.state.uom;\n    uomlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.uomname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  fileSelectedHandler = e => {\n    console.log(e.target.files[0]);\n    let masteritemimagefile = e.target.files[0];\n    let file_size = e.target.files[0].size / 1024 / 1024;\n    let file_name = e.target.files[0].name;\n    let file_type = e.target.files[0].type;\n    console.log(`${file_size} MB`);\n    console.log(file_name);\n    console.log(file_type);\n    if (Number(file_size) > 2) {\n      this.setState({ errors: { filesize: 'File Size is greater than 2MB' } });\n    }\n    if (!this.hasExtension(file_name, ['.jpg', '.jpeg', '.png'])) {\n      this.setState({ errors: { filesize: 'File format not supported' } });\n    }\n    this.setState({\n      filename: 'Attached file : ' + file_name,\n      data: {\n        ...this.state.data,\n        masteritemimagefile: e.target.files[0]\n      }\n    });\n  };\n  hasExtension(fileName, exts) {\n    return (new RegExp('(' + exts.join('|').replace(/\\./g, '\\\\.') + ')$')).test(fileName);\n  }\n\n  handleValidSubmit = () => {\n    let { data } = this.state;\n    this.setState({ loading: true });\n    let formdata = new FormData();\n    console.log(data)\n    formdata.append('imagefile', data.masteritemimagefile);\n    // formdata.append(\"filename\", data.masteritemimagefile.name);\n    formdata.append('masteritemtype', data.masteritemtype);\n    formdata.append('masteritemname', data.masteritemname);\n    formdata.append('masteritemdescription', data.masteritemdescription);\n    formdata.append('masteritemshortdescription', data.masteritemshortdescription);\n    \n    formdata.append('masteritemuom', data.masteritemuom);\n    formdata.append('costperunit', data.costperunit);\n    formdata.append('masteritemrate', data.masteritemrate);\n    formdata.append('masteritemunitwt', data.masteritemunitwt);\n    formdata.append('permeter', data.permeter);\n    formdata.append('perfeet', data.perfeet);\n    formdata.append('perinch', data.perinch);\n    if (Object.keys(this.state.errors).length === 0) {\n      this.props\n        .submit(formdata)\n        .then(() => {\n          this.setState({ loading: false, errors: {}, success: true });\n          this.myFormRef.reset();\n        })\n        .catch(err => {\n          this.props.error(false);\n          this.setState({ errors: err.response.data.errors, loading: false });\n        });\n    } else if (this.state.errors.filesize) {\n      alert(this.state.errors.filesize)\n      this.setState({ loading: false, errors: {} });\n    }\n  };\n\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n\n  handleInvalidSubmit = () => {\n    console.log(this.state.data)\n    console.log('invalid submit');\n  };\n\n  render() {\n    const { data, errors, loading, success,filename } = this.state;\n    return (\n      <div>\n        <div>\n          {!!success ? (\n            // <Alert color=\"info\">Item is added successfully.</Alert>\n            <Modal\n              isOpen={success}\n              toggle={this.toggle}\n              className={this.props.className}\n            >\n              <ModalHeader  toggle={this.toggle}>Item</ModalHeader>\n              <ModalBody >Item is added successfully.</ModalBody>\n              <ModalFooter>\n                <Button color='primary' onClick={this.toggle}>\n                  Ok\n                </Button>{' '}\n             \n              </ModalFooter>\n            </Modal>\n          ) : null}\n        </div>\n        <AvForm\n          encType='multipart/form-data'\n          onValidSubmit={this.handleValidSubmit}\n          onInvalidSubmit={this.handleInvalidSubmit}\n          ref={el => (this.myFormRef = el)}\n        >\n          <Card>\n            <CardHeader className='small-font-size-bold'>Add Item</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='masteritemtype'>Item Type</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      type='select'\n                      name='masteritemtype'\n                      onChange={this.onItemTypeChange}\n                      required={true}\n                      Label\n                    >\n                      <option value=''>select</option>\n                      {this.createSelectItems()}\n                    </AvField>\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='masteritemname'>Item Code</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      Label\n                      name='masteritemname'\n                      type='Number'\n                      id='masteritemname'\n                      value={data.masteritemname}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter Item Code'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n              </Row>\n              <Row>\n                <Col sm={8}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='masteritemdescription'>Item Description</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      Label\n                      name='masteritemdescription'\n                      type='textarea'\n                      id='masteritemdescription'\n                      value={data.masteritemdescription}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter Item Description'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={4}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='masteritemshortdescription'>Short Description</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      Label\n                      name='masteritemshortdescription'\n                      type='textarea'\n                      id='masteritemshortdescription'\n                      value={data.masteritemshortdescription}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter Item Short Description'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n              </Row>\n              <Row>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='masteritemuom'>UOM</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      Label\n                      type='select'\n                      name='masteritemuom'\n                      onChange={this.onChange}\n                      required={true}\n                    >\n                      <option value=''>Please select value</option>\n                      {this.createSelectUomItems()}\n                    </AvField>\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='costperunit'>Unit Cost</Label>\n                    <AvField\n                      Label\n                      name='costperunit'\n                      type='number'\n                      id='costperunit'\n                      value={data.costperunit}\n                      onChange={this.onChange}\n\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='masteritemunitwt'>Unit weight in KG(per meter)</Label>\n                    <AvField\n                      Label\n                      name='masteritemunitwt'\n                      type='text'\n                      id='masteritemunitwt'\n                      value={data.masteritemunitwt}\n                      onChange={this.onChange}\n\n                    />\n                  </AvGroup>\n                </Col>\n              </Row>\n              <Row>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='permeter'>Weight per meter</Label>\n                    <AvField\n                      Label\n                      name='permeter'\n                      type='number'\n                      id='permeter'\n                      value={data.permeter || null}\n                      onChange={this.onChange2}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='perfeet'>Weight per feet</Label>\n                    <AvField\n                      readOnly\n                      className='small-font-size'\n                      name='perfeet'\n                      type='number'\n                      id='perfeet'\n                      value={data.perfeet || null}\n                      onChange={this.onChange}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='perinch'>Weight per inch</Label>\n                    <AvField\n                      readOnly\n                      className='small-font-size'\n                      name='perinch'\n                      type='number'\n                      id='perinch'\n                      value={data.perinch || null}\n                      onChange={this.onChange}\n                    />\n                  </AvGroup>\n                </Col>\n              </Row>\n              <Row>\n                <Col sm={6}>\n                  <AvGroup>\n                    {/* <Label className='small-font-size' for='masteritemimagefile'>Item Image</Label> */}\n                    {/* <span className=\"required-label\">*</span> */}\n        \n\n                    <AvField\n                      Label\n                      name='masteritemimagefile'\n                      type='file'\n                      id='masteritemimagefile'\n                      style={{'display':'none'}}\n                      onChange={this.fileSelectedHandler}\n                      accept='.png,.svg,.gif,.jpg,.jpeg'\n                    />\n                    <label for=\"masteritemimagefile\" style={{'color':'#379ccb','cursor':'pointer'}} >Click here to upload image</label>\n                    <div style={{'color':'#707070','fontSize':'12px'}}>{filename}</div>\n\n                  </AvGroup>\n                </Col>\n              </Row>\n            </CardBody>\n          </Card>\n          <div className='mg-20'>\n            <Button color='primary' disabled={loading} className='lgn-loader small-font-size'>\n              Submit\n              {/* {loading} */}\n            </Button>\n          </div>\n        </AvForm>\n      </div>\n    );\n  }\n}\n\nAddItemListForm.propTypes = {\n  submit: PropTypes.func.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    materialoptionlistvalues: state.masteritemtypenamevalue,\n    uomlistvalues: state.uomlistvalue,\n    masteritemlistvalues: state.masteritemlistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  null\n)(AddItemListForm);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { Button, Alert } from \"reactstrap\";\nimport { getMasterItemList } from \"../../../../actions/Transaction\";\nimport DataTable from \"../../../../Components/Table/DatatablePage\";\nimport CustomLoader from \"../../../../Components/loader/loader\";\n\nclass ViewMasterItemList extends React.Component {\n  state = {\n    loading: false,\n    masteritemlist: [],\n    count: 0\n  };\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n  componentDidMount() {\n    this.dataHandler(true);\n    this.props.getMasterItemList();\n  }\n\n  componentWillReceiveProps(props) {\n    let masteritemlistvalues = Object.values(props.masteritemlistvalues);\n    masteritemlistvalues= masteritemlistvalues.sort((a, b) => b.masteritemtypename.toString().toLowerCase().localeCompare(a.masteritemtypename.toString().toLowerCase()));\n    const masteritemlist = masteritemlistvalues.map((masteritemdata, i) => {\n      return {\n        masteritemtype: masteritemdata.masteritemtype.masteritemtypename,\n        masteritemtypename: masteritemdata.masteritemtypename,\n        masteritemdescription: masteritemdata.masteritemdescription,\n        masteritemshortdescription:masteritemdata.masteritemshortdescription,\n        masteritemuom: masteritemdata.masteritemuom.uomname,\n        // masteritemrate: masteritemdata.masteritemrate,\n        masteritemcostperunit: masteritemdata.masteritemcostperunit,\n        view: (\n          <Button\n            Label\n            color=\"primary\"\n            onClick={() => {\n              this.updateButton(masteritemdata.id);\n            }}\n          >\n            Edit\n          </Button>\n        )\n      };\n    });\n    const count = masteritemlistvalues.length;\n    this.setState({ ...this.state, masteritemlist, count });\n    this.dataHandler(false);\n  }\n\n  updateButton = id => {\n    let path = `/m_updateitemlist/${id}`;\n    this.props.history.push(path);\n  };\n\n  render() {\n    const { loading, count, masteritemlist } = this.state;\n    const columnvalue = [\n      {\n        label: \"Item Type\",\n        field: \"masteritemtype\",\n        sort: \"asc\",\n        width: 75\n      },\n      {\n        label: \"Item Code\",\n        field: \"masteritemtypename\",\n        sort: \"asc\",\n        width: 75\n      },\n      {\n        label: \"Item Description\",\n        field: \"masteritemdescription\",\n        sort: \"asc\",\n        width: 75\n      },\n      {\n        label: \"Short Description\",\n        field: \"masteritemshortdescription\",\n        sort: \"asc\",\n        width: 75\n      },\n      {\n        label: \"UOM\",\n        field: \"masteritemuom\",\n        sort: \"asc\",\n        width: 75\n      },\n      // {\n      //   label: \"Item Rate\",\n      //   field: \"masteritemrate\",\n      //   sort: \"asc\",\n      //   width: 50\n      // },\n      {\n        label: \"Unit Cost\",\n        field: \"masteritemcostperunit\",\n        sort: \"asc\",\n        width: 50\n      },\n      {\n        label: \"Edit\",\n        field: \"view\",\n        sort: \"asc\",\n        width: 100\n      }\n    ];\n    return (\n      <div className=\"container mg-20\">\n        {loading ? <CustomLoader /> : null}\n        {count > 0 ? (\n          <div>\n            <DataTable\n              columnvalue={columnvalue}\n              rowvalues={masteritemlist}\n              className=\"masteritemlist\"\n            />\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    masteritemlistvalues: state.masteritemlistvalues\n  };\n}\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    { getMasterItemList }\n  )(ViewMasterItemList)\n);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport MasterItemListForm from \"../Form/ItemList/AddItemListForm\";\nimport ViewMasterItemList from \"./ViewMasterItemList\";\nimport {\n  addMasterItemList,\n  getMasterItemList,\n  getMasterItemTypes\n} from \"../../../../actions/Transaction\";\nimport { getUomList } from \"../../../../actions/uom\";\nimport CustomLoader from \"../../../../Components/loader/loader\";\n\nclass AddmasterItemList extends React.Component {\n  state = {\n    loading: false\n  };\n  componentDidMount() {\n    this.props.getMasterItemTypes();\n    this.props.getUomList();\n    this.props.getMasterItemList();\n  }\n  submit = data => {\n    this.dataHandler(true);\n    return this.props.addMasterItemList(data).then(data => {\n      this.dataHandler(false);\n      this.props.getMasterItemList();\n      return data;\n    });\n  };\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n  render() {\n    const { loading } = this.state;\n    return (\n      <div className=\"container mg-t-20\">\n        {loading ? <CustomLoader /> : null}\n        <div>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to=\"/inventory_page\">Setup</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Item</BreadcrumbItem>\n          </Breadcrumb>\n        </div>\n        <div>\n          <MasterItemListForm submit={this.submit} error={this.errorHandler}/>\n        </div>\n        {loading ? (\n        <CustomLoader/>\n        ) : null}\n        {/* <div>\n          <ViewMasterItemList />\n        </div> */}\n      </div>\n    );\n  }\n}\n\nAddmasterItemList.propTypes = {\n  addMasterItemList: PropTypes.func.isRequired,\n  getMasterItemList: PropTypes.func.isRequired\n};\n\nexport default connect(\n  null,\n  { addMasterItemList, getMasterItemList, getUomList, getMasterItemTypes }\n)(AddmasterItemList);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport MasterItemListForm from \"../Form/ItemList/AddItemListForm\";\nimport ViewMasterItemList from \"./ViewMasterItemList\";\nimport {\n  addMasterItemList,\n  getMasterItemList\n} from \"../../../../actions/Transaction\";\nimport { getUomList } from \"../../../../actions/uom\";\n\nclass MasterItemListValues extends React.Component {\n  render() {\n    return (\n      <div class=\"container mg-t-20\">\n        <div>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to=\"/inventory_page\">Setup</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Item List</BreadcrumbItem>\n          </Breadcrumb>\n        </div>\n        <ViewMasterItemList />\n      </div>\n    );\n  }\n}\n\nexport default MasterItemListValues;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { AvForm, AvField, AvGroup } from 'availity-reactstrap-validation';\nimport {\n  Button,\n  Label,\n  Alert,\n  Card,\n  CardBody,\n  CardHeader,\n  Row,\n  Col,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from 'reactstrap';\nimport PropTypes from 'prop-types';\n\nclass UpdateItemListForm extends React.Component {\n  state = {\n    data: {\n      id: null,\n      masteritemtype: '',\n      masteritemname: '',\n      masteritemdescription: '',\n      masteritemshortdescription:'',\n      masteritemuom: '',\n      itemImage: '',\n      costperunit: null,\n      // masteritemrate: null,\n      masteritemunitwt: null,\n      masteritemimagefile: null,\n      permeter: null,\n      perfeet: null,\n      perinch: null\n    },\n    materialoptionlistvalues: [],\n    uom: [],\n    errors: {},\n    loading: false,\n    success: false,\n    imageChanged: false,\n    filename:''\n  };\n\n  componentDidMount() {\n    const id = this.props.id;\n    const materialoptionlistvalues = Object.values(\n      this.props.materialoptionlistvalues\n    );\n    const uomlistvalues = Object.values(this.props.uomlistvalues);\n    this.setState({\n      ...this.state,\n      materialoptionlistvalues,\n      uom: uomlistvalues\n    });\n  }\n\n  componentWillReceiveProps(props) {\n    const id = props.id;\n    const masteritemlistvalues = props.masteritemlistvalues[id];\n    console.log(masteritemlistvalues)\n    const data = {};\n    data.id = masteritemlistvalues.id;\n\n    data.masteritemname = masteritemlistvalues.masteritemtypename;\n    data.masteritemdescription = masteritemlistvalues.masteritemdescription;\n    data.masteritemshortdescription = masteritemlistvalues.masteritemshortdescription;\n    \n    data.permeter = masteritemlistvalues.permeter;\n    data.masteritemunitwt = masteritemlistvalues.masteritemunitwt;\n\n    data.perfeet =  masteritemlistvalues.permeter / 3.2808.toFixed(2)\n    data.perinch =  masteritemlistvalues.permeter / 39.3701.toFixed(2)\n    data.itemImage = masteritemlistvalues.masteritemimage != undefined && \n                     masteritemlistvalues.masteritemimage != null &&\n                     masteritemlistvalues.masteritemimage != '' ? `${process.env.REACT_APP_IMAGE_BASE_URL}` + '/' + masteritemlistvalues.masteritemimage : ''\n    \n    console.log(data.itemImage)\n    data.masteritemtype = masteritemlistvalues.masteritemtype._id;\n    data.masteritemuom = masteritemlistvalues.masteritemuom._id;\n    data.costperunit = masteritemlistvalues.masteritemcostperunit != undefined && \n                       masteritemlistvalues.masteritemcostperunit != null ? \n                      masteritemlistvalues.masteritemcostperunit.toString() : 0\n    const materialoptionlistvalues = Object.values(\n      props.materialoptionlistvalues\n    );\n    const uomlistvalues = Object.values(props.uomlistvalues);\n    this.setState({\n      ...this.state,\n      materialoptionlistvalues,\n      uom: uomlistvalues,\n      data\n    });\n  }\n\n  createSelectItems = () => {\n    let items = [];\n    const materialoptionlistvalues = this.state.materialoptionlistvalues;\n    materialoptionlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.masteritemtypename}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  createSelectUomItems = () => {\n    let items = [];\n    const uomlistvalues = this.state.uom;\n    uomlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.uomname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  onChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  onChange2 = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value,\n        perfeet : (e.target.value / 3.2808).toFixed(2),\n        perinch : (e.target.value / 39.3701).toFixed(2)\n       },\n\n    });\n  };\n\n\n  fileSelectedHandler = e => {\n    console.log(e.target.files[0]);\n    let masteritemimagefile = e.target.files[0];\n    let file_size = e.target.files[0].size / 1024 / 1024;\n    let file_name = e.target.files[0].name;\n    let file_type = e.target.files[0].type;\n    console.log(`${file_size} MB`);\n    console.log(file_name);\n    console.log(file_type);\n    if (Number(file_size) > 2) {\n      this.setState({ errors: { filesize: 'File Size is greater than 2MB' } });\n    }\n    if (!this.hasExtension(file_name, ['.jpg', '.jpeg', '.png'])) {\n      this.setState({ errors: { filesize: 'File format not supported' } });\n    }\n    this.setState({\n      ...this.state,\n      imageChanged: true,\n      filename: 'Attached file : ' + file_name,\n      data: {\n        ...this.state.data,\n        masteritemimagefile: e.target.files[0]\n      }\n    });\n  };\n  hasExtension(fileName, exts) {\n    return (new RegExp('(' + exts.join('|').replace(/\\./g, '\\\\.') + ')$')).test(fileName);\n  }\n\n  handleInvalidSubmit = () =>{\n    console.log(this.state.data)\n  }\n\n  handleValidSubmit = () => {\n\n    const { data, imageChanged } = this.state;\n    this.setState({ loading: true });\n    const formdata = new FormData();\n    if (imageChanged) {\n      formdata.append('imagefile', data.masteritemimagefile);\n    }\n    // formdata.append(\"imagefile\", data.masteritemimagefile);\n    // formdata.append(\"filename\", data.masteritemimagefile.name);\n    formdata.append('id', data.id);\n    formdata.append('masteritemtype', data.masteritemtype);\n    formdata.append('masteritemname', data.masteritemname);\n    formdata.append('masteritemdescription', data.masteritemdescription);\n    formdata.append('masteritemshortdescription', data.masteritemshortdescription);\n    \n    formdata.append('masteritemuom', data.masteritemuom);\n    formdata.append('masteritemcostperunit', data.costperunit);\n    formdata.append('masteritemrate', data.masteritemrate);\n    formdata.append('masteritemunitwt', data.masteritemunitwt);\n    formdata.append('permeter', data.permeter);\n    formdata.append('perfeet', data.perfeet);\n    formdata.append('perinch', data.perinch);\n    if (Object.keys(this.state.errors).length === 0) {\n      this.props\n        .submit(formdata)\n        .then(() => {\n          this.setState({ loading: false, errors: {}, success: true });\n        })\n        .catch(err => {\n          this.setState({ errors: err.response.data.errors, loading: false });\n        });\n    } else if (this.state.errors.filesize) {\n      alert(this.state.errors.filesize)\n      this.setState({ loading: false, errors: {} });\n    }\n  };\n\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n\n  render() {\n    const { data, errors, loading, success,filename } = this.state;\n    const itemimg = this.state.data.itemImage != '' ?\n    (<img src={data.itemImage} style={{'maxWidth': '150px','maxHeight' : '130px'}}/>) : ''\n    return (\n      <div>\n        <div>\n          {!!success ? (\n            // <Alert color=\"info\">Item is Updated successfully.</Alert>\n            <Modal\n              isOpen={success}\n              toggle={this.toggle}\n              className={this.props.className}\n            >\n              <ModalHeader  toggle={this.toggle}>Item</ModalHeader>\n              <ModalBody >Item is Updated successfully.</ModalBody>\n              <ModalFooter>\n                <Button color='primary' onClick={this.toggle}>\n                  Ok\n                </Button>\n              </ModalFooter>\n            </Modal>\n          ) : null}\n        </div>\n        <AvForm\n          encType='multipart/form-data'\n          onValidSubmit={this.handleValidSubmit}\n          onInvalidSubmit={this.handleInvalidSubmit}\n        >\n          <Card>\n            <CardHeader className='small-font-size-bold'>Add Item</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='masteritemtype'>Item Type</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      Label\n                      type='select'\n                      name='masteritemtype'\n                      onChange={this.onChange}\n                      required={true}\n                      value={data.masteritemtype || null}\n                    >\n                      <option value=''>select</option>\n                      {/* <option value=\"5d10915e7ba4981da4e679f6\">rawmaterial</option>\n                                                <option value=\"5d10908a7ba4981da4e679f5\">subassembly</option> */}\n                      {this.createSelectItems()}\n                    </AvField>\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='masteritemname'>Item Code</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      Label\n                      name='masteritemname'\n                      type='text'\n                      id='masteritemname'\n                      value={data.masteritemname || null}\n                      readOnly\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter Item Name'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n              </Row>\n              <Row>\n                <Col sm={8}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='masteritemdescription'>Item Description</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      Label\n                      name='masteritemdescription'\n                      type='textarea'\n                      id='masteritemdescription'\n                      value={data.masteritemdescription || null}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter Item Description'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={4}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='masteritemshortdescription'>Short Description</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      Label\n                      name='masteritemshortdescription'\n                      type='textarea'\n                      id='masteritemshortdescription'\n                      value={data.masteritemshortdescription}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter Item Short Description'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n              </Row>\n              <Row>\n\n                {/* <Col sm={6}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"masteritemrate\">Item Rate</Label>\n                    <AvField\n                      name=\"masteritemrate\"\n                      type=\"text\"\n                      id=\"masteritemrate\"\n                      value={data.masteritemrate}\n                      onChange={this.onChange}\n                      validate={{\n                        minLength: {\n                          value: 1,\n                          errorMessage:\n                            \"Item Rate must be between 1 and 16 characters\"\n                        },\n                        maxLength: {\n                          value: 150,\n                          errorMessage:\n                            \"Item Rate must be between 1 and 16 characters\"\n                        },\n                        pattern: {\n                          value: \"^[0-9]*$\",\n                          errorMessage: \"Please enter valid Item Rate\"\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col> */}\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='masteritemuom'>UOM</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      Label\n                      type='select'\n                      name='masteritemuom'\n                      onChange={this.onChange}\n                      required={true}\n                      value={data.masteritemuom || null}\n                    >\n                      <option value=''>Please select value</option>\n                      {/* <option value=\"kg\">Kg</option>\n                      <option value=\"liter\">Liter</option>\n                      <option value=\"kg\">EA</option> */}\n                      {this.createSelectUomItems()}\n                    </AvField>\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='costperunit'>Unit cost</Label>\n                    <AvField\n                      Label\n                      name='costperunit'\n                      type='number'\n                      id='costperunit'\n                      value={data.costperunit || null}\n                      onChange={this.onChange}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='masteritemunitwt'>Unit weight in KG(per meter)</Label>\n                    <AvField\n                      className='small-font-size'\n                      name='masteritemunitwt'\n                      type='text'\n                      id='masteritemunitwt'\n                      value={data.masteritemunitwt}\n                      onChange={this.onChange}\n\n                    />\n                  </AvGroup>\n                </Col>\n              </Row>\n              <Row>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='permeter'>Weight per meter</Label>\n                    <AvField\n                      Label\n                      name='permeter'\n                      type='number'\n                      id='permeter'\n                      value={data.permeter || null}\n                      onChange={this.onChange2}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='perfeet'>Weight per feet</Label>\n                    <AvField\n                      readOnly\n                      className='small-font-size'\n                      name='perfeet'\n                      type='number'\n                      id='perfeet'\n                      \n                      value={data.perfeet || null}\n                      onChange={this.onChange}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='perinch'>Weight per inch</Label>\n                    <AvField\n                      readOnly\n                      className='small-font-size'\n                      name='perinch'\n                      type='number'\n                      id='perinch'\n                      value={data.perinch || null}\n                      onChange={this.onChange}\n                    />\n                  </AvGroup>\n                </Col>\n              </Row>\n\n              <Row>\n                <Col sm={3}>\n                  <AvGroup>\n                    {/* <Label className='small-font-size' for='masteritemimagefile'>Item Image</Label> */}\n                    {/* <span className='required-label'>*</span> */}\n                    <AvField\n                      Label\n                      name='masteritemimagefile'\n                      type='file'\n                      id='masteritemimagefile'\n                      style={{'display':'none'}}\n                      onChange={this.fileSelectedHandler}\n                      accept='.png,.svg,.gif,.jpg,.jpeg'\n                    />\n                    <label for=\"masteritemimagefile\" style={{'color':'#379ccb','cursor':'pointer'}} >Click here to upload image</label>\n                    <div style={{'color':'#707070','fontSize':'12px'}}>{filename}</div>\n                  </AvGroup>\n                </Col>\n\n                 <Col sm={6}>\n                {itemimg}\n                </Col>\n              </Row>\n            </CardBody>\n          </Card>\n          <div className='mg-20'>\n            <Button color='primary' disabled={loading} className='lgn-loader'>\n              Submit\n              {/* {loading} */}\n            </Button>\n          </div>\n        </AvForm>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    materialoptionlistvalues: state.masteritemtypenamevalue,\n    uomlistvalues: state.uomlistvalue,\n    masteritemlistvalues: state.masteritemlistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  {}\n)(UpdateItemListForm);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport UpdateMasterItemListForm from \"../Form/ItemList/UpdateItemListForm\";\nimport { updatemasteritemlist } from \"../../../../actions/Transaction\";\nimport {\n  addMasterItemList,\n  getMasterItemList,\n  getMasterItemTypes\n} from \"../../../../actions/Transaction\";\nimport { getUomList } from \"../../../../actions/uom\";\nimport CustomLoader from \"../../../../Components/loader/loader\";\n\nclass UpdateMasterItemList extends React.Component {\n  state = {\n    id: \"\",\n    loading: false\n  };\n  componentDidMount() {\n    this.props.getMasterItemTypes();\n    this.props.getUomList();\n    this.props.getMasterItemList();\n    const id = this.props.match.params.id;\n    this.setState({ ...this.state, id });\n  }\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n  submit = data => {\n    this.dataHandler(true);\n    return this.props.updatemasteritemlist(data).then(data => {\n      this.dataHandler(false);\n      return data;\n    });\n  };\n  render() {\n    const { id, loading } = this.state;\n    return (\n      <div className=\"container mg-t-20\">\n        {loading ? <CustomLoader /> : null}\n        <div>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to=\"/admin_dashboard\">Home</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link to=\"/mitemlistvalues\">Item List</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Update Item</BreadcrumbItem>\n          </Breadcrumb>\n        </div>\n        <div>\n          <UpdateMasterItemListForm id={id} submit={this.submit} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  {\n    updatemasteritemlist,\n    addMasterItemList,\n    getMasterItemList,\n    getMasterItemTypes,\n    getUomList\n  }\n)(UpdateMasterItemList);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport { Button, Label, Alert } from \"reactstrap\";\nimport {\n  Card,\n  CardBody,\n  CardHeader,\n  Row,\n  Col,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from \"reactstrap\";\n\nclass MasterItemTypeForm extends React.Component {\n  state = {\n    data: {\n      itemtype: \"\"\n    },\n    errors: {},\n    loading: false,\n    success: false\n  };\n  onChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  handleValidSubmit = () => {\n    console.log(this.state.data);\n    this.setState({ loading: true });\n    this.props\n      .submit(this.state.data)\n      .then(() => {\n        this.setState({ loading: false, errors: {}, success: true });\n        this.myFormRef.reset();\n      })\n      .catch(err => {\n        this.setState({ errors: err.response.data.errors, loading: false });\n      });\n  };\n\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n\n  render() {\n    const { data, errors, loading, success } = this.state;\n    return (\n      <div>\n        {!!success ? (\n          // <Alert color=\"info\">Item Type data is Added successfully</Alert>\n          <Modal\n            isOpen={success}\n            toggle={this.toggle}\n            className={this.props.className}\n          >\n            <ModalHeader toggle={this.toggle}>Item Type</ModalHeader>\n            <ModalBody>Item Type data is Added successfully</ModalBody>\n            <ModalFooter>\n              <Button color=\"primary\" onClick={this.toggle}>\n                Ok\n              </Button>\n            </ModalFooter>\n          </Modal>\n        ) : null}\n        {!!errors.MasterItemTypename ? (\n          <Alert color=\"danger\">Item Type data already exist.</Alert>\n        ) : null}\n        <AvForm\n          onValidSubmit={this.handleValidSubmit}\n          onInvalidSubmit={this.handleInvalidSubmit}\n          ref={el => (this.myFormRef = el)}\n        >\n          <Card>\n            <CardHeader>Add Item Type</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={6}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"masteritemtype\">Item Type</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      name=\"itemtype\"\n                      type=\"text\"\n                      id=\"masteritemtype\"\n                      value={data.option}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: \"Please enter Item Type\"\n                        },\n                  \n                        pattern: {\n                          value: \"^[a-zA-Z]+$\",\n                          errorMessage: \"Please enter valid Item Type name\"\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={6}>\n                  <AvGroup className=\"mg-20\">\n                    <Button\n                      color=\"primary\"\n                      disabled={loading}\n                      className=\"lgn-loader\"\n                    >\n                      Submit\n                      {/* {loading} */}\n                    </Button>\n                  </AvGroup>\n                </Col>\n              </Row>\n            </CardBody>\n          </Card>\n        </AvForm>\n      </div>\n    );\n  }\n}\n\nMasterItemTypeForm.propTypes = {\n  submit: PropTypes.func.isRequired\n};\n\nexport default MasterItemTypeForm;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport { MDBBtn } from \"mdbreact\";\nimport PropTypes from \"prop-types\";\nimport DataTable from \"../../../../Components/Table/DatatablePage\";\nimport MasterItemTypeForm from \"../Form/MasterItemTypeForm\";\nimport { connect } from \"react-redux\";\nimport {\n  addMasterItemType,\n  getMasterItemTypes\n} from \"../../../../actions/Transaction\";\nimport CustomLoader from \"../../../../Components/loader/loader\";\n\nclass MasterItemType extends React.Component {\n  state = {\n    loading: false\n  };\n  submit = data => {\n    this.dataHandler(true);\n    return this.props.addMasterItemType(data).then(data => {\n      this.dataHandler(false);\n      this.props.getMasterItemTypes();\n      return data;\n    });\n  };\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n  render() {\n    const { loading } = this.state;\n    return (\n      <div className=\"container mg-t-20\">\n        {loading ? <CustomLoader /> : null}\n        <div>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to=\"/inventory_page\">Setup</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Item Type</BreadcrumbItem>\n          </Breadcrumb>\n        </div>\n        <div>\n          <MasterItemTypeForm submit={this.submit} />\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    masteritemtypenamevalue: state.masteritemtypenamevalue\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { addMasterItemType, getMasterItemTypes }\n)(MasterItemType);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport { MDBBtn } from \"mdbreact\";\nimport DataTable from \"../../../../Components/Table/DatatablePage\";\nimport CustomLoader from \"../../../../Components/loader/loader\";\nimport { connect } from \"react-redux\";\nimport {\n  addMasterItemType,\n  getMasterItemTypes\n} from \"../../../../actions/Transaction\";\n\nclass ItemMasterTypeList extends React.Component {\n  state = {\n    loading: false,\n    count: \"\",\n    masteritemtypesvalues: []\n  };\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n  componentDidMount() {\n    this.dataHandler(true);\n    this.props.getMasterItemTypes();\n  }\n  componentWillReceiveProps(props) {\n    const masteritemtypenamevaluelist = Object.values(\n      props.masteritemtypenamevalue\n    );\n    const masteritemtypesvalues = masteritemtypenamevaluelist.map(\n      (masteritemtypedata, i) => {\n        return {\n          masteritemtypename: masteritemtypedata.masteritemtypename,\n          view: (\n            <MDBBtn\n              color=\"info\"\n              size=\"sm\"\n              onClick={() => {\n                this.updateButton(masteritemtypedata.id);\n              }}\n            >\n              view / Edit\n            </MDBBtn>\n          )\n        };\n      }\n    );\n    const count = masteritemtypesvalues.length;\n    this.setState({ ...this.state, masteritemtypesvalues, count });\n    this.dataHandler(false);\n  }\n  updateButton = id => {\n    let path = `/update_mitemtype/${id}`;\n    this.props.history.push(path);\n  };\n  render() {\n    const { loading, count, masteritemtypesvalues } = this.state;\n    const columnvalue = [\n      {\n        label: \"Item Types\",\n        field: \"masteritemtypename\",\n        sort: \"asc\",\n        width: 100\n      },\n      {\n        label: \"View/Edit\",\n        field: \"view\",\n        sort: \"asc\",\n        width: 100\n      }\n    ];\n    return (\n      <div className=\"container mg-t-20\">\n        {loading ? <CustomLoader /> : null}\n        <div>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to=\"/inventory_page\">Setup</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Item List</BreadcrumbItem>\n          </Breadcrumb>\n        </div>\n        <div>\n          {count > 0 && (\n            <div>\n              <DataTable\n                columnvalue={columnvalue}\n                rowvalues={masteritemtypesvalues}\n              />\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    masteritemtypenamevalue: state.masteritemtypenamevalue\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { addMasterItemType, getMasterItemTypes }\n)(ItemMasterTypeList);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport {\n  Button,\n  Label,\n  Alert,\n  Card,\n  CardBody,\n  CardHeader,\n  Row,\n  Col,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from \"reactstrap\";\n\nclass UpdateMasterItemTypeForm extends React.Component {\n  state = {\n    data: {\n      id: this.props.masteritemtypenamevalue.id,\n      masteritemtypename: this.props.masteritemtypenamevalue.masteritemtypename\n    },\n    errors: {},\n    loading: false,\n    success: false\n  };\n  onChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  componentWillReceiveProps(props) {\n    const dataRecord = props.masteritemtypenamevalue;\n    this.setState({ ...this.state.data, data: dataRecord });\n  }\n\n  handleValidSubmit = () => {\n    this.setState({ loading: true });\n    this.props\n      .submit(this.state.data)\n      .then(() => {\n        this.setState({ loading: false, errors: {}, success: true });\n        // this.myFormRef.reset();\n      })\n      .catch(err => {\n        this.setState({ errors: err.response.data.errors, loading: false });\n      });\n  };\n\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n\n  render() {\n    const { data, errors, loading, success } = this.state;\n    console.log(data);\n    return (\n      <div>\n        {!!success ? (\n          // <Alert color=\"info\">Item Type is updated successfully</Alert>\n          <Modal\n            isOpen={success}\n            toggle={this.toggle}\n            className={this.props.className}\n          >\n            <ModalHeader toggle={this.toggle}>Item Type</ModalHeader>\n            <ModalBody>Item Type data is Updated successfully</ModalBody>\n            <ModalFooter>\n              <Button color=\"primary\" onClick={this.toggle}>\n                Ok\n              </Button>{\" \"}\n         \n            </ModalFooter>\n          </Modal>\n        ) : null}\n        {!!errors.MasterItemTypename ? (\n          <Alert color=\"danger\">Item data already exist.</Alert>\n        ) : null}\n        {!!errors.global ? (\n          <Alert color=\"danger\">\n            Something went wrong,Please try again later.\n          </Alert>\n        ) : null}\n        <AvForm\n          onValidSubmit={this.handleValidSubmit}\n          onInvalidSubmit={this.handleInvalidSubmit}\n          ref={el => (this.myFormRef = el)}\n        >\n          <Card>\n            <CardHeader>Update Item</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={6}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"item\">Item</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      name=\"masteritemtypename\"\n                      type=\"text\"\n                      id=\"item\"\n                      value={data.masteritemtypename}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: \"Please enter Item name\"\n                        },\n                   \n                        pattern: {\n                          value: \"^[a-zA-Z]+$\",\n                          errorMessage: \"Please enter valid item name\"\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n              </Row>\n            </CardBody>\n          </Card>\n          <div className=\"mg-20\">\n            <Button color=\"primary\" disabled={loading} className=\"lgn-loader\">\n              update\n              {/* {loading} */}\n            </Button>\n          </div>\n        </AvForm>\n      </div>\n    );\n  }\n}\n\nUpdateMasterItemTypeForm.propTypes = {\n  submit: PropTypes.func.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    masteritemtypenamevalueobjectlist: state.masteritemtypenamevalue\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  {}\n)(UpdateMasterItemTypeForm);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport UpdateMasterItemTypeForm from \"../Form/UpdateMasterItemTypeForm\";\nimport {\n  getMasterItemTypes,\n  updateMasterItemTypes\n} from \"../../../../actions/Transaction\";\nimport CustomLoader from \"../../../../Components/loader/loader\";\n\nclass UpdateItemMasterType extends React.Component {\n  state = {\n    loading: false,\n    masteritemtypenamevalue: {}\n  };\n  componentDidMount() {\n    this.props.getMasterItemTypes();\n    const masteritemid = this.props.match.params.id;\n    const masteritemtypenamevalue = this.props.masteritemtypenamevalue[\n      masteritemid\n    ];\n    this.setState({ masteritemtypenamevalue });\n  }\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n  submit = data => {\n    this.dataHandler(true);\n    return this.props.updateMasterItemTypes(data).then(data => {\n      this.dataHandler(false);\n      return data;\n    });\n  };\n  render() {\n    const { loading, masteritemtypenamevalue } = this.state;\n\n    return (\n      <div className=\"mg-t-20 container\">\n        {loading ? <CustomLoader /> : null}\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to=\"/admin_dashboard\">Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/inventory_page\">Setup</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/masteritemtypelist\">Item Type</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>Update Item </BreadcrumbItem>\n        </Breadcrumb>\n        <div>\n          <UpdateMasterItemTypeForm\n            submit={this.submit}\n            masteritemtypenamevalue={masteritemtypenamevalue}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    masteritemtypenamevalue: state.masteritemtypenamevalue\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { getMasterItemTypes, updateMasterItemTypes }\n)(UpdateItemMasterType);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport {\n  Button,\n  Label,\n  Alert,\n  Card,\n  CardBody,\n  CardHeader,\n  Row,\n  Col,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from \"reactstrap\";\nimport CustomLoader from \"../loader/loader\";\n\nclass EditTable extends React.Component {\n  state = {\n    data: {\n      poid: null,\n      ponumber: null,\n      poitemid: [],\n      itemid: [],\n      itemuom: [],\n      itemquantity: [],\n      receivedqty: [],\n      recevingqty: [],\n      itemlocation: [],\n      totalqty: [],\n      date: []\n    },\n    receiptnumber: null,\n    selectedItem: [],\n    locationlistvalue: [],\n    sucess: false,\n    errors: {},\n    uomlistvalues: [],\n    loading: false,\n    loadingvalue: false,\n    visible: false\n  };\n  componentDidMount() {\n    const locationlistvalue = Object.values(this.props.locationlistvalue);\n    const uomlistvalues = Object.values(this.props.uomlistvalues);\n    const ponumber = this.props.ponumber;\n    const poid = this.props.poid;\n    const selectedItemlistvalues = this.props.selectedItem;\n    const poitemid = selectedItemlistvalues.map(selectedItem => {\n      return selectedItem.poitemid;\n    });\n    const itemuom = selectedItemlistvalues.map(selectedItem => {\n      return selectedItem.itemuom;\n    });\n    const itemid = selectedItemlistvalues.map(selectedItem => {\n      return selectedItem.itemid;\n    });\n    const itemlocation = selectedItemlistvalues.map(selectedItem => {\n      return selectedItem.itemlocation;\n    });\n    const receivedqty = selectedItemlistvalues.map(selectedItem => {\n      return selectedItem.receivedqty.toString();\n    });\n    const itemquantity = selectedItemlistvalues.map(selectedItem => {\n      return selectedItem.quantity.toString();\n    });\n    const totalqty = selectedItemlistvalues.map(selectedItem => {\n      const recevingqtyvalue =\n        parseFloat(selectedItem.quantity) -\n        parseFloat(selectedItem.receivedqty);\n      return recevingqtyvalue + selectedItem.receivedqty;\n    });\n    const recevingqty = selectedItemlistvalues.map(selectedItem => {\n      const recevingqtyvalue =\n        parseFloat(selectedItem.quantity) -\n        parseFloat(selectedItem.receivedqty);\n      return recevingqtyvalue.toString();\n    });\n    this.setState({\n      ...this.state,\n      locationlistvalue,\n      uomlistvalues,\n      data: {\n        poid,\n        ponumber,\n        poitemid,\n        itemid,\n        itemuom,\n        itemlocation,\n        itemquantity,\n        receivedqty,\n        recevingqty,\n        totalqty\n      },\n      selectedItem: selectedItemlistvalues\n    },()=>{\n      sessionStorage.setItem('SelectedItem',JSON.stringify(this.state.selectedItem))\n    });\n  }\n  componentWillReceiveProps(props) {\n    const locationlistvalue = Object.values(props.locationlistvalue);\n    const uomlistvalues = Object.values(props.uomlistvalues);\n    const poid = props.poid;\n    const ponumber = props.ponumber;\n    const selectedItemlistvalues = props.selectedItem;\n    const poitemid = selectedItemlistvalues.map(selectedItem => {\n      return selectedItem.poitemid;\n    });\n    const itemid = selectedItemlistvalues.map(selectedItem => {\n      return selectedItem.itemid;\n    });\n    const itemuom = selectedItemlistvalues.map(selectedItem => {\n      return selectedItem.itemuom;\n    });\n    const itemlocation = selectedItemlistvalues.map(selectedItem => {\n      return selectedItem.itemlocation;\n    });\n    const itemquantity = selectedItemlistvalues.map(selectedItem => {\n      return selectedItem.quantity.toString();\n    });\n    const receivedqty = selectedItemlistvalues.map(selectedItem => {\n      return selectedItem.receivedqty.toString();\n    });\n    const recevingqty = selectedItemlistvalues.map(selectedItem => {\n      const recevingqtyvalue =\n        parseFloat(selectedItem.quantity) -\n        parseFloat(selectedItem.receivedqty);\n      return recevingqtyvalue.toString();\n    });\n    const totalqty = selectedItemlistvalues.map(selectedItem => {\n      const recevingqtyvalue =\n        parseFloat(selectedItem.quantity) -\n        parseFloat(selectedItem.receivedqty);\n      return recevingqtyvalue + selectedItem.receivedqty;\n    });\n    this.setState({\n      ...this.state,\n      locationlistvalue,\n      uomlistvalues,\n      data: {\n        poid,\n        ponumber,\n        poitemid,\n        itemid,\n        itemuom,\n        itemlocation,\n        itemquantity,\n        receivedqty,\n        recevingqty,\n        totalqty\n      },\n      selectedItem: selectedItemlistvalues\n    },()=>{\n      sessionStorage.setItem('SelectedItem',JSON.stringify(this.state.selectedItem))\n    });\n  }\n  createSelectUomItems = () => {\n    let items = [];\n    const uomlistvalues = this.state.uomlistvalues;\n    uomlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.uomname}\n        </option>\n      );\n    });\n    return items;\n  };\n  createSelectLocationItems = () => {\n    let items = [];\n    const locationlistvalue = this.state.locationlistvalue;\n    locationlistvalue.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.locationname}\n        </option>\n      );\n    });\n    return items;\n  };\n  locationChange = (e, index) => {\n    const selected_location = e.target.value;\n    const itemlocation = [...this.state.data.itemlocation];\n    itemlocation[index] = selected_location;\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        itemlocation\n      }\n    });\n  };\n  quantityChange = (e, index) => {\n    const selected_qty = e.target.value;\n    const recevingqty = [...this.state.data.recevingqty];\n    const totalqty = [...this.state.data.totalqty];\n    const receivedqty = [...this.state.data.receivedqty];\n    recevingqty[index] = selected_qty;\n    totalqty[index] =\n      parseFloat(receivedqty[index]) + parseFloat(recevingqty[index]);\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        recevingqty,\n        totalqty\n      }\n    });\n  };\n  onShowAlert = () => {\n    this.setState({ visible: true }, () => {\n      window.setTimeout(() => {\n        this.setState({ visible: false });\n      }, 5000);\n    });\n  };\n  handleValidSubmit = () => {\n    this.dataHandler(true);\n    let data = {};\n    let AddedIteminfo = [];\n    const {\n      poid,\n      ponumber,\n      poitemid,\n      itemid,\n      itemuom,\n      itemquantity,\n      receivedqty,\n      recevingqty,\n      itemlocation,\n      totalqty,\n      date\n    } = this.state.data;\n    data.ponumber = ponumber;\n    data.poid = poid;\n    itemid.forEach(function(id, i) {\n      let obj = {};\n      obj.poitemid = poitemid[i];\n      obj.itemid = itemid[i];\n      obj.itemuom = itemuom[i];\n      obj.itemquantity = itemquantity[i];\n      obj.receivedqty = receivedqty[i];\n      obj.recevingqty = recevingqty[i];\n      obj.itemlocation = itemlocation[i];\n      obj.totalqty = totalqty[i];\n      AddedIteminfo.push(obj);\n    });\n    data.iteminfo = AddedIteminfo;\n    this.props\n      .itemlistsubmit(data)\n      .then(data => {\n        this.onShowAlert();\n        this.dataHandler(false);\n        this.setState({\n          success: true,\n          loading: false,\n          receiptnumber: data.receiptnumber\n        });\n      })\n      .catch(err => {\n        this.dataHandler(false);\n        this.setState({ errors: err.response.data.error, loading: false });\n      });\n  };\n\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n\n  dataHandler = value => {\n    this.setState({ loadingvalue: value });\n  };\n\n  render() {\n    // const { selectedItem } = this.props;\n    const {\n      loading,\n      data,\n      success,\n      errors,\n      selectedItem,\n      receiptnumber,\n      visible,\n      loadingvalue\n    } = this.state;\n    const tableBody = selectedItem.map((itemlist, i) => {\n      let nowDate = new Date();\n      let date =\n        nowDate.getDate() +\n        \"/\" +\n        (nowDate.getMonth() + 1) +\n        \"/\" +\n        nowDate.getFullYear();\n      return (\n        <tr key={itemlist.poitemid}>\n          <td>{i + 1}</td>\n          <td>{itemlist.itemname}</td>\n          <td>{itemlist.itemdescription}</td>\n          <td>\n            <AvField\n              type=\"select\"\n              name={`uom${i}`}\n              onChange={this.onChange}\n              required={true}\n              value={itemlist.itemuom || \" \"}\n            >\n              <option value=\"\">uom</option>\n              {this.createSelectUomItems()}\n            </AvField>\n          </td>\n          <td>{itemlist.quantity}</td>\n          <td>{itemlist.receivedqty}</td>\n          <td>\n            <AvField\n              name={`quantity${i}`}\n              type=\"number\"\n              id={`quantity${i}`}\n              value={itemlist.recevingqty.toString() || null}\n              min={0}\n              max={itemlist.recevingqty}\n              onChange={e => this.quantityChange(e, i)}\n              validate={{\n                required: {\n                  value: true,\n                  errorMessage: \"Please enter Item Quantity\"\n                },\n                minLength: {\n                  value: 1,\n                  errorMessage: \"quantity value is required\"\n                },\n                pattern: {\n                  value: \"^[0-9.]*$\",\n                  errorMessage: \"Please enter valid quantity\"\n                }\n              }}\n            />\n          </td>\n          <td>\n            <AvField\n              type=\"select\"\n              name={`location${i}`}\n              onChange={e => this.locationChange(e, i)}\n              required={true}\n              value={itemlist.itemlocation}\n            >\n              {this.createSelectLocationItems()}\n            </AvField>\n          </td>\n          <td>{date}</td>\n        </tr>\n      );\n    });\n\n    return (\n      <div className=\"container mg-t-20\">\n        {loadingvalue ? <CustomLoader /> : null}\n        {success && (\n          // <Alert color=\"info\" isOpen={visible}>\n          //   Receipt {receiptnumber} created Successfully\n          // </Alert>\n          <Modal\n            isOpen={success}\n            toggle={this.toggle}\n            className={this.props.className}\n          >\n            <ModalHeader toggle={this.toggle}>Item Type</ModalHeader>\n            <ModalBody>Receipt {receiptnumber} created Successfully</ModalBody>\n            <ModalFooter>\n              <Button color=\"primary\" onClick={this.toggle}>\n                Ok\n              </Button>\n            </ModalFooter>\n          </Modal>\n        )}\n        {!!errors.global ? <Alert color=\"danger\">{errors.global}</Alert> : null}\n        <AvForm\n          onValidSubmit={this.handleValidSubmit}\n          onInvalidSubmit={this.handleInvalidSubmit}\n        >\n          <Card>\n            <CardBody>\n              <table className=\"table table-bordered\">\n                <thead>\n                  <tr>\n                    <th>SI No</th>\n                    <th>Item Name</th>\n                    <th>Item Description</th>\n                    <th>UOM</th>\n                    <th>PO Qty</th>\n                    <th>Received Qty</th>\n                    <th>Receiving Qty</th>\n                    <th>location</th>\n                    <th>Date</th>\n                  </tr>\n                </thead>\n                <tbody>{tableBody}</tbody>\n              </table>\n              <div className=\"mg-20\">\n                <Button\n                  color=\"primary\"\n                  disabled={loading}\n                  className=\"lgn-loader\"\n                >\n                  Submit\n                  {/* {loading} */}\n                </Button>\n              </div>\n            </CardBody>\n          </Card>\n        </AvForm>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    locationlistvalue: state.locationlistvalue,\n    uomlistvalues: state.uomlistvalue\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  null\n)(EditTable);\n","import axios from \"axios\";\n\nexport default {\n  location: {\n    getLocationList: () => {\n      return axios\n        .get(`${process.env.REACT_APP_BASE_URL}/location/getlocation`)\n        .then(res => {\n          return res.data.locationlist;\n        });\n    }\n  }\n};\n","import { normalize } from \"normalizr\";\nimport api from \"../Services/locationapi\";\nimport { Location_LIST } from \"../Services/types\";\nimport { locationListSchema } from \"../Schemas/schemas\";\n\nfunction locationListFetched(locationlist) {\n  return {\n    type: Location_LIST,\n    locationlist\n  };\n}\n\nexport const getLocationList = () => {\n  return dispatch => {\n    return api.location.getLocationList().then(locationlist => {\n      const locationlistvalue = locationlist.locationdata;\n      return dispatch(\n        locationListFetched(normalize(locationlistvalue, [locationListSchema]))\n      );\n    });\n  };\n};\n","import React from \"react\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport {\n  Card,\n  CardBody,\n  CardHeader,\n  Row,\n  Col,\n  Button,\n  Label,\n  Alert\n} from \"reactstrap\";\n\nclass ReceiptScreenForm extends React.Component {\n  state = {\n    data: {\n      ponumber: null\n    },\n    errors: {},\n    loading: false,\n    success: false\n  };\n\n  onChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  onhandleChange = e => {\n    this.setState({\n      ...this.state,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  handleValidSubmit = () => {\n    console.log(this.state.data);\n    this.setState({ loading: true });\n    this.props\n      .submit(this.state.data)\n      .then(() => {\n        this.setState({ loading: false, errors: {}, success: true });\n        this.myFormRef.reset();\n      })\n      .catch(err => {\n        // eslint-disable-next-line prettier/prettier\n        this.setState({ errors: err.response.data.errors, loading: false, success: false });\n      });\n  };\n\n  render() {\n    const { data, errors, loading, success } = this.state;\n\n    return (\n      <div className=\"container mg-t-20\">\n        <div>\n          <AvForm\n            onValidSubmit={this.handleValidSubmit}\n            onInvalidSubmit={this.handleInvalidSubmit}\n            ref={el => (this.myFormRef = el)}\n          >\n            <Card>\n              <CardHeader Label>Receipt Contact</CardHeader>\n              <CardBody>\n                <Row>\n                  <Col sm={2}>\n                    {!!errors.global ? (\n                      <Alert color=\"danger\" Label>Result Not Found</Alert>\n                    ) : null}\n                    <AvGroup>\n                      <Label className='small-font-size' for=\"fullname\" Label>PO Number</Label>\n                      <span className=\"required-label\">*</span>\n                      <AvField\n                        Label\n                        name=\"ponumber\"\n                        type=\"number\"\n                        id=\"ponumber\"\n                        value={data.ponumber}\n                        onChange={this.onChange}\n                      />\n                    </AvGroup>\n                  </Col>\n                  <Col sm={6}>\n                    <Button\n                      color=\"primary\"\n                      disabled={loading}\n                      className=\"lgn-loader small-font-size\"\n                      style={{ marginTop: \"30px\" }}\n                    >\n                      Find\n                      {/* {loading} */}\n                    </Button>\n                  </Col>\n                </Row>\n              </CardBody>\n            </Card>\n          </AvForm>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ReceiptScreenForm;\n","import React from \"react\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport { Card, CardBody, CardHeader } from \"reactstrap\";\n\nclass ReceiptTable extends React.Component {\n  state = {\n    receiptlistitems: []\n  };\n  componentDidMount() {\n    const receiptlistitems = this.props.itemlist;\n    this.setState({\n      ...this.state,\n      receiptlistitems\n    });\n  }\n\n  componentWillReceiveProps(props) {\n    const receiptlistitems = props.itemlist;\n    this.setState({\n      ...this.state,\n      receiptlistitems\n    });\n  }\n  render() {\n    const { receiptlistitems } = this.state;\n    const receiptlisttable = receiptlistitems.map((receiptvalue, i) => {\n      let loc = receiptvalue.itemlocation ? receiptvalue.itemlocation.locationname : '-'\n      let nowDate = new Date(receiptvalue.date);\n      let date =\n        nowDate.getDate() +\n        \"/\" +\n        (nowDate.getMonth() + 1) +\n        \"/\" +\n        nowDate.getFullYear();\n      return (\n        <tr key={receiptvalue.id}>\n          <td>{i + 1}</td>\n          <td>{receiptvalue.itemid.masteritemname}</td>\n          <td>{receiptvalue.itemid.masteritemdescription}</td>\n          <td>{receiptvalue.itemuom.uomname}</td>\n          <td>{receiptvalue.itemquantity}</td>\n          <td>{receiptvalue.recevingqty}</td>\n          <td>{loc}</td>\n          <td>{date}</td>\n        </tr>\n      );\n    });\n    return (\n      <div>\n        <table className=\"table table-bordered\">\n          <thead>\n            <tr>\n              <th>SI No</th>\n              <th>Item Name</th>\n              <th>Item Description</th>\n              <th>UOM</th>\n              <th>PO Qty</th>\n              <th>Received Qty</th>\n              <th>location</th>\n              <th>Date</th>\n            </tr>\n          </thead>\n          <tbody>{receiptlisttable}</tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default ReceiptTable;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport async from \"async\";\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Alert,\n  Card,\n  CardBody,\n  CardHeader,\n  Button\n} from \"reactstrap\";\nimport EditTable from \"../../../../Components/EditTable/EditTable\";\nimport {\n  getPurchaseOrder,\n  searchPoNumber,\n  addorupdateitemsinlocation,\n  getReceiptlist\n} from \"../../../../actions/Transaction\";\nimport { getLocationList } from \"../../../../actions/Location\";\nimport { getUomList } from \"../../../../actions/uom\";\nimport ReceiptScreenForm from \"./ReceiptScreenForm/ReceiptScreenForm\";\nimport ReceiptTable from \"./ReceiptScreenForm/ReceiptTable\";\nimport CustomLoader from \"../../../../Components/loader/loader\";\n\nclass ReceiptScreen extends React.Component {\n  state = {\n    count: 0,\n    poid: null,\n    ponumber: null,\n    selectedItem: [],\n    success: false,\n    receiptlistitems: [],\n    loading: false\n  };\n  componentDidMount() {\n    this.props.getPurchaseOrder();\n    this.props.getLocationList();\n    this.props.getUomList();\n    const purchaseorderlist = Object.values(this.props.purchaseorderlistvalues);\n    const count = purchaseorderlist.length;\n    this.setState({ count });\n  }\n  componentWillReceiveProps(props) {\n    const purchaseorderlist = Object.values(props.purchaseorderlistvalues);\n    const count = purchaseorderlist.length;\n    this.setState({ count });\n  }\n  submit = data => {\n    this.dataHandler(true);\n    this.props.getReceiptlist(data).then(receiptlist => {\n      this.dataHandler(false);\n      const receiptlistitems = receiptlist.receiptlist.map(receiptvalue => {\n        return receiptvalue;\n      });\n      this.setState({\n        ...this.state,\n        receiptlistitems: receiptlistitems\n      });\n    });\n\n    return this.props\n      .searchPoNumber(data)\n      .then(podata => {\n        this.dataHandler(false);\n        const selectedItem = podata.addeditemlist.map(poItem => {\n          return {\n            poitemid: poItem._id,\n            itemid: poItem.id,\n            costperunit: poItem.costperunit,\n            itemdescription: poItem.itemdescription,\n            itemlocation: poItem.itemlocation,\n            itemname: poItem.itemname,\n            itemtype: poItem.itemtype,\n            itemuom: poItem.itemuom,\n            receivedqty: poItem.receivedqty,\n            recevingqty: parseFloat(poItem.receivedqty)\n              ? parseFloat(poItem.quantity) - parseFloat(poItem.receivedqty)\n              : parseFloat(poItem.quantity),\n            quantity: poItem.quantity,\n            totalcost: poItem.totalcost\n          };\n        });\n        const ponumber = data.ponumber;\n        const poid = podata._id;\n        this.setState({\n          ...this.state,\n          selectedItem,\n          ponumber,\n          poid,\n          success: true\n        });\n        return podata;\n      })\n      .catch(err => {\n        this.dataHandler(false);\n        this.setState({ ...this.state, success: false });\n        throw err;\n      });\n  };\n\n  itemlistsubmit = data => {\n    const datavalue = {};\n    datavalue.ponumber = data.ponumber;\n    this.dataHandler(true);\n    this.props.getReceiptlist(datavalue).then(receiptlist => {\n      this.dataHandler(false);\n      if (receiptlist) {\n        const receiptlistitems = receiptlist.receiptlist.map(receiptvalue => {\n          return receiptvalue;\n        });\n        this.setState({\n          ...this.state,\n          receiptlistitems: receiptlistitems\n        });\n      }\n    });\n\n    return this.props\n      .addorupdateitemsinlocation(data)\n      .then(async data => {\n        this.dataHandler(false);\n        const receiptlist = await this.props.getReceiptlist(datavalue);\n        const searchporesult = await this.props.searchPoNumber(datavalue);\n        data = {\n          searchdata: data,\n          receiptlist: receiptlist,\n          searchporesult: searchporesult\n        };\n        return data;\n      })\n      .then(data => {\n        console.log(data);\n        const receiptlistitems = data.receiptlist.receiptlist.map(\n          receiptvalue => {\n            return receiptvalue;\n          }\n        );\n\n        const selectedItem = data.searchporesult.addeditemlist.map(poItem => {\n          return {\n            poitemid: poItem._id,\n            itemid: poItem.id,\n            costperunit: poItem.costperunit,\n            itemdescription: poItem.itemdescription,\n            itemlocation: poItem.itemlocation,\n            itemname: poItem.itemname,\n            itemtype: poItem.itemtype,\n            itemuom: poItem.itemuom,\n            receivedqty: poItem.receivedqty,\n            recevingqty: parseFloat(poItem.receivedqty)\n              ? parseFloat(poItem.quantity) - parseFloat(poItem.receivedqty)\n              : parseFloat(poItem.quantity),\n            quantity: poItem.quantity,\n            totalcost: poItem.totalcost\n          };\n        });\n\n        this.setState({\n          ...this.state,\n          receiptlistitems,\n          selectedItem\n        });\n\n        return data.searchdata;\n      });\n  };\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n\n  savereport = value => {\n    sessionStorage.setItem(\"Receipt\",JSON.stringify(value))\n    let path = `/viewreceipt`;\n    this.props.history.push(path);\n  }\n\n  render() {\n    const {\n      poid,\n      ponumber,\n      count,\n      success,\n      selectedItem,\n      receiptlistitems,\n      loading\n    } = this.state;\n\n    const receiptlisttable = receiptlistitems.map(receiptvalue => {\n      return (\n        <div className=\"container mg-t-20\" key={receiptvalue.id}>\n          {loading ? <CustomLoader /> : null}\n          <Card>\n            <CardHeader>\n              <span> Receipt No : {receiptvalue.receiptnumber} </span>\n              <span> || </span>\n              <span> PO Number : {receiptvalue.ponumber} </span>\n              <div style={{ 'float':'right','marginTop': '-8px','marginBottom':'-5px'}}>\n                    <Button\n                      color=\"primary\"\n                      onClick={() => {\n                        this.savereport(receiptvalue);\n                      }}\n                      className=\"lgn-loader small-font-size\"\n                      \n                    >\n                      Save Report\n                     \n                    </Button>\n              </div>\n            </CardHeader>\n            <CardBody>\n              <ReceiptTable itemlist={receiptvalue.itemlist} />\n            </CardBody>\n          </Card>\n        </div>\n      );\n    });\n\n    return (\n      <div className=\"container mg-t-20\">\n        <div>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to=\"/transaction_page\">Transactions</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Receipt Screen</BreadcrumbItem>\n          </Breadcrumb>\n        </div>\n        <div>\n          {count > 0 ? (\n            <div>\n              <ReceiptScreenForm submit={this.submit} />\n              {success && (\n                <EditTable\n                  selectedItem={selectedItem}\n                  ponumber={ponumber}\n                  poid={poid}\n                  itemlistsubmit={this.itemlistsubmit}\n                />\n              )}\n              {receiptlistitems.length > 0 && receiptlisttable}\n            </div>\n          ) : (\n              <Alert color=\"info\" Label>Please Add purchase order </Alert>\n            )}\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    purchaseorderlistvalues: state.purchaseorderlistvalue\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  {\n    getPurchaseOrder,\n    searchPoNumber,\n    addorupdateitemsinlocation,\n    getReceiptlist,\n    getLocationList,\n    getUomList\n  }\n)(ReceiptScreen);\n","import React from 'react';\nimport logo from '../../../../Images/logo.png';\nimport client from '../../../../Images/client.png';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\nimport {\n  Document,\n  Page,\n  Text,\n  View,\n  StyleSheet,\n  Image\n} from '@react-pdf/renderer';\nimport {\n  TableCell,\n  Table,\n  TableHeader,\n  TableBody,\n  DataTableCell\n} from '@david.kucsai/react-pdf-table';\nimport styled from '@react-pdf/styled-components';\n\n// Create styles\nconst styles = StyleSheet.create({\n  textcenter: { textAlign: 'center' },\n  textright: { textAlign: 'right' },\n  textleft: { textAlign: 'left' },\n  paddingleft: { paddingLeft: 5 },\n  margin: {\n    margin: 5\n  },\n  pagepadding: {\n    padding: 20\n  },\n  section: {\n    position: 'relative',\n    display: 'flex',\n    flexDirection: 'row',\n    overflow: 'hidden'\n  },\n  section_column: {\n    position: 'relative',\n    display: 'flex',\n    flexDirection: 'column',\n    overflow: 'hidden'\n  },\n  myHeight: {\n    height: '100px'\n  },\n  headerfont: {\n    fontSize: 8,\n    fontWeight: 'bold',\n    padding: 3\n  },\n  descriptionText: {\n    fontSize: 10,\n    fontWeight: 'normal'\n  },\n  headerfont2: {\n    fontSize: 11,\n    fontWeight: 'bold',\n    textAlign: 'right',\n    padding: 3\n  },\n  headerfontleft: {\n    fontSize: 12,\n    fontWeight: 'bold',\n    textAlign: 'left'\n  },\n  billingaddress: {\n    fontSize: 12,\n    fontWeight: 'bold',\n    textAlign: 'left',\n    height: 70\n  },\n  shippingaddress: {\n    fontSize: 12,\n    fontWeight: 'bold',\n    textAlign: 'left',\n    height: 130\n  },\n  row: {\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  dcaddress: {\n    fontSize: 8,\n    color: ' black'\n  },\n  dcaddress_left: {\n    fontSize: 8\n  },\n  view_border: {\n    border: '2pt solid #000',\n    flexGrow: 1,\n    height: 100,\n    padding: 8\n  },\n  view_border_left: {\n    borderLeft: '2pt solid #000',\n    borderTop: '2pt solid #000',\n    borderBottom: '2pt solid #000',\n    flexGrow: 1,\n    height: 50,\n    padding: 8\n  },\n  view_border_right: {\n    borderRight: '2pt solid #000',\n    borderTop: '2pt solid #000',\n    borderBottom: '2pt solid #000',\n    flexGrow: 1,\n    height:50,\n    padding: 8\n  },\n  column: {\n    width: 190\n  },\n  headerwidth: {\n    width: 210,\n    padding: 20\n  },\n  headerwidthdate: {\n    width: 210,\n    paddingTop: 23,\n    fontSize: 12\n  },\n  headerwidthlogo: {\n    width: 350,\n    fontSize: 12\n  },\n  logo: {\n    width: 225,\n    height: 90\n  },\n  header_name: {\n    width: 350,\n    fontWeight: 'bold',\n    fontSize: 24,\n    textAlign: 'left',\n    paddingLeft: 40\n  },\n  header_sub_name: {\n    width: '100%',\n    fontSize: 8,\n    textAlign: 'center',\n    paddingHorizontal: 25\n  },\n  header_sub_name_phone: {\n    width: '100%',\n    fontSize: 8,\n    fontWeight: 'bolder',\n    textAlign: 'center',\n    fontWeight: 'bold'\n  },\n  header_tintext: {\n    fontSize: 8,\n    fontWeight: 'bold',\n    paddingLeft: 10\n  },\n  header_sub_name3: {\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  header_sub_nameB: {\n    flexDirection: 'column',\n    paddingTop: 10,\n    flex: 1\n  },\n  header_sub_nameA: {\n    flexDirection: 'row',\n    justifyContent: 'center'\n  },\n  headerwidthAddress: {\n    width: 260,\n    fontSize: 10,\n    padding: 2,\n    textAlign: 'right'\n  },\n  refstyle: {\n    paddingBottom: 20,\n    fontSize: 12\n  },\n  headerpadding: {\n    padding: 20\n  },\n  flexgrow: {\n    flexGrow: 1\n  },\n  fontsize18: {\n    fontSize: 13\n  },\n  kindattend: {\n    paddingTop: 15,\n    fontSize: 13\n  },\n  yourref: {\n    fontSize: 13,\n    paddingBottom: 10\n  },\n  main: {\n    fontSize: 12\n  },\n  tableheaderbgcolor: {\n    backgroundColor: 'red',\n    color: 'red',\n    background: 'red'\n  },\n  footerfixed: {\n    position: 'absolute',\n    bottom: 0,\n    width: '100%'\n  },\n  dc_header: {\n    flexDirection: 'row'\n  },\n  dc_gst: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end'\n  },\n  padding: {\n    padding: 16,\n    fontSize: 8\n  }\n});\n\nconst Small = ({ children }) => {\n  return (\n    <Text style={{ fontSize: 8 }}>{children}</Text>\n  )\n}\n\nconst SmallBold = ({ children }) => {\n  return (\n    <Text style={{ fontSize: 8, fontWeight: 'bold' }}>{children}</Text>\n  )\n}\n\nconst Medium = ({ children }) => {\n  return (\n    <Text style={{\n      fontSize: 10,\n      marginLeft: 25,\n      textDecorationLine: 'underline'\n    }}>{children}</Text>\n  )\n}\n\nconst MediumBold = ({ children }) => {\n  return (\n    <Text style={{ fontSize: 10, fontWeight: 'bold' }}>{children}</Text>\n  )\n}\n\nconst Bold = ({ children }) => {\n  return (\n    <Text style={{ fontWeight: 'bold' }}>{children}</Text>\n  )\n}\n\nconst Header = ({ children }) => {\n  return (\n    <Text style={{\n      // width: 350,\n      fontWeight: 'bold',\n      fontSize: 24,\n      textAlign: 'left',\n      paddingLeft: 10\n    }}>{children}</Text>\n  )\n}\n\n// Create Document Component\n\nconst MyDocument = ({ orderlistvalues, data_cond }) => {\n\nconst today = new Date().getDate() + '/' +  (new Date().getMonth()+1) + '/' + new Date().getFullYear()\nconst data = orderlistvalues.addeditemlist;\n  const {\n    ponumber,\n    receiptnumber\n  } = orderlistvalues;\n\n  return (\n    <Document>\n      <Page size='A4' style={styles.pagepadding} wrap>\n        <View>\n          <View style={styles.dc_header}>\n            <Image style={styles.logo} src={logo} />\n            <View stye={styles.header_sub_nameB}>\n\n              <View style={{ flexDirection: 'row', justifyContent: 'flex-end', paddingRight: 10 }}>\n                <Small><Bold>CIN:</Bold> U28110KA2012PTC062181</Small>\n              </View>\n       \n              <Header>Pondhan Scaffolding Pvt. Ltd.</Header>\n              {/* <Text>{'\\n'}</Text> */}\n              <Text style={[styles.header_tintext, { fontWeight: 'bold' }]}>\n                {' '}\n                MANF: Scaffolding Props, Cup-Lock, Jack, Span, Centering Sheet,\n                'H' Frame & Swivel Coupler\n            </Text>\n              <Text>{'\\n'}</Text>\n            </View>\n          </View>\n\n\n\n\n          {/* <Text style={styles.logo}></Text>\n          <Text style={styles.logo}></Text>\n          <Text style={styles.headerwidthAddress}>\n            Email: info@pondhan.com, Website: www.pondhan.com{'\\n'}\n            TIN No: 29710660725{'\\n'}\n            GSTIN:29AAGCP4018E1ZJ RCC No: U28110KA2012PTC062181{'\\n'}\n          </Text> */}\n        </View>\n        <View style={styles.dc_gst}>\n          <Text style={styles.header_tintext}><Bold>TIN:</Bold> 29710660725</Text>\n          <Text style={styles.header_tintext}><Bold>GSTIN:</Bold> 29AAGCP4018E1ZJ</Text>\n          <View>\n            <Text style={styles.header_tintext}><Bold>HSN Code:</Bold> 7308</Text>\n            <Text style={[styles.header_tintext, { marginTop: 4 }]}><Bold>SAC Code:</Bold> 996793</Text>\n          </View>\n        </View>\n\n        <Text style={styles.header_sub_name}>\n          {'\\n'}\n          Office & Works : 40 & 41 (corner) Road,no.5, Obadenahalli Industrial\n          Area,3rd phase Doddaballapura, Bangalore Rural District-561203.\n        </Text>\n        <Text style={[styles.header_sub_name_phone, { fontWeight: 'bold', color: 'black' }]}>\n          <Bold>Off: +91 080 23339150, Mob: +91 9900069150</Bold>\n    \n        </Text>\n        <Text> {'\\n'}</Text>\n        <Text style={[styles.header_sub_name_phone, { fontWeight: 'bold', color: 'black',textAlign:'center' }]}>\n          <Bold>Goods Received Note</Bold>\n        </Text>\n\n        \n        {/* {tableComponent} */}\n        <View style={{ marginTop: 8 }}>\n          <View style={styles.row}>\n            <View style={styles.view_border_left}>\n              <View style={{ flexDirection: 'row' }}>\n                <Text style={[styles.dcaddress, { fontWeight: 'bold' }]}>GRN No. </Text>\n                <Text style={[styles.dcaddress, {\n                \n                  paddingLeft: 16,\n                }]}>{receiptnumber}/2019-20 \n                {'\\n'}\n                </Text>\n              </View>\n            \n              <View style={{ flexDirection: 'row' }}>\n                <Text style={[styles.dcaddress, { fontWeight: 'bold' }]}>PO No.</Text>\n                <Text style={[styles.dcaddress, {\n                    paddingLeft: 16,\n                    wordWrap: 'break-word'\n                }]}> PSPL/2019-20/{ponumber}\n                {'\\n'}\n                </Text>\n             </View>\n            </View>\n           \n            <View style={styles.view_border_right}>\n              <View style={styles.header_sub_name3}>\n                <Text></Text>\n                <Text style={styles.dcaddress_left}>\n                  Date: {today}\n                  {'\\n'}\n                </Text>\n              </View>\n            </View>\n            <Text>{'\\n'}</Text> \n          </View>\n          <Text>{'\\n'}</Text> \n          <Table\n            border={2}\n            style={[styles.section, styles.padding, styles.tableheaderbgcolor, { fontSize: 8 }]}\n            data={data}\n          >\n            <TableHeader\n              textAlign={'center'}\n              style={{ backgroundColor: 'tomato' }}\n            >\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Text style={[styles.headerfont]}>SL No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={[styles.headerfont]}>PARTICULAR</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={[styles.headerfont]}>UOM</Text>\n              </TableCell>\n              <TableCell weighting={0.3}>\n                <Text style={[styles.headerfont]}>PO Qty</Text>\n              </TableCell>\n              <TableCell weighting={0.3}>\n                <Text style={[styles.headerfont]}>Received Qty</Text>\n              </TableCell>\n              <TableCell weighting={0.4}>\n                <Text style={[styles.headerfont]}>Received Date</Text>\n              </TableCell>\n              \n              <TableCell weighting={0.3}>\n                <Text style={[styles.headerfont]}>Remaining Qty</Text>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell\n                weighting={0.08}\n                style={styles.padding}\n                getContent={r => <Text style={[styles.headerfont]}>{r.slno}</Text>}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.6}\n                getContent={r => <Text style={[styles.headerfont, { textAlign: 'left' }]}>{r.itemname}</Text>}\n              />\n              <DataTableCell\n                weighting={0.2}\n                style={styles.padding}\n                getContent={r => <Text style={[styles.headerfont]}>{r.itemuom}</Text>} />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.3}\n                getContent={r => <Text style={[styles.headerfont]}>{r.poqty}</Text>} />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.3}\n                getContent={r => <Text style={[styles.headerfont]}>{r.receivedqty}</Text>} />\n            <DataTableCell\n                style={styles.padding}\n                weighting={0.4}\n                getContent={r => <Text style={[styles.headerfont]}>{r.receiptDate}</Text>} />\n                \n                <DataTableCell\n                style={styles.padding}\n                weighting={0.3}\n                getContent={r => <Text style={[styles.headerfont]}>{r.availqty}</Text>} />\n            </TableBody>\n          </Table>\n          {/* <Text>{'\\n'}</Text> */}\n          {/* ends here */}\n          <View style={styles.header_sub_name3}>\n            <Text style={[styles.header_tintext, { paddingLeft: 0, marginTop: 4 }]}>\n             Authorised : Yes {'\\n'}\n            \n            </Text>\n            <Text style={[styles.header_tintext, { paddingLeft: 0, marginTop: 4 }]}>\n              Inspection Required : Yes {'\\n'}\n             \n            </Text>\n          </View>\n          <Text>{'\\n'}</Text> \n          <View style={styles.header_sub_name3}>\n            <Text style={[styles.header_tintext, { paddingLeft: 0, marginTop: 4 }]}>\n             EDP Prepared by {'\\n'}\n            \n            </Text>\n            <Text style={[styles.header_tintext, { paddingLeft: 0, marginTop: 4 }]}>\n              Store incharge {'\\n'}\n             \n            </Text>\n            <Text style={[styles.header_tintext, { paddingLeft: 0, marginTop: 4 }]}>\n              Inspected By {'\\n'}\n            </Text>\n            <Text style={[styles.header_tintext, { paddingLeft: 0, marginTop: 4 }]}>\n              Manager {'\\n'}\n            </Text>\n            <Text style={[styles.header_tintext, { paddingLeft: 0, marginTop: 4 }]}>\n              Accounts Department {'\\n'}\n            </Text>\n          </View>\n\n          <View>\n            <Text\n                 style={[styles.headerfont, { color: 'red' }]}\n                >\n                 {'\\n'} {'\\n'} \n                 Note: Any legal matter should be under Bengaluru Jurisdiction </Text>\n        </View>\n        </View>\n      </Page>\n    </Document>\n  );\n};\n\nexport default MyDocument;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ReactPDF from '@react-pdf/renderer';\nimport moment from 'moment';\nimport { PDFViewer } from '@react-pdf/renderer';\n\nimport MyDocument from './Component';\nimport logo from '../../../../Images/logo.png';\n//import './ViewOrder';\n\nclass ViewReceiptPdf extends React.Component {\n  state = {\n    orderlistvalues: {},\n    status: false,\n    link: ''\n  };\n  componentDidMount() {\n    let data = JSON.parse(sessionStorage.getItem(\"Receipt\"))\n    let receipts = JSON.parse(sessionStorage.getItem(\"SelectedItem\"))\n    receipts.map((item)=>{\n      for(var j=0;j<data.itemlist.length;j++){\n        if( data.itemlist[j].itemid.masteritemname == item.itemname){\n          data.itemlist[j]['TotalRecQty'] = item.recevingqty;break\n        }\n      }\n    })\n    let poreceiptvalues = {}\n    poreceiptvalues['ponumber'] = data['ponumber']\n    poreceiptvalues['receiptnumber'] = data['receiptnumber']\n    console.log(data.itemlist)\n    poreceiptvalues['addeditemlist'] = data.itemlist.map(\n      (itemlist, i) => {\n        return {\n          slno: (i + 1).toString(),\n          itemname: itemlist.itemid.masteritemdescription ? itemlist.itemid.masteritemdescription : '',\n          itemcode: itemlist.itemid.masteritemname ? itemlist.itemid.masteritemname : '',\n          itemuom: itemlist.itemuom.uomname ? itemlist.itemuom.uomname : '',\n          poqty: itemlist.itemquantity ? itemlist.itemquantity.toString() : '',\n          receivedqty: itemlist.recevingqty ? itemlist.recevingqty.toString() : '',\n          receiptDate:  itemlist.date ? new Date(itemlist.date).getDate() + \"/\" + (new Date(itemlist.date).getMonth() + 1) + \"/\" + new Date(itemlist.date).getFullYear() : '',\n          availqty: itemlist.TotalRecQty ? itemlist.TotalRecQty : 0\n        };\n      }\n    );\n\n    setTimeout(() => {\n      this.setState({\n        orderlistvalues : poreceiptvalues,\n        status: true\n      },()=>{\n        console.log(this.state.orderlistvalues)\n      });\n    },2000);\n    this.dynamicClick();\n  }\n  dynamicClick() {\n    if (document.getElementsByClassName('pdf-class')) {\n      if (\n        document.getElementsByClassName('pdf-class')[0].children.length <= 1\n      ) {\n        setTimeout(() => {\n          this.dynamicClick();\n        }, 6000);\n      } else if (\n        document.getElementsByClassName('pdf-class')[0].children.length > 1\n      ) {\n        this.setState({\n          link: document.getElementsByClassName('pdf-class')[0].children[1].src\n          // status : undefined,\n        },()=>{\n          setTimeout(() => {\n            document.getElementById('D1').click();\n            this.props.history.push('/receipt_screen');\n          }, 300);\n        });\n\n      }\n    } else {\n    }\n  }\n  render() {\n    const data_cond = [\n      {\n        slno: '1',\n        title: 'Invoices',\n        value: '2 copies Invoices (original & duplicate)'\n      },\n      {\n        slno: '2',\n        title: 'Tax & Duty',\n        value: 'Included'\n      },\n      {\n        slno: '3',\n        title: 'Payment Schedule',\n        value: '15 days from the date of delivery'\n      },\n      {\n        slno: '4',\n        title: 'Delivery Schedule',\n        value: 'Immediately'\n      },\n      {\n        slno: '5',\n        title: 'Billing address & GST No',\n        value:\n          'M/s Pondhan Scaffolding Pvt Ltd \\n Plot no. 40/41, Road no.5, Obedanahalli,'\n      },\n      {\n        slno: '6',\n        title: 'Delivery Address',\n        value: 'M/s Pondhan Scaffolding Pvt Ltd'\n      }\n    ];\n    const { status, orderlistvalues, link } = this.state;\n    return (\n      <div>\n        <div className='pdf-class'>\n          Downloading file.Please wait.\n          {/* {!status && (\n          <h1 style={{ 'position': 'absolute','left': '50%','top': '50%','transform': 'translate(-50%, -50%);'}}>Downloading file.Please wait.</h1>\n        )} */}\n          <a href={link} download id='D1'></a>\n           {status && (\n            <PDFViewer>\n              <MyDocument\n                orderlistvalues={this.state.orderlistvalues}\n                data_cond={data_cond}\n                logo={logo}\n              />\n            </PDFViewer>\n          )} \n        </div>\n      </div>\n    );\n  }\n}\nfunction mapStateToProps(state) {\n  return {\n    orderlistvalues: state.orderlistvalues\n  };\n}\nexport default connect(\n  mapStateToProps\n)(ViewReceiptPdf);\n","import axios from 'axios';\n\nexport default {\n  moveorder: {\n    addmoveorder: data => {\n      return axios\n        .post(`${process.env.REACT_APP_BASE_URL}/moveorder/addmoveorder`, {\n          data\n        })\n        .then(res => {\n          return res.data.moveorderdata;\n        });\n    },\n    getmoveorder: () => {\n      return axios\n        .get(`${process.env.REACT_APP_BASE_URL}/moveorder/getmoveorder`)\n        .then(res => {\n          return res.data.moveorderlist;\n        });\n    }\n  }\n};\n","import { normalize } from 'normalizr';\nimport api from '../Services/moveorderapi';\nimport { ADD_MOVEORDER, MOVEORDER_FETCHED } from '../Services/types';\nimport { moveorderListSchema } from '../Schemas/schemas';\n\nconst moveorderCreated = moverorderlist => {\n  return {\n    type: ADD_MOVEORDER,\n    moverorderlist\n  };\n};\n\nconst moveorderFetched = moverorderlist => {\n  return {\n    type: MOVEORDER_FETCHED,\n    moverorderlist\n  };\n};\n\nexport const addMoveOrder = data => {\n  return dispatch => {\n    return api.moveorder.addmoveorder(data).then(moverorderlistvalues => {\n      return dispatch(\n        moveorderCreated(normalize(moverorderlistvalues, moveorderListSchema))\n      );\n    });\n  };\n};\n\nexport const getMoveOrder = () => {\n  return dispatch => {\n    return api.moveorder.getmoveorder().then(moverorderlist => {\n      console.log(moverorderlist);\n      const moverorderlistvalues = moverorderlist.moveorderdata;\n      console.log(moverorderlistvalues);\n      return dispatch(\n        moveorderFetched(normalize(moverorderlistvalues, [moveorderListSchema]))\n      );\n    });\n  };\n};\n\nexport const searchquotation = customerid => {\n  return dispatch => {\n    return api.quotation.searchquotation(customerid);\n  };\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { AvForm, AvField, AvGroup } from 'availity-reactstrap-validation';\nimport {\n  Button,\n  Label,\n  Alert,\n  Card,\n  CardBody,\n  CardHeader,\n  Row,\n  Col,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from 'reactstrap';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\n\nimport { totalitemvaluesearch } from '../../../../actions/Transaction';\nimport axios from \"axios\";\n\nclass MoveOrderScreenForm extends React.Component {\n  state = {\n    data: {\n      selectedItemlist: {\n        id: [null],\n        itemname: [null],\n        itemdescription: [null],\n        itemtype: [null],\n        itemrate: [null],\n        itemuom: [null],\n        itemlocation: [null],\n        costperunit: [null],\n        quantity: [null],\n        availableQuantity: [null],\n        totalcost: [null],\n        remarks: [null]\n      },\n      moveorderno: '1',\n      fromaddress: '',\n      toaddress: '',\n      values: ['']\n    },\n    errors: {},\n    materialoptionlistvalues: [],\n    supplierdetaillistvalue: [],\n    supplierdetaillistvalueobject: {},\n    masteritemlistvalues: [],\n    masteritemlistvaluesobject: {},\n    currencylistvalues: [],\n    uom: [],\n    locationlistvalue: [],\n    tolocationlist: [],\n    itemlist: [],\n    loading: false,\n    success: false\n  };\n\n  componentWillReceiveProps(props) {\n    const materialoptionlistvalues = Object.values(\n      props.materialoptionlistvalues\n    );\n    // const supplierdetaillistvalue = Object.values(\n    //   props.supplierdetaillistvalue\n    // );\n    // const supplierdetaillistvalueobject = props.supplierdetaillistvalue;\n    const masteritemlistvalues = Object.values(props.masteritemlistvalues);\n    const masteritemlistvaluesobject = props.masteritemlistvalues;\n    const currencylistvalues = Object.values(props.currencylistvalues);\n    const uomlistvalues = Object.values(props.uomlistvalues);\n    const locationlistvalue = Object.values(props.locationlistvalue);\n    const purchaseorderlist = Object.keys(this.props.purchaseorderlistvalues);\n    const moveorderlistvalues = Object.keys(this.props.moveorderlistvalues);\n    const moveorderno =\n      moveorderlistvalues.length > 0 ? 1 + moveorderlistvalues.length : 1;\n    this.setState({\n      ...this.state,\n      masteritemlistvalues,\n      masteritemlistvaluesobject,\n      materialoptionlistvalues,\n      currencylistvalues,\n      locationlistvalue,\n      uom: uomlistvalues,\n      data: {\n        ...this.state.data,\n        moveorderno\n      }\n    },()=>{\n      if(moveorderlistvalues.length == 0)\n        this.getMovedata()\n    });\n  }\n\n  getMovedata(){\n    if(Object.keys(this.props.moveorderlistvalues).length == 0){\n      axios\n      .get(`${process.env.REACT_APP_BASE_URL}/moveorder/getmoveorder`)\n      .then(res => {\n         //if (res.data.moveorderlist.moveorderdata.length > 0) {\n           \n          let moveorderno =\n          res.data.moveorderlist.moveorderdata.length > 0 ? 1 + res.data.moveorderlist.moveorderdata.length : 1;\n          \n          this.setState({\n            ...this.state,\n            data: {\n              ...this.state.data,\n              moveorderno\n            }\n          });\n        //}\n      },\n        error => {\n          this.setState({ success: false, message: 'Server error.' });\n        });\n    }\n  }\n\n\n  handleChangeDeliveryDate = date => {\n    this.setState({\n      data: {\n        ...this.state.data,\n        requestdeliverydate: date\n      }\n    });\n  };\n  handleChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  totalValue = () => {\n    const { totalcost } = this.state.data.selectedItemlist;\n    if (totalcost.length > 0) {\n      const totalvalue = totalcost\n        .map((value, i) => {\n          if (value) {\n            return parseFloat(value);\n          } else {\n            return 0;\n          }\n        })\n        .reduce((a, b) => {\n          return a + b;\n        });\n      this.setState({\n        ...this.state.data,\n        data: {\n          ...this.state.data,\n          totalvalue\n        }\n      });\n    }\n  };\n\n  selectitemchange = (e, index) => {\n    console.log(this.state.masteritemlistvalues)\n    const selected_id = e.target.value;\n    if (selected_id) {\n      let list = this.state.itemlist;\n      const selected_item_list = list.filter(it => it.itemid === selected_id);\n      const selected_item = selected_item_list[0];\n      console.log(selected_item);\n      let itemdesc = ''\n      this.state.masteritemlistvalues.map((item) =>{\n        if(item.masteritemtypename == selected_item.itemname)\n          itemdesc = item.masteritemshortdescription != '' ? item.masteritemshortdescription : item.masteritemdescription\n       })\n      const selectedItemlist = { ...this.state.data.selectedItemlist };\n      selectedItemlist.id[index] = selected_item.itemid;\n      selectedItemlist.itemname[index] = selected_item.itemname;\n      selectedItemlist.itemdescription[index] = itemdesc;\n  \n      // selectedItemlist.itemdescription[index] = selected_item.masteritemshortdescription == '' ? selected_item.masteritemdescription \n      // : selected_item.masteritemshortdescription\n      // selectedItemlist.itemtype[index] = selected_item.masteritemtype._id;\n      // selectedItemlist.itemrate[index] = selected_item.masteritemrate;\n      // selectedItemlist.itemuom[index] = selected_item.masteritemuom._id;\n      // selectedItemlist.itemlocation[index] = null;\n      // selectedItemlist.costperunit[index] = selected_item.masteritemcostperunit\n      //   ? selected_item.masteritemcostperunit.toString()\n      //   : '';\n      selectedItemlist.quantity[index] = selected_item.itemquantity;\n      selectedItemlist.availableQuantity[index] = selected_item.itemquantity;\n      // selectedItemlist.totalcost[index] = selected_item.masteritemcostperunit\n      //   ? selected_item.masteritemcostperunit.toString()\n      //   : '';\n      // this.state.data.selectedItemlist.id[index] = selected_item.id;\n      // this.state.data.selectedItemlist.itemdescription[index] =\n      //   selected_item.masteritemdescription;\n      this.setState({\n        ...this.state.data,\n        data: {\n          ...this.state.data,\n          selectedItemlist\n          // selectedItemlist: {\n          //   ...this.state.data.selectedItemlist,\n          //   id: [...this.state.data.selectedItemlist.id, selected_item.id]\n          // itemname: [...this.state.data.selectedItemlist.itemname, \"\"],\n          // itemdescription: [\n          //   ...this.state.data.selectedItemlist.itemdescription,\n          //   \"\"\n          // ],\n          // itemtype: [...this.state.data.selectedItemlist.itemtype, \"\"],\n          // itemrate: [...this.state.data.selectedItemlist.itemrate, \"\"],\n          // itemuom: [...this.state.data.selectedItemlist.itemuom, \"\"],\n          // costperunit: [...this.state.data.selectedItemlist.costperunit, \"\"]\n          // }\n        }\n      });\n    }\n    this.totalValue();\n  };\n\n  locationChange = (e, index) => {\n    const selected_location = e.target.value;\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.itemlocation[index] = selected_location;\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n  };\n\n  onhandlerChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n  onhandlerFromChange = e => {\n    const locationlistvalue = this.state.locationlistvalue;\n    let tolocationlist = locationlistvalue.filter(\n      item => item.id !== e.target.value\n    );\n    this.setState({\n      ...this.state,\n      tolocationlist,\n      data: { ...this.state.data, fromaddress: e.target.value }\n    });\n    let data = { locationid: e.target.value, itemid: '' };\n    this.props.totalitemvaluesearch(data).then(data => {\n      console.log(data);\n      const itemlist = data.itemlist.map(item => {\n        return {\n          id: item.id,\n          locationname: item.locationname,\n          itemid:item.itemid,\n          itemname: item.itemname,\n          itemdescription: item.itemdescription,\n          itemquantity: item.itemquantity\n        };\n      });\n      this.setState({\n        ...this.state,\n        itemlist\n      });\n      // return data;\n    });\n  };\n  onhandlerToChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, toaddress: e.target.value }\n    });\n  };\n  onSubjectHandler = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  filterItems(itemarray,key) {\n    return itemarray.sort((a,b)=>{return a[key].toLowerCase().localeCompare(b[key].toLowerCase())})\n  }\n\n  createSelectItems = () => {\n    let items = [];\n    let masteritemlistvalues = this.state.itemlist;\n    masteritemlistvalues = this.filterItems(masteritemlistvalues,'itemname')\n    console.log(masteritemlistvalues)\n    masteritemlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.itemid}>\n          {option.itemname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  createSelectItemTypes = () => {\n    let items = [];\n    const materialoptionlistvalues = this.state.materialoptionlistvalues;\n    materialoptionlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.masteritemtypename}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  createSelectCurrencyItems = () => {\n    let items = [];\n    const currencylistvalues = this.state.currencylistvalues;\n    currencylistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.currencyname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  createSelectUomItems = () => {\n    let items = [];\n    const uomlistvalues = this.state.uom;\n    uomlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.uomname}\n        </option>\n      );\n    });\n    return items;\n  };\n  createSelectLocationItems = () => {\n    let items = [];\n    const locationlistvalue = this.state.locationlistvalue;\n    locationlistvalue.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.locationname}\n        </option>\n      );\n    });\n    return items;\n  };\n  createToLocationList = () => {\n    let items = [];\n    const locationlistvalue = this.state.tolocationlist;\n    locationlistvalue.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.locationname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  handleClick = e => {\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        values: [...this.state.data.values, ''],\n        selectedItemlist: {\n          ...this.state.data.selectedItemlist,\n          id: [...this.state.data.selectedItemlist.id, ''],\n          itemname: [...this.state.data.selectedItemlist.itemname, ''],\n          itemdescription: [\n            ...this.state.data.selectedItemlist.itemdescription,\n            ''\n          ],\n          itemtype: [...this.state.data.selectedItemlist.itemtype, ''],\n          itemrate: [...this.state.data.selectedItemlist.itemrate, ''],\n          itemuom: [...this.state.data.selectedItemlist.itemuom, ''],\n          itemlocation: [...this.state.data.selectedItemlist.itemlocation, ''],\n          costperunit: [...this.state.data.selectedItemlist.costperunit, ''],\n          quantity: [...this.state.data.selectedItemlist.quantity, 0],\n          totalcost: [...this.state.data.selectedItemlist.totalcost, ''],\n          availableQuantity: [...this.state.data.selectedItemlist.totalcost, '']\n        }\n      }\n    });\n  };\n  removeClick = (e, index) => {\n    const removeItem = { ...this.state.data };\n    const values = removeItem.values;\n    const id = removeItem.selectedItemlist.id;\n    const itemname = removeItem.selectedItemlist.itemname;\n    const itemdescription = removeItem.selectedItemlist.itemdescription;\n    const itemtype = removeItem.selectedItemlist.itemtype;\n    const itemrate = removeItem.selectedItemlist.itemrate;\n    const itemuom = removeItem.selectedItemlist.itemuom;\n    const itemlocation = removeItem.selectedItemlist.itemlocation;\n    const costperunit = removeItem.selectedItemlist.costperunit;\n    const quantity = removeItem.selectedItemlist.quantity;\n    const availableQuantity = removeItem.selectedItemlist.availableQuantity;\n    \n    const totalcost = removeItem.selectedItemlist.totalcost;\n    values.splice(index, 1);\n    id.splice(index, 1);\n    itemname.splice(index, 1);\n    itemdescription.splice(index, 1);\n    itemtype.splice(index, 1);\n    itemrate.splice(index, 1);\n    itemuom.splice(index, 1);\n    itemlocation.splice(index, 1);\n    costperunit.splice(index, 1);\n    quantity.splice(index, 1);\n    totalcost.splice(index, 1);\n    availableQuantity.splice(index, 1);\n    \n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        values,\n        selectedItemlist: {\n          ...this.state.data.selectedItemlist,\n          id,\n          itemname,\n          itemdescription,\n          itemtype,\n          itemrate,\n          itemuom,\n          itemlocation,\n          costperunit,\n          availableQuantity,\n          quantity,\n          totalcost\n        }\n      }\n    });\n  };\n\n  quantityChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    const costperunit = selectedItemlist.costperunit[index] || null;\n\n   \n \n    console.log(typeof selectedItemlist.quantity[index])\n    console.log(typeof selectedItemlist.availableQuantity[index])\n\n    if(Number(e.target.value) > selectedItemlist.availableQuantity[index]){\n      window.alert('Move quantity cannot be greater than available quantity')\n      console.log(this.state.data.selectedItemlist.quantity)\n      selectedItemlist.quantity[index] = '0'\n      this.setState({\n        ...this.state.data,\n        data: {\n          ...this.state.data,\n          selectedItemlist\n        }\n      });\n    }\n    else{\n      selectedItemlist.quantity[index] = e.target.value;\n      const totalValue = costperunit\n      ? e.target.value * costperunit\n      : null || undefined || '';\n      selectedItemlist.totalcost[index] = totalValue\n        ? parseFloat(totalValue).toFixed(2)\n        : '';\n      this.setState({\n        ...this.state.data,\n        data: {\n          ...this.state.data,\n          selectedItemlist\n        }\n      });\n      this.totalValue();\n    }\n\n\n  };\n  remarkChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.remarks[index] = e.target.value;\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n  };\n\n  unitChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.costperunit[index] = e.target.value;\n    const totalcost =\n      parseFloat(selectedItemlist.quantity[index]) *\n      parseFloat(selectedItemlist.costperunit[index]);\n    selectedItemlist.totalcost[index] = totalcost\n      ? totalcost.toFixed(2)\n      : null || '';\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n    this.totalValue();\n  };\n\n  handleValidSubmit = () => {\n    let AddedIteminfo = [];\n    const { supplierdetail, selectedItemlist } = this.state.data;\n    const { values } = this.state.data;\n    const id = selectedItemlist.id;\n    const itemname = selectedItemlist.itemname;\n    const itemdescription = selectedItemlist.itemdescription;\n    const itemtype = selectedItemlist.itemtype;\n    const itemrate = selectedItemlist.itemrate;\n    const itemuom = selectedItemlist.itemuom;\n    const itemlocation = selectedItemlist.itemlocation;\n    const costperunit = selectedItemlist.costperunit;\n    const quantity = selectedItemlist.quantity;\n    const totalcost = selectedItemlist.totalcost;\n    const remarks = selectedItemlist.remarks;\n    values.forEach(function(value, i) {\n      let obj = {};\n      obj.id = id[i] || null;\n      obj.itemname = itemname[i] || null;\n      obj.itemdescription = itemdescription[i] || null;\n      obj.itemtype = itemtype[i] || null;\n      obj.itemrate = itemrate[i] || null;\n      obj.itemuom = itemuom[i] || null;\n      obj.itemlocation = itemlocation[i] || null;\n      obj.costperunit = costperunit[i] || null;\n      obj.quantity = quantity[i] || null;\n      obj.totalcost = totalcost[i] || null;\n      obj.remarks = remarks[i] || null;\n      AddedIteminfo.push(obj);\n    });\n    const { data } = this.state;\n    data['AddedIteminfo'] = AddedIteminfo;\n    this.setState({ loading: true });\n    console.log(JSON.stringify(selectedItemlist))\n    console.log(JSON.stringify(data));\n    this.props\n      .submit(data)\n      .then(() => {\n        this.setState({ loading: false, errors: {}, success: true });\n        this.myFormRef.reset();\n      })\n      .catch(err => {\n        this.setState({ errors: err.response.data.errors, loading: false });\n      });\n  };\n\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n\n  handleInvalidSubmit = () => {\n    console.log('invalid submit');\n  };\n  render() {\n    const { data, errors, loading, success } = this.state;\n    return (\n      <div>\n        <div>\n          {!!success ? (\n            // <Alert color=\"info\">Purchase Order is generated successfully</Alert>\n            <Modal\n              isOpen={success}\n              toggle={this.toggle}\n              className={this.props.className}\n            >\n              <ModalHeader toggle={this.toggle}>Move Order</ModalHeader>\n              <ModalBody>Order moved successfully</ModalBody>\n              <ModalFooter>\n                <Button color='primary' onClick={this.toggle}>\n                  Ok\n                </Button>\n              </ModalFooter>\n            </Modal>\n          ) : null}\n        </div>\n        <AvForm\n          onValidSubmit={this.handleValidSubmit}\n          onInvalidSubmit={this.handleInvalidSubmit}\n          ref={el => (this.myFormRef = el)}\n        >\n          <Card>\n            <CardHeader>Move Order</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='moveorderno'>Move Order No</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      name='moveorderno'\n                      type='text'\n                      id='moveorderno'\n                      value={data.moveorderno || null}\n                      onChange={this.handleChange}\n    \n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter Move Order No'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='fromaddress'>From location </Label>\n                    <AvField\n                      type='select'\n                      name='fromaddress'\n                      onChange={this.onhandlerFromChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage:\n                            'Please enter to location'\n                        }\n                      }}\n                    >\n                      <option value=''>select location</option>\n                      {this.createSelectLocationItems()}\n                    </AvField>\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='toaddress'>To location </Label>\n                    <AvField\n                      type='select'\n                      name='toaddress'\n                      onChange={this.onhandlerToChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage:\n                            'Please enter to location'\n                        }\n                      }}\n                    >\n                      <option value=''>select location</option>\n                      {this.createToLocationList()}\n                    </AvField>\n                  </AvGroup>\n                </Col>\n              </Row>\n              <Row>\n                <div className='mg-t-20'>\n                  <Button color='info' onClick={this.handleClick} type='button'>\n                    Add Item\n                  </Button>\n                </div>\n              </Row>\n              <div\n                className='purchaseorder-item-row'\n                style={{ overflowX: 'unset' }}\n              >\n                {data.values.map((values, index) => {\n                  return (\n                    <div key={index}>\n                      <div\n                        className='purchaseorder-table'\n                        style={{ width: 'auto' }}\n                      >\n                        <Row key={index}>\n                          <Col sm={2}>\n                            <AvGroup>\n                              <Label className='small-font-size' for='selectitem'>Item Name</Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                type='select'\n                                name={`selectitem${index}`}\n                                \n                                value={\n                                  data.selectedItemlist.id[index]\n                                }\n                                onChange={e => this.selectitemchange(e, index)}\n                                required={true}\n                              >\n                                <option value=''>select Item</option>\n                                {this.createSelectItems()}\n                              </AvField>\n                            </AvGroup>\n                          </Col>\n                          <Col sm={2}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`masteritemdescription${index}`}>\n                                Description\n                              </Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                name={`masteritemdescription${index}`}\n                                type='text'\n                                id='masteritemdescription'\n                                value={\n                                  data.selectedItemlist.itemdescription[index]\n                                }\n                                onChange={this.onChange}\n                                validate={{\n                                  required: {\n                                    value: true,\n                                    errorMessage:\n                                      'Please enter Item Description'\n                                  }\n                                \n                                 \n                                }}\n                              />\n                            </AvGroup>\n                          </Col>\n                          {/* <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`masteritemtype${index}`}>Type</Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                style={{ width: '150px' }}\n                                type='select'\n                                name={`masteritemtype${index}`}\n                                onChange={this.onChange}\n                                required={true}\n                                value={\n                                  data.selectedItemlist.itemtype[index] || null\n                                }\n                              >\n                                <option value=''>select</option>\n                                {this.createSelectItemTypes()}\n                              </AvField>\n                            </AvGroup>\n                          </Col> */}\n                          {/* <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`masteritemuom${index}`}>UOM</Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                type='select'\n                                name={`masteritemuom${index}`}\n                                onChange={this.onChange}\n                                required={true}\n                                value={\n                                  data.selectedItemlist.itemuom[index] || null\n                                }\n                              >\n                                <option value=''>uom</option>\n                                {this.createSelectUomItems()}\n                              </AvField>\n                            </AvGroup>\n                          </Col> */}\n                          <Col sm={2}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`quantity${index}`}>\n                                Available quantity\n                              </Label>\n                              <AvField\n                                name={`quantity${index}`}\n                                type='number'\n                                id={`quantity${index}`}\n                                disabled='true'\n                                value={\n                                  data.selectedItemlist.availableQuantity[\n                                    index\n                                  ]\n                                }\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={2}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`movequantity${index}`}>\n                                Move quantity\n                              </Label>\n                              <AvField\n                                name={`movequantity${index}`}\n                                type='number'\n                                id={`movequantity${index}`}\n                                \n                                value={\n                                  data.selectedItemlist.quantity[\n                                    index\n                                  ]\n                                }\n                                onChange={e => this.quantityChange(e, index)}\n                                validate={{\n                                  required: {\n                                    value: true,\n                                    errorMessage: 'Please enter Item Quantity'\n                                  },\n                                  pattern: {\n                                    value: '^[0-9.]*$',\n                                    errorMessage: 'Please enter valid quantity'\n                                  }\n                                }}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <Button\n                              type='button'\n                              color='danger'\n                              onClick={e => this.removeClick(e, index)}\n                              style={{ marginTop: '30px' }}\n                            >\n                              -\n                            </Button>\n                          </Col>\n                        </Row>\n                      </div>\n                    </div>\n                  );\n                })}\n              </div>\n              <Row>\n                <div className='mg-20'>\n                  <Button\n                    color='primary'\n                    disabled={loading}\n                    className='lgn-loader'\n                  >\n                    Submit\n                    {/* {loading} */}\n                  </Button>\n                </div>\n              </Row>\n            </CardBody>\n          </Card>\n        </AvForm>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    supplierdetaillistvalue: state.supplierdetaillistvalue,\n    masteritemlistvalues: state.masteritemlistvalues,\n    materialoptionlistvalues: state.masteritemtypenamevalue,\n    currencylistvalues: state.currencylistvalue,\n    uomlistvalues: state.uomlistvalue,\n    locationlistvalue: state.locationlistvalue,\n    purchaseorderlistvalues: state.purchaseorderlistvalue,\n    moveorderlistvalues: state.moveorderlistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { totalitemvaluesearch }\n)(MoveOrderScreenForm);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport {\n  getMasterItemList,\n  getMasterItemTypes\n} from '../../../actions/Transaction';\nimport { connect } from 'react-redux';\nimport { getUomList } from '../../../actions/uom';\nimport { getCustomerList } from '../../../actions/customerContact';\nimport { addMoveOrder } from '../../../actions/moveorder';\nimport { getMoveOrder } from '../../../actions/moveorder';\nimport MoveOrderScreenForm from './MoveOrderScreenForm/MoveOrderScreenForm';\nimport CustomLoader from '../../../Components/loader/loader';\nimport { getLocationList } from '../../../actions/Location';\n\nclass MoveOrderScreen extends React.Component {\n  state = {\n    loading: false\n  };\n  componentDidMount() {\n    this.props.getCustomerList();\n    this.props.getMasterItemTypes();\n    this.props.getMasterItemList();\n    this.props.getUomList();\n    this.props.getMoveOrder();\n    this.props.getLocationList();\n  }\n  submit = data => {\n    console.log(data);\n    this.dataHandler(true);\n    return this.props\n      .addMoveOrder(data)\n      .then(data => {\n        this.dataHandler(false);\n        return data;\n      })\n      .catch(err => {\n        this.dataHandler(false);\n        throw err;\n      });\n  };\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n  render() {\n    const { loading } = this.state;\n    return (\n      <div className='container mg-t-20'>\n        {loading ? <CustomLoader /> : null}\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to='/admin_dashboard'>Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to='/transaction_page'>Transactions</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to='/move-order'>Move Order</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>Move</BreadcrumbItem>\n        </Breadcrumb>\n        <div>\n          <MoveOrderScreenForm submit={this.submit} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  {\n    getMasterItemList,\n    getMasterItemTypes,\n    getUomList,\n    addMoveOrder,\n    getCustomerList,\n    getMoveOrder,\n    getLocationList\n  }\n)(MoveOrderScreen);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { getMoveOrder } from '../../../../actions/moveorder';\nimport { Button, Alert } from 'reactstrap';\nimport DataTable from '../../../../Components/Table/DatatablePage';\nimport CustomLoader from '../../../../Components/loader/loader';\n\nclass ViewProduction extends React.Component {\n  state = {\n    count: 0,\n    loading: true,\n    moveorderlistvalues: []\n  };\n  componentDidMount() {\n    this.props.getMoveOrder();\n    // console.log(this.props);\n    // if (this.props.moveorderlistvalues) {\n    //   const quotationlist = Object.values(this.props.moveorderlistvalues);\n    //   const moveorderlistvalues = quotationlist.map(quotationvalue => {\n    //     return {\n    //       moveorderno: quotationvalue.moveorderno,\n    //       fromaddress: quotationvalue.fromaddress,\n    //       toaddress: quotationvalue.toaddress\n    //     };\n    //   });\n    //   this.setState({ ...this.state, moveorderlistvalues });\n    //   this.dataHandler(false);\n    // }\n  }\n  componentWillReceiveProps(props) {\n    let quotationlist = Object.values(props.moveorderlistvalues);\n    //quotationlist= quotationlist.sort((a, b) => b.moveorderno.toLowerCase().localeCompare(a.moveorderno.toLowerCase()));\n    quotationlist.sort(function(a, b){\n      return parseInt(b.moveorderno) - parseInt(a.moveorderno);\n    });\n    const moveorderlistvalues = quotationlist.map(quotationvalue => {\n      return {\n        moveorderno: quotationvalue.moveorderno,\n        fromaddress: quotationvalue.fromaddress,\n        toaddress: quotationvalue.toaddress\n      };\n    });\n    this.setState({ ...this.state, moveorderlistvalues });\n    this.dataHandler(false);\n  }\n\n  updateButton = id => {\n    // let path = `/view_invoicepdf/${id}`;\n    // window.open(path, '_blank');\n    let path = `/view_invoicepdf/${id}`;\n    //window.open(path, \"_blank\");\n    this.props.history.push(path);\n  };\n\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n\n  render() {\n    const { loading, count, moveorderlistvalues } = this.state;\n    console.log(moveorderlistvalues);\n    const columnvalue = [\n      {\n        label: 'Move Order No',\n        field: 'moveorderno',\n        sort: 'asc',\n        width: 40\n      },\n      {\n        label: 'From Address',\n        field: 'fromaddress',\n        sort: 'asc',\n        width: 40\n      },\n      {\n        label: 'To Address',\n        field: 'toaddress',\n        sort: 'asc',\n        width: 40\n      }\n    ];\n    return (\n      <div className='container mg-t-20'>\n        {loading ? <CustomLoader /> : null}\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to='/admin_dashboard'>Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to='/transaction_page'>Transactions</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to='/move-order'>Move Order</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>List</BreadcrumbItem>\n        </Breadcrumb>\n        <div>\n          <DataTable\n            rowvalues={moveorderlistvalues}\n            columnvalue={columnvalue}\n            className=\"moveorderlist\"\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    moveorderlistvalues: state.moveorderlistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { getMoveOrder }\n)(ViewProduction);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { AvForm, AvField, AvGroup } from 'availity-reactstrap-validation';\nimport {\n  Button,\n  Label,\n  Alert,\n  Card,\n  CardBody,\n  CardHeader,\n  Row,\n  Col,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from 'reactstrap';\nimport 'react-datepicker/dist/react-datepicker.css';\n\nimport { totalitemvaluesearch, getMasterItemList } from '../../../../actions/Transaction';\nimport axios from \"axios\";\n\nclass AddOnHandScreenForm extends React.Component {\n  state = {\n    data: {\n      selectedItemlist: {\n        id: [null],\n        itemname: [null],\n        itemdescription: [null],\n        itemlocation: [null],\n        quantity: [null],\n        availableQuantity: [null],\n      },\n      fromaddress: '',\n      values: ['']\n    },\n    errors: {},\n    materialoptionlistvalues: [],\n    supplierdetaillistvalue: [],\n    supplierdetaillistvalueobject: {},\n    masteritemlistvalues: [],\n    masteritemlistvaluesobject: {},\n    currencylistvalues: [],\n    uom: [],\n    locationlistvalue: [],\n    tolocationlist: [],\n    itemlist: [],\n    loading: false,\n    success: false,\n    masterItemList: []\n  };\n\n  componentDidMount() {\n    // this.props.getLocationList();\n    this.props.getMasterItemList().then((result) => {\n      console.log('result..............................');\n      console.log(result);\n\n      let items = [];\n      //MasterItemTypeList.entities.masteritemtypelistvalues\n      for (let key in result.MasterItemTypeList.result) {\n        const data = result.MasterItemTypeList.entities.masteritemtypelistvalues[result.MasterItemTypeList.result[key]];\n        console.log(data);\n        items.push({\n          id: data['id'],\n          itemid: data['id'],\n          itemname: data['masteritemtypename'],\n          itemdescription: data['masteritemshortdescription'] != '' ? data['masteritemshortdescription'] : data['masteritemdescription'],\n          quantity: 0,\n          availableQuantity: 0\n        });\n      }\n\n      console.log('UUUUUUUUUUUUUUUUUUUUUUUU');\n      console.log(items);\n      this.setState({\n        masterItemList: items\n      });\n    });\n  }\n\n  componentWillReceiveProps(props) {\n    const materialoptionlistvalues = Object.values(\n      props.materialoptionlistvalues\n    );\n    const masteritemlistvalues = Object.values(props.masteritemlistvalues);\n    const masteritemlistvaluesobject = props.masteritemlistvalues;\n    const currencylistvalues = Object.values(props.currencylistvalues);\n    const uomlistvalues = Object.values(props.uomlistvalues);\n    const locationlistvalue = Object.values(props.locationlistvalue);\n    this.setState({\n      ...this.state,\n      masteritemlistvalues,\n      masteritemlistvaluesobject,\n      materialoptionlistvalues,\n      currencylistvalues,\n      locationlistvalue,\n      uom: uomlistvalues,\n      data: {\n        ...this.state.data\n      }\n    }, () => {\n\n    });\n  }\n\n  selectitemchange = (e, index) => {\n    const selected_id = e.target.value;\n    if (selected_id) {\n      let list = this.state.itemlist;\n      const selected_item_list = list.filter(it => it.itemid === selected_id);\n      const selected_item = selected_item_list[0];\n      console.log(selected_item);\n      console.log(this.state.masterItemList)\n      let itemdesc = ''\n      this.state.masterItemList.map((item) =>{\n        if(item.itemname == selected_item.itemname)\n          itemdesc = item.itemdescription\n      })\n\n      const selectedItemlist = { ...this.state.data.selectedItemlist };\n      selectedItemlist.id[index] = selected_item.itemid;\n      selectedItemlist.itemname[index] = selected_item.itemname;\n      selectedItemlist.itemdescription[index] = itemdesc != '' ? itemdesc : selected_item.itemdescription;\n      selectedItemlist.quantity[index] = selected_item.itemquantity || 0;\n      selectedItemlist.availableQuantity[index] = selected_item.itemquantity || 0;\n      this.setState({\n        ...this.state.data,\n        data: {\n          ...this.state.data,\n          selectedItemlist\n        }\n      });\n    }\n  };\n\n  locationChange = (e, index) => {\n    const selected_location = e.target.value;\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.itemlocation[index] = selected_location;\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n  };\n\n  onhandlerChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n  onhandlerFromChange = e => {\n    const locationlistvalue = this.state.locationlistvalue;\n    let tolocationlist = locationlistvalue.filter(item => item.id !== e.target.value);\n    this.setState({\n      ...this.state,\n      tolocationlist,\n      data: { ...this.state.data, fromaddress: e.target.value }\n    });\n    let data = { locationid: e.target.value, itemid: '' };\n    let location = e.target.value;\n    this.props.totalitemvaluesearch(data).then(data => {\n      console.log(data);\n\n\n      const isAdded = [];\n      const itemlist = [];\n      data.itemlist.forEach(item => {\n        if (item['itemname']) {\n          itemlist.push({\n            id: item.id,\n            locationname: item.locationname,\n            itemid: item.itemid,\n            itemname: item.itemname,\n            itemdescription: item.itemdescription,\n            itemquantity: item.itemquantity\n          });\n        }\n      });\n\n\n      itemlist.forEach(data => {\n        if (data['itemname']) {\n          isAdded.push(data['itemname'])\n        }\n      });\n\n      console.log('Before Adding Remaining');\n      console.log(itemlist);\n\n      const allItems = this.state.masterItemList;\n      allItems.forEach((item, index) => {\n        if (!(isAdded.indexOf(item.itemname) > -1)) {\n          itemlist.push({\n            id: item.id,\n            locationname: location,\n            itemid: item.itemid,\n            itemname: item.itemname,\n            itemdescription: item.itemdescription,\n            itemquantity: item.itemquantity\n          });\n        }\n      });\n\n      console.log('After Adding Remaining');\n      console.log(itemlist);\n\n      this.setState({\n        ...this.state,\n        itemlist\n      });\n      // return data;\n    });\n  };\n  onhandlerToChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, toaddress: e.target.value }\n    });\n  };\n  onSubjectHandler = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n\n\n  createSelectItems = () => {\n    let items = [];\n    let masteritemlistvalues = this.state.itemlist;\n    console.log('###################################');\n    console.log(masteritemlistvalues);\n    // masteritemlistvalues = this.filterItems(masteritemlistvalues, 'itemname');\n    console.log(masteritemlistvalues)\n\n    masteritemlistvalues = masteritemlistvalues.sort((a,b)=>{return a['itemname'].toLowerCase().localeCompare(b['itemname'].toLowerCase())})\n    \n\n    masteritemlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.itemid}>\n          {option.itemname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  createSelectLocationItems = () => {\n    let items = [];\n    const locationlistvalue = this.state.locationlistvalue;\n    locationlistvalue.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.locationname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  createToLocationList = () => {\n    let items = [];\n    const locationlistvalue = this.state.tolocationlist;\n    locationlistvalue.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.locationname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  handleClick = e => {\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        values: [...this.state.data.values, ''],\n        selectedItemlist: {\n          ...this.state.data.selectedItemlist,\n          id: [...this.state.data.selectedItemlist.id, ''],\n          itemname: [...this.state.data.selectedItemlist.itemname, ''],\n          itemdescription: [\n            ...this.state.data.selectedItemlist.itemdescription,\n            ''\n          ],\n          itemlocation: [...this.state.data.selectedItemlist.itemlocation, ''],\n          quantity: [...this.state.data.selectedItemlist.quantity, 0],\n          availableQuantity: [...this.state.data.selectedItemlist.quantity, '']\n        }\n      }\n    });\n  };\n  removeClick = (e, index) => {\n    const removeItem = { ...this.state.data };\n    const values = removeItem.values;\n    const id = removeItem.selectedItemlist.id;\n    const itemname = removeItem.selectedItemlist.itemname;\n    const itemdescription = removeItem.selectedItemlist.itemdescription;\n    const itemlocation = removeItem.selectedItemlist.itemlocation;\n    const quantity = removeItem.selectedItemlist.quantity;\n    const availableQuantity = removeItem.selectedItemlist.availableQuantity;\n\n    const totalcost = removeItem.selectedItemlist.totalcost;\n    values.splice(index, 1);\n    id.splice(index, 1);\n    itemname.splice(index, 1);\n    itemdescription.splice(index, 1);\n    itemlocation.splice(index, 1);\n    quantity.splice(index, 1);\n    availableQuantity.splice(index, 1);\n\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        values,\n        selectedItemlist: {\n          ...this.state.data.selectedItemlist,\n          id,\n          itemname,\n          itemdescription,\n          itemlocation,\n          availableQuantity,\n          quantity\n        }\n      }\n    });\n  };\n\n  quantityChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n\n    console.log(typeof selectedItemlist.quantity[index])\n    console.log(typeof selectedItemlist.availableQuantity[index])\n\n    selectedItemlist.quantity[index] = e.target.value;\n\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n  };\n\n  handleValidSubmit = () => {\n    let iteminfo = [];\n    const { supplierdetail, selectedItemlist, fromaddress } = this.state.data;\n    const { values } = this.state.data;\n    const id = selectedItemlist.id;\n    const itemname = selectedItemlist.itemname;\n    const itemdescription = selectedItemlist.itemdescription;\n    // const itemlocation = selectedItemlist.itemlocation;\n    const quantity = selectedItemlist.quantity;\n    values.forEach(function (value, i) {\n      let obj = {};\n      obj.id = id[i] || null;\n      obj.itemid = id[i] || null;\n      obj.itemdescription = itemdescription[i] || null;\n      obj.itemlocation = fromaddress;//itemlocation[i] || null;\n      obj.recevingqty = quantity[i] || null;\n      iteminfo.push(obj);\n    });\n    const { data } = this.state;\n    data['iteminfo'] = iteminfo;\n    this.setState({ loading: true });\n    // console.log(JSON.stringify(selectedItemlist))\n    console.log(JSON.stringify(data));\n    this.props\n      .submit(data)\n      .then(() => {\n        this.setState({\n          loading: false,\n          errors: {},\n          success: true,\n          data: {\n            selectedItemlist: {\n              id: [null],\n              itemname: [null],\n              itemdescription: [null],\n              itemlocation: [null],\n              quantity: [null],\n              availableQuantity: [null],\n            },\n            fromaddress: '',\n            values: ['']\n          }\n        });\n        this.myFormRef.reset();\n      })\n      .catch(err => {\n        this.setState({ errors: err.response.data.errors, loading: false });\n      });\n  };\n\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n\n  handleInvalidSubmit = () => {\n    console.log('invalid submit');\n  };\n  render() {\n    const { data, errors, loading, success } = this.state;\n    return (\n      <div>\n        <div>\n          {!!success ? (\n            // <Alert color=\"info\">Purchase Order is generated successfully</Alert>\n            <Modal\n              isOpen={success}\n              toggle={this.toggle}\n              className={this.props.className}\n            >\n              <ModalHeader toggle={this.toggle}>Move Order</ModalHeader>\n              <ModalBody>On Hand Updated successfully</ModalBody>\n              <ModalFooter>\n                <Button color='primary' onClick={this.toggle}>\n                  Ok\n                </Button>\n              </ModalFooter>\n            </Modal>\n          ) : null}\n        </div>\n        <AvForm\n          onValidSubmit={this.handleValidSubmit}\n          onInvalidSubmit={this.handleInvalidSubmit}\n          ref={el => (this.myFormRef = el)}\n        >\n          <Card>\n            <CardHeader>On Hand</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='fromaddress'>Select location </Label>\n                    <AvField\n                      type='select'\n                      name='fromaddress'\n                      onChange={this.onhandlerFromChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage:\n                            'Please enter to location'\n                        }\n                      }}\n                    >\n                      <option value=''>select location</option>\n                      {this.createSelectLocationItems()}\n                    </AvField>\n                  </AvGroup>\n                </Col>\n              </Row>\n              <Row>\n                <div className='mg-t-20'>\n                  <Button color='info' onClick={this.handleClick} type='button'>\n                    Add Item\n                  </Button>\n                </div>\n              </Row>\n              <div\n                className='purchaseorder-item-row'\n                style={{ overflowX: 'unset' }}\n              >\n                {data.values.map((values, index) => {\n                  return (\n                    <div key={index}>\n                      <div\n                        className='purchaseorder-table'\n                        style={{ width: 'auto' }}\n                      >\n                        <Row key={index}>\n                          <Col sm={2}>\n                            <AvGroup>\n                              <Label className='small-font-size' for='selectitem'>Item Code</Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                type='select'\n                                name={`selectitem${index}`}\n\n                                value={\n                                  data.selectedItemlist.id[index]\n                                }\n                                onChange={e => this.selectitemchange(e, index)}\n                                required={true}\n                              >\n                                <option value=''>select Item</option>\n                                {this.createSelectItems()}\n                              </AvField>\n                            </AvGroup>\n                          </Col>\n                          <Col sm={2}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`masteritemdescription${index}`}>\n                                Description\n                              </Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                name={`masteritemdescription${index}`}\n                                type='text'\n                                id='masteritemdescription'\n                                value={\n                                  data.selectedItemlist.itemdescription[index]\n                                }\n                                onChange={this.onChange}\n                                validate={{\n                                  required: {\n                                    value: true,\n                                    errorMessage:\n                                      'Please enter Item Description'\n                                  }\n                                }}\n                              />\n                            </AvGroup>\n                          </Col>\n\n                          <Col sm={2}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`quantity${index}`}>\n                                Quantity\n                              </Label>\n                              <AvField\n                                name={`quantity${index}`}\n                                type='number'\n                                id={`quantity${index}`}\n                                value={data.selectedItemlist.availableQuantity[index]}\n                                disabled={true}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={2}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`newquantity${index}`}>\n                                New Quantity\n                              </Label>\n                              <AvField\n                                name={`newquantity${index}`}\n                                type='number'\n                                id={`newquantity${index}`}\n                                value={data.selectedItemlist.quantity[index]}\n                                onChange={e => this.quantityChange(e, index)}\n                                validate={{\n                                  required: {\n                                    value: true,\n                                    errorMessage: 'Please enter Item Quantity'\n                                  },\n                                  pattern: {\n                                    value: '^[0-9.]*$',\n                                    errorMessage: 'Please enter valid quantity'\n                                  }\n                                }}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <Button\n                              type='button'\n                              color='danger'\n                              onClick={e => this.removeClick(e, index)}\n                              style={{ marginTop: '30px' }}\n                            >\n                              -\n                            </Button>\n                          </Col>\n                        </Row>\n                      </div>\n                    </div>\n                  );\n                })}\n              </div>\n              <Row>\n                <div className='mg-20'>\n                  <Button\n                    color='primary'\n                    disabled={loading}\n                    className='lgn-loader'\n                  >\n                    Submit\n                    {/* {loading} */}\n                  </Button>\n                </div>\n              </Row>\n            </CardBody>\n          </Card>\n        </AvForm>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    supplierdetaillistvalue: state.supplierdetaillistvalue,\n    masteritemlistvalues: state.masteritemlistvalues,\n    materialoptionlistvalues: state.masteritemtypenamevalue,\n    currencylistvalues: state.currencylistvalue,\n    uomlistvalues: state.uomlistvalue,\n    locationlistvalue: state.locationlistvalue,\n    purchaseorderlistvalues: state.purchaseorderlistvalue,\n    moveorderlistvalues: state.moveorderlistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  {\n    totalitemvaluesearch,\n    // getLocationList,\n    getMasterItemList\n  }\n)(AddOnHandScreenForm);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport {\n  getMasterItemList,\n  getMasterItemTypes\n} from '../../../actions/Transaction';\nimport { connect } from 'react-redux';\nimport { getUomList } from '../../../actions/uom';\nimport { getCustomerList } from '../../../actions/customerContact';\nimport { addMoveOrder } from '../../../actions/moveorder';\nimport { getMoveOrder } from '../../../actions/moveorder';\nimport AddOnHandScreenForm from './AddOnHandScreenForm/AddOnHandScreenForm';\nimport CustomLoader from '../../../Components/loader/loader';\nimport { getLocationList } from '../../../actions/Location';\nimport { additemsinlocation } from '../../../actions/Transaction';\n\nclass AddOnHand extends React.Component {\n  state = {\n    loading: false\n  };\n  componentDidMount() {\n    this.props.getCustomerList();\n    this.props.getMasterItemTypes();\n    this.props.getMasterItemList();\n    this.props.getUomList();\n    this.props.getMoveOrder();\n    this.props.getLocationList();\n  }\n  submit = data => {\n    console.log(data);\n    this.dataHandler(true);\n    return this.props\n      .additemsinlocation(data)\n      .then(data => {\n        this.dataHandler(false);\n        return data;\n      })\n      .catch(err => {\n        this.dataHandler(false);\n        throw err;\n      });\n  };\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n  render() {\n    const { loading } = this.state;\n    return (\n      <div className='container mg-t-20'>\n        {loading ? <CustomLoader /> : null}\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to='/admin_dashboard'>Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to='/transaction_page'>Transactions</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to='/onhand'>On Hand</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>Add On Hand</BreadcrumbItem>\n        </Breadcrumb>\n        <div>\n          <AddOnHandScreenForm submit={this.submit} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  {\n    getMasterItemList,\n    getMasterItemTypes,\n    getUomList,\n    addMoveOrder,\n    getCustomerList,\n    getMoveOrder,\n    getLocationList,\n    additemsinlocation\n  }\n)(AddOnHand);","import axios from 'axios';\n\nexport default {\n  production: {\n    addproduction: data => {\n      return axios\n        .post(`${process.env.REACT_APP_BASE_URL}/production/addproduction`, {\n          data\n        })\n        .then(res => {\n          return res.data.productiondata;\n        });\n    },\n    getproduction: () => {\n      return axios\n        .get(`${process.env.REACT_APP_BASE_URL}/production/getproduction`)\n        .then(res => {\n          return res.data.productionlist;\n        });\n    },\n    searchquotation: customerid => {\n      return axios\n        .get(\n          `${process.env.REACT_APP_BASE_URL}/quotation/searchquotation?q=${customerid}`\n        )\n        .then(res => {\n          return res.data.customerquotationlist;\n        });\n    }\n  }\n};\n","import { normalize } from 'normalizr';\nimport api from '../Services/productionapi';\nimport { ADD_PRODUCTION, PRODUCTION_FETCHED } from '../Services/types';\nimport { productionListSchema } from '../Schemas/schemas';\n\nconst productionCreated = productionlist => {\n  return {\n    type: ADD_PRODUCTION,\n    productionlist\n  };\n};\n\nconst productionFetched = productionlist => {\n  return {\n    type: PRODUCTION_FETCHED,\n    productionlist\n  };\n};\n\nexport const addproduction = data => {\n  return dispatch => {\n    return api.production.addproduction(data).then(productionlistvalues => {\n      return dispatch(\n        productionCreated(normalize(productionlistvalues, productionListSchema))\n      );\n    });\n  };\n};\n\nexport const getproduction = () => {\n  return dispatch => {\n    return api.production.getproduction().then(productionlist => {\n      const productionlistvalues = productionlist.productiondata;\n      console.log(productionlistvalues);\n      return dispatch(\n        productionFetched(\n          normalize(productionlistvalues, [productionListSchema])\n        )\n      );\n    });\n  };\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { AvForm, AvField, AvGroup } from 'availity-reactstrap-validation';\nimport {\n  Button,\n  Label,\n  Alert,\n  Card,\n  CardBody,\n  CardHeader,\n  Row,\n  Col,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Table\n} from 'reactstrap';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport axios from \"axios\";\n\nclass ProductionForm extends React.Component {\n  state = {\n    data: {\n      selectedItemlist: {\n        id: [null],\n        itemname: [null],\n        itemdescription: [null],\n        itemtype: [null],\n        itemrate: [null],\n        itemuom: [null],\n        itemlocation: [null],\n        costperunit: [null],\n        quantity: [null],\n        totalcost: [null],\n        remarks: [null],\n        totalweight: [null],\n        readystock: [null],\n        firstround: [null],\n        secondround: [null],\n        thirdround: [null]\n      },\n      products: [],\n      productionorderno: '',\n      customerid: '',\n      item: '',\n      date: new Date(),\n      quantity: '',\n      subAssembly: [],\n      values: ['']\n    },\n    errors: {},\n    itemname:'',\n    materialoptionlistvalues: [],\n    productMaterial: [],\n    customerlistvalues: [],\n    productlistvalues: [],\n    supplierdetaillistvalue: [],\n    supplierdetaillistvalueobject: {},\n    masteritemlistvalues: [],\n    masteritemlistvaluesobject: {},\n    currencylistvalues: [],\n    uom: [],\n    locationlistvalue: [],\n    loading: false,\n    success: false\n  };\n  dummyProductMapping = {\n    props: [\n      { assembly: '50 NB H.R. Tubes', unit: 'Kgs' },\n      { assembly: '40 NB H.R. Tubes', unit: 'Kgs' },\n      { assembly: '6 mm MS Plate', unit: 'Kgs' },\n      { assembly: 'Prop nut', unit: 'Kgs' }\n    ]\n  };\n\n \n\n  componentWillReceiveProps(props) {\n   \n\n    const materialoptionlistvalues = Object.values(\n      props.materialoptionlistvalues\n    );\n    // const supplierdetaillistvalue = Object.values(\n    //   props.supplierdetaillistvalue\n    // );\n    // const supplierdetaillistvalueobject = props.supplierdetaillistvalue;\n    const customerlistvalues = Object.values(this.props.customerlistvalues);\n    const productlistvalues = Object.values(this.props.productlistvalues);\n    console.log(productlistvalues)\n    const masteritemlistvalues = Object.values(props.masteritemlistvalues);\n\n    const masteritemlistvaluesobject = props.masteritemlistvalues;\n    const currencylistvalues = Object.values(props.currencylistvalues);\n    const uomlistvalues = Object.values(props.uomlistvalues);\n    const locationlistvalue = Object.values(props.locationlistvalue);\n    const purchaseorderlist = Object.keys(this.props.purchaseorderlistvalues);\n    const productionlistvalues = Object.keys(this.props.productionlistvalues);\n    const productionorderno =\n      productionlistvalues.length > 0\n        ? 1 + productionlistvalues.length\n        : 1;\n    this.setState({\n      ...this.state,\n      masteritemlistvalues,\n      customerlistvalues,\n      productlistvalues,\n      masteritemlistvaluesobject,\n      materialoptionlistvalues,\n      currencylistvalues,\n      locationlistvalue,\n      uom: uomlistvalues,\n      data: {\n        ...this.state.data,\n        productionorderno\n      }\n    },()=>{\n      if(productionlistvalues.length == 0)\n        this.getProddata()\n    });\n  }\n\n  getProddata(){\n    if(Object.keys(this.props.productionlistvalues).length == 0){\n      axios\n      .get(`${process.env.REACT_APP_BASE_URL}/production/getproduction`)\n      .then(res => {\n         //if (res.data.productionlist.productiondata.length > 0) {\n           \n          let productionorderno =\n          res.data.productionlist.productiondata.length > 0 ? 1 + res.data.productionlist.productiondata.length : 1;\n          \n          this.setState({\n            ...this.state,\n            data: {\n              ...this.state.data,\n              productionorderno\n            }\n          });\n        //}\n      },\n        error => {\n          this.setState({ success: false, message: 'Server error.' });\n        });\n    }\n  }\n\n  handleChangeDeliveryDate = date => {\n    this.setState({\n      data: {\n        ...this.state.data,\n        requestdeliverydate: date\n      }\n    });\n  };\n  handleChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  totalValue = () => {\n    const { totalcost } = this.state.data.selectedItemlist;\n    if (totalcost.length > 0) {\n      const totalvalue = totalcost\n        .map((value, i) => {\n          if (value) {\n            return parseFloat(value);\n          } else {\n            return 0;\n          }\n        })\n        .reduce((a, b) => {\n          return a + b;\n        });\n      this.setState({\n        ...this.state.data,\n        data: {\n          ...this.state.data,\n          totalvalue\n        }\n      });\n    }\n  };\n\n  selectitemchange = (e, index) => {\n    let products2 = this.state.data.products;\n    console.log(products2[index].quantity)\n\n    let item = e.target.options[e.target.selectedIndex].text;\n    console.log(item)\n    const selected_id = e.target.value;\n    console.log(selected_id)\n    let productMaterial2 = [],found=0;\n    let obj = {},arr = []\n    productMaterial2.push(this.props.masteritemlistvalues[selected_id])\n    let itemname = productMaterial2[0].masteritemtypename\n    console.log(productMaterial2)\n \n    for(var i=0;i<this.state.productlistvalues.length;i++){\n      if(this.state.productlistvalues[i].productname.toString().trim().toLowerCase() == productMaterial2[0].masteritemdescription.toString().trim().toLowerCase()){\n        found = 1;\n        break;\n      }\n    }\n    if(found == 1){\n      if(this.state.productlistvalues[i].productMaterial != null && this.state.productlistvalues[i].productMaterial.length > 0){\n        this.state.productlistvalues[i].productMaterial.map((item,index) =>{\n          console.log(item)\n          obj = {}\n          obj['masteritemdescription'] = item.productqty\n          obj['masteritemuom'] = new Object()\n          obj['permeter'] = this.state.productlistvalues[i].permeter\n          obj['perfeet'] = this.state.productlistvalues[i].perfeet\n          obj['perinch'] = this.state.productlistvalues[i].perinch\n          obj['quantityPerMeter'] = this.state.productlistvalues[i].productsqtyinmeter[index] ? this.state.productlistvalues[i].productsqtyinmeter[index] : 0\n          obj['quantityPerKg'] = this.state.productlistvalues[i].productsweight[index] ? this.state.productlistvalues[i].productsweight[index] : 0\n          obj['masteritemuom']['uomname'] =  this.state.productlistvalues[i].productsuom[index]\n          arr.push(obj)\n        })\n      }\n      productMaterial2 = arr\n    }\n    console.log(arr)\n    let subAssembly = [];\n    console.log(productMaterial2)\n    let calculationArray = [];\n    productMaterial2.map(product => {\n\n      let calculationdata = { permeter: null, perfeet: null, perinch: null };\n      product.quantityPerMeter = parseInt(product.quantityPerMeter)\n      product.quantityPerKg = parseInt(product.quantityPerKg)\n      product.quantityPerMeter = products2[index].quantity != 0 && products2[index].quantity != '0' && products2[index].quantity != '' ? parseInt(products2[index].quantity) * parseInt(product.quantityPerMeter) : product.quantityPerMeter\n      product.quantityPerKg = products2[index].quantity != 0 && products2[index].quantity != '0' && products2[index].quantity != '' ? parseInt(products2[index].quantity) * parseInt(product.quantityPerMeter) * product.quantityPerKg : product.quantityPerMeter * product.quantityPerKg\n\n      subAssembly.push({\n        name: product.masteritemdescription,\n        unit: product.masteritemuom.uomname,\n        thickness: 0,\n        quantity: 0,\n        quantityPerMeter:product.quantityPerMeter,\n        quantityPerKg: product.quantityPerKg,\n        total: 0\n      });\n      if (product.permeter && product.permeter !== null) {\n        calculationdata.permeter = Number(product.permeter);\n      }\n\n      if (product.perfeet && product.perfeet !== null) {\n        calculationdata.perfeet = Number(product.perfeet);\n      }\n\n      if (product.perinch && product.perinch !== null) {\n        calculationdata.perinch = Number(product.perinch);\n      }\n      calculationArray.push(calculationdata);\n    });\n    console.log(this.state.data.products)\n    let products = this.state.data.products;\n    products[index].subAssembly = subAssembly;\n    products[index].item = item;\n    products[index].calculationArray = calculationArray;\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, item, subAssembly, products },\n      itemname: 'Item code: ' + '\\n' + itemname,\n      productMaterial2\n    });\n  };\n\n  locationChange = (e, index) => {\n    const selected_location = e.target.value;\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.itemlocation[index] = selected_location;\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n  };\n\n  onhandlerChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  onSubjectHandler = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  createSelectItems = () => {\n    let items = [];\n    let productlistvalues = this.state.masteritemlistvalues;\n    console.log(productlistvalues)\n    productlistvalues = productlistvalues.filter((item) =>{\n      return item.masteritemtype.masteritemtypename == 'FinishedGoods'\n    })\n    productlistvalues.map((option, i) => {\n     option['masteritemdescription2'] = option.masteritemshortdescription != '' ?  option.masteritemshortdescription : option.masteritemdescription\n      \n     items.push(\n        <option key={i} value={option.id}>\n          {option.masteritemdescription2}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  createSelectItemTypes = () => {\n    let items = [];\n    const materialoptionlistvalues = this.state.materialoptionlistvalues;\n    materialoptionlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.masteritemtypename}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  createSelectCurrencyItems = () => {\n    let items = [];\n    const currencylistvalues = this.state.currencylistvalues;\n    currencylistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.currencyname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  createSelectUomItems = () => {\n    let items = [];\n    const uomlistvalues = this.state.uom;\n    uomlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.uomname}\n        </option>\n      );\n    });\n    return items;\n  };\n  createSelectLocationItems = () => {\n    let items = [];\n    const locationlistvalue = this.state.locationlistvalue;\n    locationlistvalue.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.locationname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  handleClick = e => {\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        values: [...this.state.data.values, ''],\n        selectedItemlist: {\n          ...this.state.data.selectedItemlist,\n          id: [...this.state.data.selectedItemlist.id, ''],\n          itemname: [...this.state.data.selectedItemlist.itemname, ''],\n          itemdescription: [\n            ...this.state.data.selectedItemlist.itemdescription,\n            ''\n          ],\n          itemtype: [...this.state.data.selectedItemlist.itemtype, ''],\n          itemrate: [...this.state.data.selectedItemlist.itemrate, ''],\n          itemuom: [...this.state.data.selectedItemlist.itemuom, ''],\n          itemlocation: [...this.state.data.selectedItemlist.itemlocation, ''],\n          costperunit: [...this.state.data.selectedItemlist.costperunit, ''],\n          quantity: [...this.state.data.selectedItemlist.quantity, ''],\n          totalcost: [...this.state.data.selectedItemlist.totalcost, '']\n        }\n      }\n    });\n  };\n  removeClick = (e, index) => {\n    const removeItem = { ...this.state.data };\n    const values = removeItem.values;\n    const id = removeItem.selectedItemlist.id;\n    const itemname = removeItem.selectedItemlist.itemname;\n    const itemdescription = removeItem.selectedItemlist.itemdescription;\n    const itemtype = removeItem.selectedItemlist.itemtype;\n    const itemrate = removeItem.selectedItemlist.itemrate;\n    const itemuom = removeItem.selectedItemlist.itemuom;\n    const itemlocation = removeItem.selectedItemlist.itemlocation;\n    const costperunit = removeItem.selectedItemlist.costperunit;\n    const quantity = removeItem.selectedItemlist.quantity;\n    const totalcost = removeItem.selectedItemlist.totalcost;\n    values.splice(index, 1);\n    id.splice(index, 1);\n    itemname.splice(index, 1);\n    itemdescription.splice(index, 1);\n    itemtype.splice(index, 1);\n    itemrate.splice(index, 1);\n    itemuom.splice(index, 1);\n    itemlocation.splice(index, 1);\n    costperunit.splice(index, 1);\n    quantity.splice(index, 1);\n    totalcost.splice(index, 1);\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        values,\n        selectedItemlist: {\n          ...this.state.data.selectedItemlist,\n          id,\n          itemname,\n          itemdescription,\n          itemtype,\n          itemrate,\n          itemuom,\n          itemlocation,\n          costperunit,\n          quantity,\n          totalcost\n        }\n      }\n    });\n  };\n\n  quantityChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    const costperunit = selectedItemlist.costperunit[index] || null;\n    selectedItemlist.quantity[index] = e.target.value;\n    const totalValue = costperunit\n      ? e.target.value * costperunit\n      : null || undefined || '';\n    selectedItemlist.totalcost[index] = totalValue\n      ? parseFloat(totalValue).toFixed(2)\n      : '';\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n    this.totalValue();\n  };\n  remarkChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.remarks[index] = e.target.value;\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n  };\n  weightChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.totalweight[index] = e.target.value;\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n  };\n  createSelectcustomer = () => {\n    let items = [];\n    const customerlistvalues = this.state.customerlistvalues;\n    customerlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.customername}\n        </option>\n      );\n    });\n    return items;\n  };\n  stockChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.readystock[index] = e.target.value;\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n  };\n  secondChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.secondround[index] = e.target.value;\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n  };\n  firstChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.firstround[index] = e.target.value;\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n  };\n  thirdChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.thirdround[index] = e.target.value;\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n  };\n\n  unitChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.costperunit[index] = e.target.value;\n    const totalcost =\n      parseFloat(selectedItemlist.quantity[index]) *\n      parseFloat(selectedItemlist.costperunit[index]);\n    selectedItemlist.totalcost[index] = totalcost\n      ? totalcost.toFixed(2)\n      : null || '';\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n    this.totalValue();\n  };\n\n  handleValidSubmit = () => {\n    const { data } = this.state;\n    this.setState({ loading: true });\n    console.log(JSON.stringify(data));\n    this.props\n      .submit(data)\n      .then(() => {\n        this.setState({\n          loading: false,\n          errors: {},\n          success: true,\n          ...this.state.data,\n          data: {\n            ...this.state.data,\n            products: [],\n            subAssembly: []\n          }\n        });\n        this.myFormRef.reset();\n      })\n      .catch(err => {\n        this.setState({ errors: err.response.data.errors, loading: false });\n      });\n  };\n\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n\n  toggelreload = () => {\n    this.setState({ ...this.state, success: false });\n    window.location.reload()\n  }\n\n  handleInvalidSubmit = () => {\n    console.log('invalid submit');\n  };\n  onthicknessChange = (e, index, mainindex) => {\n    let products = this.state.data.products;\n    let subAssembly = products[mainindex].subAssembly;\n    subAssembly[index]['thickness'] = e.target.value;\n    products[mainindex].subAssembly = subAssembly;\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, products }\n    });\n  };\n  onQuantityChange = (e, index, mainindex) => {\n    let products = this.state.data.products;\n    let subAssembly = products[mainindex].subAssembly;\n    subAssembly[index]['quantity'] = e.target.value;\n    products[mainindex].subAssembly = subAssembly;\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, products }\n    });\n  };\n  // METER\n  onQuantityChangeMeter = (e, index, mainindex) => {\n    let products = this.state.data.products;\n    let subAssembly = products[mainindex].subAssembly;\n    subAssembly[index]['quantityPerMeter'] = e.target.value;\n    let calc = products[mainindex].calculationArray[index];\n    if (calc.permeter && calc.permeter !== null) {\n      let kg = Number(e.target.value) / Number(calc.permeter);\n      subAssembly[index]['quantityPerKg'] = kg;\n    }\n\n    products[mainindex].subAssembly = subAssembly;\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, products }\n    });\n  };\n  // KG\n  onQuantityChangeKg = (e, index, mainindex) => {\n    let products = this.state.data.products;\n    let subAssembly = products[mainindex].subAssembly;\n    subAssembly[index]['quantityPerKg'] = e.target.value;\n    let calc = products[mainindex].calculationArray[index];\n    if (calc.permeter && calc.permeter !== null) {\n      let kg = Number(e.target.value) * Number(calc.permeter);\n      subAssembly[index]['quantityPerMeter'] = kg;\n    }\n    products[mainindex].subAssembly = subAssembly;\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, products }\n    });\n  };\n  onTotalChange = (e, index, mainindex) => {\n    let products = this.state.data.products;\n    let subAssembly = products[mainindex].subAssembly;\n    subAssembly[index]['total'] = e.target.value;\n    products[mainindex].subAssembly = subAssembly;\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, products }\n    });\n  };\n  addItemComp = () => {\n    let products = this.state.data.products;\n    let items = { item: '', quantity: 0, subAssembly: [] };\n    products.push(items);\n    this.setState({\n      ...this.state.data,\n      products\n    });\n  };\n  changeQuantity = (e, index) => {\n    let products = this.state.data.products;\n    products[index].quantity = e.target.value;\n    console.log(products[index])\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, products }\n    });\n  };\n  render() {\n    const { data, errors, loading, success, productMaterial,itemname } = this.state;\n    return (\n      <div>\n        <div>\n          {!!success ? (\n            // <Alert color=\"info\">Purchase Order is generated successfully</Alert>\n            <Modal\n              isOpen={success}\n              toggle={this.toggle}\n              className={this.props.className}\n            >\n              <ModalHeader toggle={this.toggle}>Production</ModalHeader>\n              <ModalBody>Production order is generated successfully</ModalBody>\n              <ModalFooter>\n                <Button color='primary' onClick={this.toggelreload}>\n                  Ok\n                </Button>\n              </ModalFooter>\n            </Modal>\n          ) : null}\n        </div>\n        <AvForm\n          onValidSubmit={this.handleValidSubmit}\n          onInvalidSubmit={this.handleInvalidSubmit}\n          ref={el => (this.myFormRef = el)}\n        >\n          <Card>\n            <CardHeader>\n              Production\n              <Button\n                color='primary'\n                disabled={loading}\n                className='lgn-loader'\n                style={{ float: 'right' }}\n              >\n                Submit\n                {/* {loading} */}\n              </Button>\n            </CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='productionorderno'>Production No</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      name='productionorderno'\n                      type='text'\n                      id='productionorderno'\n                      value={data.productionorderno || null}\n                      onChange={this.handleChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter production order no'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='customerid'>Customer Name</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      type='select'\n                      name={`customerid`}\n                      required={true}\n                      onChange={e => this.handleChange(e)}\n                    >\n                      <option value=''>select customer name</option>\n                      {this.createSelectcustomer()}\n                    </AvField>\n                  </AvGroup>\n                </Col>\n              </Row>\n              {data.products &&\n                data.products.map((item, maninindex) => {\n                  return (\n                    <div>\n                      <Row>\n                        <Col sm={2}>\n                          <Label className='small-font-size' for='item'>Item</Label>\n                          <AvField\n                            type='select'\n                            name='item'\n                          \n                            onChange={e => this.selectitemchange(e, maninindex)}\n                            //required={true}\n                          >\n                            <option value=''>select Item</option>\n                            {this.createSelectItems()}\n                          </AvField>\n                          <div style={{'color':'#707070','fontSize':'12px','fontWeight':'bold'}}>{itemname}</div>\n                        </Col>\n                        <Col sm={2}>\n                          <Label className='small-font-size' for='quantity'>Quantity</Label>\n                          <AvField\n                            name='quantity'\n                            type='number'\n                            id='quantity'\n                            value={data.quantity || ' ' || null}\n                            onChange={e => this.changeQuantity(e, maninindex)}\n                          />\n                        </Col>\n                      </Row>\n                      {/* Get table based on selected value */}\n                      {data.products[maninindex].subAssembly.length > 0 && (\n                        <Table>\n                          <thead>\n                            <tr>\n                              <th>Sub Assembly</th>\n                              <th>UOM</th>\n                              <th>Thickness</th>\n                              <th>Quantity (in meters)</th>\n                              <th>Quantity (in Kgs)</th>\n                              {/* <th>Total</th> */}\n                            </tr>\n                          </thead>\n                          <tbody>\n                            {data.products[maninindex].subAssembly.map(\n                              (product, index) => {\n                                return (\n                                  <tr>\n                                    <td>{product.name}</td>\n                                    <td>{product.unit}</td>\n                                    <td>\n                                      <AvGroup>\n                                        <AvField\n                                          name={`thickness${index}`}\n                                          type='number'\n                                          id={`thickness${index}`}\n                                          placeholder='thickness'\n                                          onChange={e =>\n                                            this.onthicknessChange(\n                                              e,\n                                              index,\n                                              maninindex\n                                            )\n                                          }\n                                        />\n                                      </AvGroup>\n                                    </td>\n                                    <td>\n                                      <AvGroup>\n                                        <AvField\n                                          name={`quantity${index}`}\n                                          type='number'\n                                          id={`quantity${index}`}\n                                          placeholder='In meterts'\n                                          onChange={e =>\n                                            this.onQuantityChangeMeter(\n                                              e,\n                                              index,\n                                              maninindex\n                                            )\n                                          }\n                                          value={product.quantityPerMeter}\n                                        />\n                                      </AvGroup>\n                                    </td>\n                                    <td>\n                                      <AvGroup>\n                                        <AvField\n                                          name={`quantity${index}`}\n                                          type='number'\n                                          id={`quantity${index}`}\n                                          placeholder='In Kgs'\n                                          onChange={e =>\n                                            this.onQuantityChangeKg(\n                                              e,\n                                              index,\n                                              maninindex\n                                            )\n                                          }\n                                          value={product.quantityPerKg}\n                                        />\n                                      </AvGroup>\n                                    </td>\n                                    {/* <td>\n                                      <AvGroup>\n                                        <AvField\n                                          name={`total${index}`}\n                                          type='number'\n                                          id={`total${index}`}\n                                          placeholder='total'\n                                          onChange={e =>\n                                            this.onTotalChange(\n                                              e,\n                                              index,\n                                              maninindex\n                                            )\n                                          }\n                                        />\n                                      </AvGroup>\n                                    </td> */}\n                                  </tr>\n                                );\n                              }\n                            )}\n                          </tbody>\n                        </Table>\n                      )}\n                    </div>\n                  );\n                })}\n\n              <Row>\n                <div className='mg-20'>\n                  <Button\n                    color='primary'\n                    disabled={loading}\n                    className='lgn-loader'\n                    onClick={e => this.addItemComp()}\n                  >\n                    Add item\n                    {/* {loading} */}\n                  </Button>\n                </div>\n              </Row>\n            </CardBody>\n          </Card>\n        </AvForm>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    supplierdetaillistvalue: state.supplierdetaillistvalue,\n    masteritemlistvalues: state.masteritemlistvalues,\n    materialoptionlistvalues: state.masteritemtypenamevalue,\n    currencylistvalues: state.currencylistvalue,\n    uomlistvalues: state.uomlistvalue,\n    locationlistvalue: state.locationlistvalue,\n    purchaseorderlistvalues: state.purchaseorderlistvalue,\n    challanlistvalues: state.challanlistvalues,\n    productionlistvalues: state.productionlistvalues,\n    customerlistvalues: state.customerlistvalues,\n    productlistvalues: state.productlistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  null\n)(ProductionForm);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport {\n  getMasterItemList,\n  getMasterItemTypes\n} from '../../../../actions/Transaction';\nimport { connect } from 'react-redux';\nimport { getUomList } from '../../../../actions/uom';\nimport { getCustomerList } from '../../../../actions/customerContact';\nimport { addproduction } from '../../../../actions/Production';\nimport { getproduction } from '../../../../actions/Production';\nimport { getproducts } from '../../../../actions/Product';\nimport ProductionForm from './ProductionForm';\nimport CustomLoader from '../../../../Components/loader/loader';\n\nclass AddProduction extends React.Component {\n  state = {\n    loading: false\n  };\n  componentDidMount() {\n    this.props.getCustomerList();\n    this.props.getMasterItemTypes();\n    this.props.getMasterItemList();\n    this.props.getUomList();\n    this.props.getproduction();\n    this.props.getproducts();\n  }\n  componentWillReceiveProps() {\n    \n  }\n  submit = data => {\n    console.log(data);\n    this.dataHandler(true);\n    return this.props\n      .addproduction(data)\n      .then(data => {\n        this.dataHandler(false);\n        return data;\n      })\n      .catch(err => {\n        this.dataHandler(false);\n        throw err;\n      });\n  };\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n  render() {\n    const { loading } = this.state;\n    return (\n      <div className='container mg-t-20'>\n        {loading ? <CustomLoader /> : null}\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to='/admin_dashboard'>Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to='/transaction_page'>Transactions</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to='/production'>Production</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>Add Production</BreadcrumbItem>\n        </Breadcrumb>\n        <div>\n          <ProductionForm submit={this.submit} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  {\n    getMasterItemList,\n    getMasterItemTypes,\n    getUomList,\n    getproduction,\n    getCustomerList,\n    addproduction,\n    getproducts\n  }\n)(AddProduction);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem, Modal,\n  Label,\n  ModalHeader,\n  ModalBody,\n  ModalFooter } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { getproduction } from '../../../../actions/Production';\nimport { Button, Alert } from 'reactstrap';\nimport DataTable from '../../../../Components/Table/DatatablePage';\nimport CustomLoader from '../../../../Components/loader/loader';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport axios from 'axios';\n\nclass ViewProudction extends React.Component {\n  state = {\n    count: 0,\n    loading: true,\n    success: false,\n    quantity : '',\n    productiondate:'',\n    description:'',\n    id:'',\n    qtyAvaillength:0,\n    isViewList:false,\n    productionTodayList: [],\n    productionlistvalues: []\n  };\n  componentDidMount() {\n    this.props.getproduction();\n    console.log(this.props);\n\n    if (this.props.productionlistvalues) {\n      let quotationlist = Object.values(this.props.productionlistvalues);\n      //quotationlist= quotationlist.sort((a, b) => b.productionorderno.toString().toLowerCase().localeCompare(a.productionorderno.toString().toLowerCase()));\n      quotationlist.sort(function(a, b){\n        return parseInt(b.productionorderno) - parseInt(a.productionorderno);\n      });\n      let obj = {}\n      let productionlistvalues = quotationlist.map(quotationvalue => {\n        obj = {'quantity' : 0,'items' : []}\n        if(quotationvalue.products.length > 0){\n          \n          quotationvalue.products.filter((subitem) =>{\n            obj['quantity'] = parseInt(subitem.quantity) > 0 ? obj['quantity'] + parseInt(subitem.quantity) : obj['quantity']\n            obj['items'].push(subitem.item)\n          })\n        }\n        quotationvalue['quantity'] = obj['quantity']\n        quotationvalue['item'] = obj['items']\n        let usedqty = 0;\n        if(quotationvalue.transactionHistrory && quotationvalue.transactionHistrory.length > 0){\n          quotationvalue.transactionHistrory.map((item) =>{\n            usedqty = usedqty + parseInt(item.qty)\n          })\n        }\n        console.log(usedqty)\n        \n        return {\n          productionorderno: quotationvalue.productionorderno,\n          item: quotationvalue.item,\n          quantity: quotationvalue.quantity,\n          customername: quotationvalue.customername,\n          view2: quotationvalue.transactionHistrory && quotationvalue.transactionHistrory.length > 0 ? (\n            <div className=\"actionbuttons\">\n\n            <a\n              color=\"primary\"\n              style={{ 'fontSize': '0.8rem','color':'#379ccb' }}\n              onClick={() => {\n                this.viewTransaction(quotationvalue.transactionHistrory);\n              }}\n            >\n              View Transaction\n          </a>\n          </div>\n          ) : (\n            <div className=\"actionbuttons\">\n\n              No Transaction\n\n          </div>\n          ),\n          view: usedqty < quotationvalue.quantity ? (\n            <div className=\"actionbuttons\">\n\n              <Button\n                color=\"primary\"\n                style={{ 'fontSize': '0.8rem' }}\n                onClick={() => {\n                  this.addTransaction(quotationvalue,quotationvalue.quantity);\n                }}\n              >\n                Daily Transaction\n            </Button>\n            </div>\n          ) : (\n            <div className=\"actionbuttons\">\n\n              You have finished production for all items.\n\n          </div>\n          )\n          \n        };\n      });\n      this.setState({ ...this.state, productionlistvalues });\n      this.dataHandler(false);\n    }\n  }\n  componentWillReceiveProps(props) {\n    let quotationlist = Object.values(props.productionlistvalues);\n    quotationlist= quotationlist.sort((a, b) => b.productionorderno.toString().toLowerCase().localeCompare(a.productionorderno.toString().toLowerCase()));\n    let obj = {}\n      let productionlistvalues = quotationlist.map(quotationvalue => {\n        obj = {'quantity' : 0,'items' : []}\n        if(quotationvalue.products.length > 0){\n          \n          quotationvalue.products.filter((subitem) =>{\n            obj['quantity'] = parseInt(subitem.quantity) > 0 ? obj['quantity'] + parseInt(subitem.quantity) : obj['quantity']\n            if(parseInt(subitem.quantity) > 0)\n              obj['items'].push(subitem.item)\n\n          })\n        }\n        if(obj['items'].length > 0){\n          obj['items'] = obj['items'].join(\", \")\n        }\n        quotationvalue['quantity'] = obj['quantity']\n        quotationvalue['item'] = obj['items']\n        let usedqty = 0;\n        if(quotationvalue.transactionHistrory && quotationvalue.transactionHistrory.length > 0){\n          quotationvalue.transactionHistrory.map((item) =>{\n            usedqty = usedqty + parseInt(item.qty)\n          })\n        }\n        console.log(usedqty)\n\n        return {\n          productionorderno: quotationvalue.productionorderno,\n          item: quotationvalue.item,\n          quantity: quotationvalue.quantity,\n          customername: quotationvalue.customername,\n          view2: quotationvalue.transactionHistrory && quotationvalue.transactionHistrory.length > 0 ? (\n            <div className=\"actionbuttons\">\n\n            <a\n              color=\"primary\"\n              style={{ 'fontSize': '0.8rem','color':'#379ccb' }}\n              onClick={() => {\n                this.viewTransaction(quotationvalue.transactionHistrory);\n              }}\n            >\n              View Transaction\n          </a>\n          </div>\n          ) : (\n            <div className=\"actionbuttons\">\n\n              No Transaction\n\n          </div>\n          ),\n          view: usedqty < quotationvalue.quantity ? (\n            <div className=\"actionbuttons\">\n\n              <Button\n                color=\"primary\"\n                style={{ 'fontSize': '0.8rem' }}\n                onClick={() => {\n                  this.addTransaction(quotationvalue,quotationvalue.quantity);\n                }}\n              >\n                Daily Transaction\n            </Button>\n            </div>\n          ) : (\n            <div className=\"actionbuttons\">\n\n              You have finished production for all items.\n\n          </div>\n          )\n        };\n      });\n    this.setState({ ...this.state, productionlistvalues });\n    this.dataHandler(false);\n  }\n\n  viewTransaction(arr){\n    this.setState({\n      isViewList:true,\n      productionTodayList : arr\n    })\n  }\n  addTransaction(data,totalqty){\n    console.log(data)\n    let usedqty = 0\n    if(data.transactionHistrory && data.transactionHistrory.length > 0){\n      data.transactionHistrory.map((item) =>{\n        usedqty = usedqty + parseInt(item.qty)\n      })\n    }\n    this.setState({success:true,id:data._id,quantity:'',productiondate:'',description:'',qtyAvaillength: totalqty - usedqty},() =>{\n      console.log(this.state.qtyAvaillength)\n    })\n  }\n\n  updateTransaction = () => {\n    // updateproductionqty\n    if(this.state.quantity == '' || this.state.productiondate == ''){\n      window.alert('All fields are manditory.')\n      return\n    }\n    if(parseInt(this.state.quantity) > this.state.qtyAvaillength){\n      window.alert('Quantity should be less than or equal to : ' + this.state.qtyAvaillength)\n      return\n    }\n    console.log(this.state.id)\n    let data = {}\n    data['_id'] = this.state.id\n    data['transactionHistrory'] = [{'qty' : this.state.quantity,\n              'productiondate' : this.state.productiondate,\n              'description' : this.state.description}]\n\n    console.log(data)\n    axios\n      .post(`${process.env.REACT_APP_BASE_URL}/production/updateproductionqty`, {\n      data\n      })\n      .then(res => {\n          this.toggle();\n          this.props.getproduction();\n      });\n  };\n\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n\n  toggle2 = () => {\n    this.setState({ ...this.state, isViewList: false });\n  };\n  \n  onhandlerChange = e => { \n    this.setState({\n      quantity : e.target.value\n    });\n  };\n\n  onhandlerChange2 = e => { \n    this.setState({\n      description : e.target.value\n    });\n  };\n\n  \n  handleChangeDeliveryDate = date => {\n    console.log(date)\n    this.setState({\n      productiondate : date\n    });\n  };\n\n  render() {\n    const { loading, count, isViewList,productionlistvalues,success,quantity,productiondate,description,qtyAvaillength,productionTodayList } = this.state;\n    let headerBlock = '',contentBlock = ''\n    if(isViewList){\n      headerBlock = \n      (\n      <div className=\"row meetingspace\">\n        <div className=\"col split1\">Quantity</div>\n        <div className=\"col split1\">Date</div>\n        <div className=\"col split1\">Remarks</div>\n      </div>\n    )\n\n\n    contentBlock = productionTodayList.map((value,index) => {\n    value['description'] = value.description ? value.description : '-'\n    value.productiondate = \n    (new Date(value.productiondate).getDate() < 10 ? ('0' + new Date(value.productiondate).getDate()) : new Date(value.productiondate).getDate()) + '/' +\n    (new Date(value.productiondate).getMonth()+1 < 10 ? ('0' + (new Date(value.productiondate).getMonth()+1) ) : (new Date(value.productiondate).getMonth()+1)) + '/' + new Date(value.productiondate).getFullYear()\n    return (\n      <div key={index} className=\"row meetingspace\">\n        <div className=\"col split2\">{value.qty}</div>\n        <div className=\"col split2\" >{value.productiondate}</div>\n        <div className=\"col split2\" >{value.description}</div>\n\n      </div>\n    )\n  });\n\n  }\n\n\n\n\n    const columnvalue = [\n      {\n        label: 'Production no',\n        field: 'productionorderno',\n        sort: 'asc',\n        width: 40\n      },\n      {\n        label: 'Items',\n        field: 'item',\n        sort: 'asc',\n        width: 40\n      },\n      {\n        label: 'Quantity',\n        field: 'quantity',\n        sort: 'asc',\n        width: 40\n      },\n      {\n        label: 'Customer',\n        field: 'customer',\n        sort: 'asc',\n        width: 40\n      },\n      {\n        label: \"View Transaction\",\n        field: \"view\",\n        sort: \"asc\",\n        width: 30\n      },\n      {\n        label: \"Add Transaction\",\n        field: \"view\",\n        sort: \"asc\",\n        width: 30\n      }\n    ];\n    return (\n      <div className='container mg-t-20'>\n        {loading ? <CustomLoader /> : null}\n\n         {!!isViewList ? (\n            // <Alert color=\"info\">Purchase Order is generated successfully</Alert>\n            <Modal\n              isOpen={isViewList}\n              toggle={this.toggle2}\n              className={this.props.className}\n            >\n              <ModalHeader toggle2={this.toggle2}>View transaction <br/>\n              \n              </ModalHeader>\n              <ModalBody style={{'margin': '10px'}}>\n                {headerBlock}\n                {contentBlock}\n               \n              </ModalBody>\n              <ModalFooter>\n                <Button color=\"primary\" onClick={this.toggle2}>\n                  Ok\n                </Button>\n              </ModalFooter>\n            </Modal>\n          ) : null}\n\n          {!!success ? (\n            // <Alert color=\"info\">Purchase Order is generated successfully</Alert>\n            <Modal\n              isOpen={success}\n              toggle={this.toggle}\n              className={this.props.className}\n            >\n              <ModalHeader toggle={this.toggle}>Add transaction <br/>\n              <span style={{ 'fontSize': '14px','fontWeight': 'bold'}}>Note: Available quantity is {qtyAvaillength}</span>\n              </ModalHeader>\n              <ModalBody>\n                \n                 <Label className='small-font-size' for=\"Quantity\">Quantity(*)</Label>\n                  <input type=\"text\" className=\"form-control\" placeholder=\"Quantity\" name=\"Quantity\" value={quantity} style={{ 'marginBottom': '12px' }} onChange={this.onhandlerChange} />\n                 \n                  <Label className='small-font-size' for=\"productiondate\">Production Date(*)</Label>\n                  <DatePicker\n                  autoComplete=\"new-password\"\n                    selected={productiondate}\n                    autoComplete=\"new-password\"\n                    onChange={this.handleChangeDeliveryDate}\n                    className=\"form-control\"\n                    dateFormat=\"dd/MM/yyyy\"\n                    id=\"productiondate\"\n                  />\n\n                 <Label className='small-font-size' for=\"description\">Remarks</Label>\n                  <textarea className=\"form-control\" placeholder=\"Remarks\" name=\"description\" value={description} style={{ 'marginBottom': '12px' }} onChange={this.onhandlerChange2} ></textarea>\n                 \n\n              </ModalBody>\n              <ModalFooter>\n                <Button color=\"primary\" onClick={this.updateTransaction}>\n                  Ok\n                </Button>\n              </ModalFooter>\n            </Modal>\n          ) : null}\n\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to='/admin_dashboard'>Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to='/transaction_page'>Transactions</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to='/production'>Production</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>List</BreadcrumbItem>\n        </Breadcrumb>\n        <div>\n          <DataTable\n            rowvalues={productionlistvalues}\n            columnvalue={columnvalue}\n            className=\"productionlist\"\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    productionlistvalues: state.productionlistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { getproduction }\n)(ViewProudction);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport {\n  Button,\n  Label,\n  Alert,\n  Card,\n  CardBody,\n  CardHeader,\n  Row,\n  Col,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from \"reactstrap\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"./purchaseorder.css\";\nimport axios from \"axios\";\nimport CustomLoader from \"../../../../Components/loader/loader\";\nclass PurchaseOrderForm extends React.Component {\n  \n  state = {\n    data: {\n      isEditdone:false,\n      supplierdetail: {\n        id: null,\n        suppliernumber: \"\",\n        suppliername: \"\",\n        supplieraddress1: \"\",\n        supplieraddress2: \"\",\n        suppliercontactlistvalue: [],\n        city: \"\",\n        pincode: \"\",\n        state: \"\",\n        country: \"\",\n        suppliergstnumber: \"\"\n      },\n      selectedItemlist: {\n        id: [],\n        itemname: [],\n        itemdescription: [],\n        itemtype: [],\n        itemrate: [],\n        itemuom: [],\n        itemlocation: [],\n        costperunit: [],\n        quantity: [],\n        totalcost: []\n      },\n      ponumber: \"\",\n      refno: \"\",\n      subject: \"\",\n      requestdeliverydate: \"\",\n      suppliercontactid: \"\",\n      values: [\"\"],\n      quotationno: null,\n      currency: \"5d3437e21c9d4400008624b7\",\n      totalvalue: null,\n      gst: null,\n      cgst:'',\n      sgst:'',\n      igst:'',\n      scheduledays:'',\n      schedulepayment:''\n    },\n    errors: {},\n    materialoptionlistvalues: [],\n    supplierdetaillistvalue: [],\n    supplierdetaillistvalueobject: {},\n    masteritemlistvalues: [],\n    masteritemlistvaluesobject: {},\n    currencylistvalues: [],\n    uom: [],\n    locationlistvalue: [],\n    loading: false,\n    success: false,\n    successmsg:''\n   \n  };\n  \n  componentDidMount(){\n    console.log( Object.keys(this.props.purchaseorderlistvalues))\n    if(this.props.ID != undefined){\n      const materialoptionlistvalues = Object.values(\n        this.props.materialoptionlistvalues\n      );\n      const supplierdetaillistvalue = Object.values(\n        this.props.supplierdetaillistvalue\n      );\n      const supplierdetaillistvalueobject = this.props.supplierdetaillistvalue;\n      const masteritemlistvalues = Object.values(this.props.masteritemlistvalues);\n      const masteritemlistvaluesobject = this.props.masteritemlistvalues;\n      const currencylistvalues = Object.values(this.props.currencylistvalues);\n      const uomlistvalues = Object.values(this.props.uomlistvalues);\n      const locationlistvalue = Object.values(this.props.locationlistvalue);\n  \n\n      this.setState({\n        ...this.state,\n        supplierdetaillistvalue,\n        supplierdetaillistvalueobject,\n        masteritemlistvalues,\n        masteritemlistvaluesobject,\n        materialoptionlistvalues,\n        currencylistvalues,\n        locationlistvalue,\n        uom: uomlistvalues\n      },()=>{\n        this.getPODetails(this.props.ID)\n      });\n    }\n    else{\n      \n\n      if(Object.keys(this.props.purchaseorderlistvalues).length == 0){\n\n        this.dataHandler(true)\n        axios\n        .get(`${process.env.REACT_APP_BASE_URL}/purchaseorder//getpurchaseorderrlist`)\n        .then(res => {\n    \n          this.dataHandler(false)\n          if(res.data.purchaseorderlist.purchaseorderlistdata.length > 0){\n     \n            const purchaseorderlistlength =\n\n            res.data.purchaseorderlist.purchaseorderlistdata.length > 0 ? res.data.purchaseorderlist.purchaseorderlistdata.length : 0;\n      \n            let ponumber = (1 + purchaseorderlistlength).toString();\n       \n            this.setState({\n              ...this.state,\n              data: {\n                ...this.state.data,\n                ponumber\n              }\n            });\n          \n            \n          }\n        \n        },\n        error =>{\n          this.dataHandler(false)\n         \n        });\n\n      }\n    }\n\n  }\n\n  getPODetails(id){\n    this.dataHandler(true)\n    axios\n    .get(`${process.env.REACT_APP_BASE_URL}/purchaseorder/getpurchaseorder/${id}`)\n    .then(res => {\n\n      this.dataHandler(false)\n      if(res.data.purchaseorderlist.purchaseorderlistdata.length > 0){\n        let founddata = res.data.purchaseorderlist.purchaseorderlistdata;\n        let podetail = {...this.state.data}\n \n         podetail.supplierdetail.suppliername = founddata[0].suppliername;\n         podetail.supplierdetail.supplierid = founddata[0].supplierid;\n        \n        const newState = Object.assign({}, this.state);\n        newState.data.ponumber = founddata[0].ponumber;\n        newState.data.refno = founddata[0].referenceno;\n        newState.data.values = founddata[0].addeditemlist;\n        newState.data.subject = founddata[0].subject;\n        newState.data.requestdeliverydate = new Date(founddata[0].requestdeliverydate);\n        newState.data.currency = founddata[0].currencyid;\n        newState.data.totalvalue =  founddata[0].totalvalue;\n        newState.data.gst = '0';\n        newState.data.cgst = founddata[0].cgst;\n        newState.data.sgst = founddata[0].sgst;\n        newState.data.igst = founddata[0].igst;\n        newState.data.scheduledays = founddata[0].scheduledays ? founddata[0].scheduledays : \"\";\n        newState.data.schedulepayment = founddata[0].schedulepayment ? founddata[0].schedulepayment : \"\";\n        \n        newState.data.suppliercontactid = founddata[0].suppliercontactid;\n        if(founddata[0].addeditemlist.length > 0){\n          \n          for(var i=0;i<founddata[0].addeditemlist.length;i++){\n            newState.data.selectedItemlist.itemdescription.push(founddata[0].addeditemlist[i].itemdescription)\n            newState.data.selectedItemlist.itemtype.push(founddata[0].addeditemlist[i].itemtype)\n            newState.data.selectedItemlist.itemtype.push(founddata[0].addeditemlist[i].itemtype)\n            newState.data.selectedItemlist.itemname.push(founddata[0].addeditemlist[i].itemname)\n            newState.data.selectedItemlist.itemuom.push(founddata[0].addeditemlist[i].itemuom)\n            newState.data.selectedItemlist.quantity.push(founddata[0].addeditemlist[i].quantity)\n            newState.data.selectedItemlist.costperunit.push(founddata[0].addeditemlist[i].costperunit)\n            newState.data.selectedItemlist.totalcost.push(founddata[0].addeditemlist[i].totalcost)\n            newState.data.selectedItemlist.id.push(founddata[0].addeditemlist[i].id)\n            newState.data.selectedItemlist.itemlocation.push(founddata[0].addeditemlist[i].itemlocation)\n          }\n        }\n\n\n        this.setState(newState);\n      \n        console.log(this.state)\n      }\n      else{\n        this.setState({count:0})\n      }\n    },\n    error =>{\n      this.dataHandler(false)\n      this.setState({ success: false, message:'Server error.' });\n    });\n  }\n\n  componentWillReceiveProps(props) {\n    \n    const materialoptionlistvalues = Object.values(\n      props.materialoptionlistvalues\n    );\n    const supplierdetaillistvalue = Object.values(\n      props.supplierdetaillistvalue\n    );\n    const supplierdetaillistvalueobject = props.supplierdetaillistvalue;\n    const masteritemlistvalues = Object.values(props.masteritemlistvalues);\n    const masteritemlistvaluesobject = props.masteritemlistvalues;\n    const currencylistvalues = Object.values(props.currencylistvalues);\n    const uomlistvalues = Object.values(props.uomlistvalues);\n    const locationlistvalue = Object.values(props.locationlistvalue);\n    const purchaseorderlist = Object.keys(this.props.purchaseorderlistvalues);\n    const purchaseorderlistlength =\n      purchaseorderlist.length > 0 ? purchaseorderlist.length : 0;\n\n    let ponumber = (1 + purchaseorderlistlength).toString();\n    if(this.props.ID != undefined){\n      ponumber = this.state.data.ponumber\n    }\n    this.setState({\n      ...this.state,\n      supplierdetaillistvalue,\n      supplierdetaillistvalueobject,\n      masteritemlistvalues,\n      masteritemlistvaluesobject,\n      materialoptionlistvalues,\n      currencylistvalues,\n      locationlistvalue,\n      uom: uomlistvalues,\n      data: {\n        ...this.state.data,\n        ponumber\n      }\n    });\n\n    if(this.state.data.supplierdetail.supplierid && this.state.data.supplierdetail.supplierid != '' && this.props.ID != undefined && !this.state.isEditdone){\n        this.setState({isEditdone:true},()=>{\n          this.handleChange2(this.state.data.supplierdetail.supplierid)\n        })\n    }\n    //console.log(props.supplierdetaillistvalue)\n    \n  }\n\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n\n  handleChangeDeliveryDate = date => {\n    console.log(date)\n    this.setState({\n      data: {\n        ...this.state.data,\n        requestdeliverydate: date\n      }\n    });\n  };\n  handleChange = e => {\n    \n    const selected_id = e.target.value;\n    const supplierdetail = this.state.supplierdetaillistvalueobject[\n      selected_id\n    ];\n    \n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        supplierdetail\n      }\n    });\n\n  };\n\n  handleChange2 = e => {\n    const selected_id = e\n    const supplierdetail = this.state.supplierdetaillistvalueobject[\n      selected_id\n    ];\n    console.log(supplierdetail)\n    \n    if(supplierdetail != undefined){\n      this.setState({\n        ...this.state.data,\n        data: {\n          ...this.state.data,\n          supplierdetail\n        }\n      });\n    }\n \n    \n\n  };\n\n  totalValue = () => {\n    // const { totalcost } = this.state.data.selectedItemlist;\n    // if (totalcost.length > 0) {\n    //   let totalvalue = totalcost\n    //     .map((value, i) => {\n    //       if (value) {\n    //         return parseFloat(value);\n    //       } else {\n    //         return 0;\n    //       }\n    //     })\n    //     .reduce((a, b) => {\n    //       return a + b;\n    //     });\n    //   // Check if tax exists and handle tax  \n    //   let {gst} = this.state.data;\n    //   if(gst !== null) {\n    //     gst = parseFloat(gst).toFixed(2);\n    //   let per = (gst * totalvalue) / 100;\n    //   totalvalue = parseFloat(Number(per)+Number(totalvalue)).toFixed(2);\n    //   }\n    //   this.setState({\n    //     ...this.state.data,\n    //     data: {\n    //       ...this.state.data,\n    //       totalvalue\n    //     }\n    //   });\n    // }\n    this.calculatePercentageAmount()\n  };\n\n\n\n  calculatePercentageAmount = () => {\n\n    const { totalcost } = this.state.data.selectedItemlist;\n    if (totalcost.length > 0) {\n      let totalvalue = totalcost\n        .map((value, i) => {\n          if (value) {\n            return parseFloat(value);\n          } else {\n            return 0;\n          }\n        })\n        .reduce((a, b) => {\n          return a + b;\n        });\n\n            // CGST\n    let cgst = this.state.data.cgst;\n    cgst = parseFloat(cgst) ? parseFloat(cgst).toFixed(2) : 0;\n    // SGST\n    let sgst = this.state.data.sgst;\n    sgst = parseFloat(sgst) ? parseFloat(sgst).toFixed(2) : 0;\n    // CGST\n    let igst = this.state.data.igst;\n    igst = parseFloat(igst) ? parseFloat(igst).toFixed(2) : 0;\n\n    let subTotal = parseFloat(totalvalue)\n      ? Number(parseFloat(totalvalue).toFixed(2))\n      : 0;\n    // Convert it to percentage\n    cgst = (subTotal * cgst) / 100;\n    sgst = (subTotal * sgst) / 100;\n    igst = (subTotal * igst) / 100;\n      console.log(cgst)\n    const total = (Number(subTotal) + Number(cgst) + Number(sgst) + Number(igst)).toFixed(2);\n    const grandtotal = (Number(total)).toFixed(2);\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        ['totalvalue']: grandtotal\n      }\n    });\n    }\n  };\n\n  selectitemchange = (e, index) => {\n    const selected_id = e.target.value;\n    if (selected_id) {\n      let selected_item = this.state.masteritemlistvaluesobject[selected_id];\n      if(selected_item){\n        console.log(selected_item)\n        const selectedItemlist = { ...this.state.data.selectedItemlist };\n        selectedItemlist.id[index] = selected_item.id;\n        selectedItemlist.itemname[index] = selected_item.masteritemtypename;\n        //  selectedItemlist.itemdescription[index] = selected_item.masteritemshortdescription == '' ? selected_item.masteritemdescription \n        //                                                                                           : selected_item.masteritemshortdescription\n        selectedItemlist.itemdescription[index] = selected_item.masteritemdescription;\n        selectedItemlist.itemtype[index] = selected_item.masteritemtype._id;\n        selectedItemlist.itemrate[index] = selected_item.masteritemrate;\n        selectedItemlist.itemuom[index] = selected_item.masteritemuom._id;\n        //selectedItemlist.itemlocation[index] = null;\n        selectedItemlist.costperunit[index] = selected_item.masteritemcostperunit\n          ? selected_item.masteritemcostperunit.toString()\n          : \"\";\n        selectedItemlist.quantity[index] = (1).toString();\n        selectedItemlist.totalcost[index] = selected_item.masteritemcostperunit\n          ? selected_item.masteritemcostperunit.toString()\n          : \"\";\n\n        this.setState({\n          ...this.state.data,\n          data: {\n            ...this.state.data,\n            selectedItemlist\n          }\n        },() =>{\n          this.totalValue();\n        });\n\n      }\n    \n      }\n  };\n\n  locationChange = (e, index) => {\n    const selected_location = e.target.value;\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.itemlocation[index] = selected_location;\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n  };\n\n  createSelectSupplier = () => {\n    let items = [];\n    const supplierdetaillistvalue = this.state.supplierdetaillistvalue;\n    supplierdetaillistvalue.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.suppliername}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  onhandlerChange = e => {\n    let name = e.target.name;\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    }, () => {\n      this.totalValue()\n    });\n  };\n\n  onSubjectHandler = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  filterItems(itemarray,key) {\n    // masteritemlistvalues = this.filterItems(masteritemlistvalues,'masteritemtypename')\n    return itemarray.sort((a,b)=>{return a[key].toLowerCase().localeCompare(b[key].toLowerCase())})\n  }\n\n  createSelectItems = () => {\n    let items = [];\n    let masteritemlistvalues = this.state.masteritemlistvalues;\n    masteritemlistvalues = this.filterItems(masteritemlistvalues,'masteritemtypename')\n    console.log(masteritemlistvalues)\n\n    masteritemlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.masteritemtypename}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  createSelectItemTypes = () => {\n    let items = [];\n    const materialoptionlistvalues = this.state.materialoptionlistvalues;\n    materialoptionlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.masteritemtypename}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  createSelectSupplierContact = () => {\n    let items = [];\n    const suppliercontactlistvalues = this.state.data.supplierdetail\n      .suppliercontactlistvalue;\n    suppliercontactlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option._id}>\n          {option.suppliercontactname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  createSelectCurrencyItems = () => {\n    let items = [];\n    const currencylistvalues = this.state.currencylistvalues;\n    currencylistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.currencyname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  createSelectUomItems = () => {\n    let items = [];\n    const uomlistvalues = this.state.uom;\n    uomlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.uomname}\n        </option>\n      );\n    });\n    return items;\n  };\n  createSelectLocationItems = () => {\n    let items = [];\n    const locationlistvalue = this.state.locationlistvalue;\n    locationlistvalue.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.locationname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  handleClick = e => {\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        values: [...this.state.data.values, \"\"],\n        selectedItemlist: {\n          ...this.state.data.selectedItemlist,\n          id: [...this.state.data.selectedItemlist.id, \"\"],\n          itemname: [...this.state.data.selectedItemlist.itemname, \"\"],\n          itemdescription: [\n            ...this.state.data.selectedItemlist.itemdescription,\n            \"\"\n          ],\n          itemtype: [...this.state.data.selectedItemlist.itemtype, \"\"],\n          itemrate: [...this.state.data.selectedItemlist.itemrate, \"\"],\n          itemuom: [...this.state.data.selectedItemlist.itemuom, \"\"],\n          itemlocation: [...this.state.data.selectedItemlist.itemlocation, \"\"],\n          costperunit: [...this.state.data.selectedItemlist.costperunit, \"\"],\n          quantity: [...this.state.data.selectedItemlist.quantity, \"\"],\n          totalcost: [...this.state.data.selectedItemlist.totalcost, \"\"]\n        }\n      }\n    },()=>{\n      console.log(this.state.data.values)\n    });\n  };\n  removeClick = (e, index) => {\n    const removeItem = { ...this.state.data };\n    const values = removeItem.values;\n    const id = removeItem.selectedItemlist.id;\n    const itemname = removeItem.selectedItemlist.itemname;\n    const itemdescription = removeItem.selectedItemlist.itemdescription;\n    const itemtype = removeItem.selectedItemlist.itemtype;\n    const itemrate = removeItem.selectedItemlist.itemrate;\n    const itemuom = removeItem.selectedItemlist.itemuom;\n    const itemlocation = removeItem.selectedItemlist.itemlocation;\n    const costperunit = removeItem.selectedItemlist.costperunit;\n    const quantity = removeItem.selectedItemlist.quantity;\n    const totalcost = removeItem.selectedItemlist.totalcost;\n    console.log(values)\n    values.splice(index, 1);\n    id.splice(index, 1);\n    itemname.splice(index, 1);\n    itemdescription.splice(index, 1);\n    itemtype.splice(index, 1);\n    itemrate.splice(index, 1);\n    itemuom.splice(index, 1);\n    itemlocation.splice(index, 1);\n    costperunit.splice(index, 1);\n    quantity.splice(index, 1);\n    totalcost.splice(index, 1);\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        values,\n        selectedItemlist: {\n          ...this.state.data.selectedItemlist,\n          id,\n          itemname,\n          itemdescription,\n          itemtype,\n          itemrate,\n          itemuom,\n          itemlocation,\n          costperunit,\n          quantity,\n          totalcost\n        }\n      }\n    },()=>{\n      this.totalValue()\n    });\n  };\n\n  quantityChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    const costperunit = selectedItemlist.costperunit[index] || null;\n    selectedItemlist.quantity[index] = e.target.value;\n    const totalValue = costperunit\n      ? e.target.value * costperunit\n      : null || undefined || \"\";\n    selectedItemlist.totalcost[index] = totalValue\n      ? parseFloat(totalValue).toFixed(2)\n      : \"\";\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n    this.totalValue();\n  };\n\n  unitChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.costperunit[index] = e.target.value;\n    const totalcost =\n      parseFloat(selectedItemlist.quantity[index]) *\n      parseFloat(selectedItemlist.costperunit[index]);\n    selectedItemlist.totalcost[index] = totalcost\n      ? totalcost.toFixed(2)\n      : null || \"\";\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n    this.totalValue();\n  };\n\n  handleValidSubmit = () => {\n    let AddedIteminfo = [];\n    const { supplierdetail, selectedItemlist } = this.state.data;\n    const {\n      values,\n      refno,\n      subject,\n      requestdeliverydate,\n      quotationno,\n      currency,\n      suppliercontactid,\n      totalvalue,\n      ponumber,\n      gst,\n      cgst,\n      sgst,\n      igst,\n      scheduledays,\n      schedulepayment\n    } = this.state.data;\n    const id = selectedItemlist.id;\n    const itemname = selectedItemlist.itemname;\n    const itemdescription = selectedItemlist.itemdescription;\n    const itemtype = selectedItemlist.itemtype;\n    const itemrate = selectedItemlist.itemrate;\n    const itemuom = selectedItemlist.itemuom;\n    const itemlocation = selectedItemlist.itemlocation;\n    const costperunit = selectedItemlist.costperunit;\n    const quantity = selectedItemlist.quantity;\n    const totalcost = selectedItemlist.totalcost;\n    values.forEach(function(value, i) {\n      let obj = {};\n      obj.id = id[i] || null;\n      obj.itemname = itemname[i] || null;\n      obj.itemdescription = itemdescription[i] || null;\n      obj.itemtype = itemtype[i] || null;\n      obj.itemrate = itemrate[i] || null;\n      obj.itemuom = itemuom[i] || null;\n      obj.itemlocation = itemlocation[i] || null;\n      obj.costperunit = costperunit[i] || null;\n      obj.quantity = quantity[i] || null;\n      obj.totalcost = totalcost[i] || null;\n      AddedIteminfo.push(obj);\n    });\n    const data = {\n      supplierdetail,\n      AddedIteminfo,\n      refno,\n      subject,\n      requestdeliverydate,\n      quotationno,\n      currency,\n      suppliercontactid,\n      ponumber,\n      totalvalue,\n      gst,\n      cgst,\n      sgst,\n      igst,\n      scheduledays,\n      schedulepayment\n    };\n    this.setState({ loading: true });\n    this.props\n      .submit(data)\n      .then(() => {\n        \n          if(this.props.ID == undefined){\n            this.myFormRef.reset();\n            this.setState({ loading: false, errors: {}, success: true,successmsg:'Purchase Order is generated successfully' });\n          }\n          else{\n            this.setState({ loading: false, errors: {}, success: true,successmsg:'Purchase Order edited successfully' });\n          }\n         \n      \n        \n   \n      })\n      .catch(err => {\n        \n          this.setState({ errors: err.response.data.errors, loading: false });\n        \n        \n      });\n  };\n\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n  \n  handleInvalidSubmit = () => {\n    console.log(\"invalid submit\");\n  };\n  render() {\n    const { data, errors, loading, success,successmsg } = this.state;\n    return (\n      <div>\n        <div>\n        {loading ? <CustomLoader /> : null}\n          {!!success ? (\n            // <Alert color=\"info\">Purchase Order is generated successfully</Alert>\n            <Modal\n              isOpen={success}\n              toggle={this.toggle}\n              className={this.props.className}\n            >\n              <ModalHeader toggle={this.toggle}>Purchase Order</ModalHeader>\n              <ModalBody>{successmsg}</ModalBody>\n              <ModalFooter>\n                <Button color=\"primary\" onClick={this.toggle}>\n                  Ok\n                </Button>\n              </ModalFooter>\n            </Modal>\n          ) : null}\n        </div>\n        <AvForm\n          onValidSubmit={this.handleValidSubmit}\n          onInvalidSubmit={this.handleInvalidSubmit}\n          ref={el => (this.myFormRef = el)}\n        >\n          <Card>\n            <CardHeader>Purchase Order</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"ponumber\">PO Number</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      name=\"ponumber\"\n                      type=\"number\"\n                      id=\"ponumber\"\n  \n                      value={data.ponumber || null}\n                      onChange={this.onChange}\n                      \n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: \"Please enter PO Number\"\n                        },\n                        pattern: {\n                          value: \"^[0-9]+$\",\n                          errorMessage: \"Please enter valid Number\"\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"refno\">Reference No </Label>\n                   \n                    <AvField\n                      name=\"refno\"\n                      type=\"text\"\n                      id=\"refno\"\n                      value={data.refno}\n                      onChange={e => this.onhandlerChange(e)}\n                    \n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <Label className='small-font-size' for=\"totalcost\">Total Value</Label>\n                  <span className=\"required-label\">*</span>\n                  <AvField\n                    name=\"totalvalue\"\n                    type=\"Number\"\n                    id=\"totalcost\"\n                    value={data.totalvalue || \" \" || null}\n                    onChange={e => this.onhandlerChange(e)}\n                    readOnly\n                  />\n                </Col>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"currency\">Currency</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      type=\"select\"\n                      name={`currency`}\n                      required={true}\n                      value={data.currency || null}\n                      onChange={e => this.onhandlerChange(e)}\n                    >\n                      <option value=\"\">select currency</option>\n                      {this.createSelectCurrencyItems()}\n                    </AvField>\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <Label className='small-font-size' for=\"quotationno\">Request Delivery Date</Label>\n                  <span className=\"required-label\">*</span>\n                  <DatePicker\n                  autoComplete=\"new-password\"\n                    selected={data.requestdeliverydate}\n                    autoComplete=\"new-password\"\n                    onChange={this.handleChangeDeliveryDate}\n                    className=\"form-control\"\n                    dateFormat=\"dd/MM/yyyy\"\n                    id=\"startdate\"\n                  />\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                  <Label className='small-font-size' for=\"scheduledays\">Delivery Schedule</Label>\n                  <AvField\n                      name=\"scheduledays\"\n                      type=\"text\"\n                      id=\"scheduledays\"\n                      value={data.scheduledays || \"\"}\n                      onChange={e => this.onhandlerChange(e)}\n                   \n                    />\n                    </AvGroup>\n                </Col>\n\n                <Col sm={2}>\n                  <AvGroup>\n                  <Label className='small-font-size' for=\"schedulepayment\">Payment Schedule</Label>\n                  <AvField\n                      name=\"schedulepayment\"\n                      type=\"text\"\n                      id=\"schedulepayment\"\n                      value={data.schedulepayment || \"\"}\n                      onChange={e => this.onhandlerChange(e)}\n                   \n                    />\n                    </AvGroup>\n                </Col>\n\n                \n              </Row>\n              <Row>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"suppliername\">Supplier Name</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      type=\"select\"\n                      name={`suppliername`}\n                      value={data.supplierdetail.supplierid}\n                      //required={true}\n                      onChange={e => this.handleChange(e)}\n                    >\n                      <option value=\"\">select supplier name</option>\n                      {this.createSelectSupplier()}\n                    </AvField>\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"suppliernumber\">Supplier Number</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      name=\"suppliernumber\"\n                      type=\"number\"\n                      readOnly\n                      id=\"suppliernumber\"\n                      value={data.supplierdetail.suppliernumber}\n                      onChange={this.onChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: \"Please enter Supplier Number\"\n                        },\n                     \n                        pattern: {\n                          value: \"^[0-9]+$\",\n                          errorMessage: \"Please enter valid Number\"\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"suppliergstnumber\">Supplier GST </Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      name=\"suppliergstnumber\"\n                      type=\"text\"\n                      readOnly\n                      id=\"suppliergstnumber\"\n                      value={data.supplierdetail.suppliergstnumber}\n                      onChange={e => this.onhandlerChange(e)}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: \"Please enter Supplier GST Number\"\n                        },\n                        minLength: {\n                          value: 15,\n                          errorMessage:\n                            \"Supplier GST Number should contain 15 characters\"\n                        },\n                        maxLength: {\n                          value: 15,\n                          errorMessage:\n                            \"Supplier GST Number should contain 15 characters\"\n                        },\n                        pattern: {\n                          value: \"^[a-zA-z0-9]+$\",\n                          errorMessage: \"Please enter valid GST Number\"\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"suppliercontactinfo\">\n                      Supplier Contact Name\n                    </Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      type=\"select\"\n                      \n                      name={`suppliercontactid`}\n                      value={data.suppliercontactid}\n                      required={true}\n                      onChange={e => this.onhandlerChange(e)}\n                    >\n                      <option value=\"\">select contact</option>\n                      {this.createSelectSupplierContact()}\n                    </AvField>\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"supplieraddress\">Supplier Address</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      name=\"supplieraddress\"\n                      type=\"text\"\n                      id=\"supplieraddress\"\n                      readOnly\n                      value={\n                        data.supplierdetail.supplieraddress1 ||\n                        \"\" + \" \" + data.supplierdetail.supplieraddress2 ||\n                        \"\" + \" \" + data.supplierdetail.city ||\n                        \"\" + \" \" + data.supplierdetail.state ||\n                        \"\" + \" \" + data.supplierdetail.country ||\n                        \"\" + \" \" + data.supplierdetail.pincode ||\n                        \"\"\n                      }\n                      onChange={this.onChange}\n                    />\n                  </AvGroup>\n                </Col>\n                  <Col sm={1}>\n                  <Label className='small-font-size' for=\"gst\">Tax %</Label>\n                  <span className=\"required-label\">*</span>\n                  <AvField\n                    name=\"gst\"\n                    type=\"Number\"\n                    id=\"gst\"\n                    value={data.gst || null}\n                    onChange={e => this.onhandlerChange(e)}\n                    validate={{\n                      required: {\n                        value: true,\n                        errorMessage: \"Please enter Tax Value in Percentage\"\n                      },\n                      pattern: {\n                        value: \"^[0-9.]+$\",\n                        errorMessage: \"Please enter valid value\"\n                      }\n                    }}\n                  />\n                </Col>  \n              </Row>\n              <Row>\n                <Col sm={3}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"subject\">Subject</Label>\n                \n                    <AvField\n                      name=\"subject\"\n                      type=\"text\"\n                      id=\"subject\"\n                      value={data.subject || \"\"}\n                      onChange={this.onSubjectHandler}\n                 \n                    />\n                  </AvGroup>\n                </Col>\n                \n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"cgst\">CGST(%)</Label>\n                    \n                    <AvField\n                      name=\"cgst\"\n                      type=\"text\"\n                      id=\"cgst\"\n                      value={data.cgst || \"\"}\n                      onChange={e => this.onhandlerChange(e)}\n                   \n                    />\n                  </AvGroup>\n                </Col>\n\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"sgst\">SGST(%)</Label>\n                    \n                    <AvField\n                      name=\"sgst\"\n                      type=\"text\"\n                      id=\"sgst\"\n                      value={data.sgst || \"\"}\n                      onChange={e => this.onhandlerChange(e)}\n                   \n                    />\n                  </AvGroup>\n                </Col>\n\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"igst\">IGST(%)</Label>\n                    \n                    <AvField\n                      name=\"igst\"\n                      type=\"text\"\n                      id=\"igst\"\n                      value={data.igst || \"\"}\n                      onChange={e => this.onhandlerChange(e)}\n                   \n                    />\n                  </AvGroup>\n                </Col>\n\n              </Row>\n              <Row>\n                <div className=\"mg-t-20\">\n                  <Button color=\"info\" onClick={this.handleClick} type=\"button\">\n                    Add Item\n                  </Button>\n                </div>\n              </Row>\n              <div className=\"purchaseorder-item-row\">\n                {data.values.map((values, index) => {\n                  \n                  \n        const itemnameinfo = values.id != undefined ? (   \n          <AvField\n          type=\"select\"\n          value={values.id}\n          name={`selectitem${index}`}\n          onChange={e => this.selectitemchange(e, index)}\n          required={true}\n        >\n          <option value=\"\">select Item</option>\n          {this.createSelectItems()}\n        </AvField>\n  \n        ) : \n          (\n               <AvField\n               type=\"select\"\n               name={`selectitem${index}`}\n               value={\n                data.selectedItemlist.id[index]\n              }\n               onChange={e => this.selectitemchange(e, index)}\n               required={true}\n             >\n               <option value=\"\">select Item</option>\n               {this.createSelectItems()}\n             </AvField>\n             \n          )\n\n\n\n                  return (\n                    <div key={index}>\n                      <div className=\"purchaseorder-table\">\n                      \n                        <Row key={index}>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for=\"selectitem\">Item Code</Label>\n                              <span className=\"required-label\">*</span>\n                              {itemnameinfo}\n                            </AvGroup>\n                          </Col>\n                          <Col sm={2}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`masteritemdescription${index}`}>\n                                Description\n                              </Label>\n                              <span className=\"required-label\">*</span>\n                              <AvField\n                                name={`masteritemdescription${index}`}\n                                type=\"text\"\n                                readOnly\n                                id=\"masteritemdescription\"\n                                value={\n                                  data.selectedItemlist.itemdescription[index]\n                                }\n                                onChange={this.onChange}\n                                validate={{\n                                  required: {\n                                    value: true,\n                                    errorMessage:\n                                      \"Please enter Item Description\"\n                                  }\n                                }}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`masteritemtype${index}`}>Type</Label>\n                              <span className=\"required-label\">*</span>\n                              <AvField\n                                style={{ width: \"150px\" }}\n                                type=\"select\"\n                                readOnly\n                                name={`masteritemtype${index}`}\n                                onChange={this.onChange}\n                                required={true}\n                                value={\n                                  data.selectedItemlist.itemtype[index] \n                                }\n                              >\n                                <option value=\"\">select</option>\n                                {/* <option value=\"5d10915e7ba4981da4e679f6\">rawmaterial</option>\n                                                <option value=\"5d10908a7ba4981da4e679f5\">subassembly</option> */}\n                                {this.createSelectItemTypes()}\n                              </AvField>\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`masteritemuom${index}`}>UOM</Label>\n                              <span className=\"required-label\">*</span>\n                              <AvField\n                                type=\"select\"\n                                readOnly\n                                name={`masteritemuom${index}`}\n                                onChange={this.onChange}\n                                required={true}\n                                value={\n                                  data.selectedItemlist.itemuom[index] \n                                }\n                              >\n                                <option value=\"\">uom</option>\n                                {/* <option value=\"kg\">Kg</option>\n                            <option value=\"liter\">Liter</option>\n                            <option value=\"kg\">EA</option> */}\n                                {this.createSelectUomItems()}\n                              </AvField>\n                            </AvGroup>\n                          </Col>\n                          <Col sm={2}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`location${index}`}>\n                                Delivery Location\n                              </Label>\n                              <span className=\"required-label\">*</span>\n                              <AvField\n                                type=\"select\"\n                                name={`location${index}`}\n                                onChange={e => this.locationChange(e, index)}\n                                \n                                 value={data.selectedItemlist.itemlocation[index]}\n                              >\n                                <option value=\"\">select location</option>\n                                {this.createSelectLocationItems()}\n                              </AvField>\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`costperunit${index}`}>\n                                Unit Cost\n                              </Label>\n                              <AvField\n                                name={`costperunit${index}`}\n                                type=\"number\"\n                                id={`costperunit${index}`}\n                                value={\n                                  data.selectedItemlist.costperunit[index] \n                                }\n                                onChange={e => this.unitChange(e, index)}\n                                validate={{\n                                  required: {\n                                    value: true,\n                                    errorMessage: 'Please enter cost'\n                                  },\n                                  pattern: {\n                                    value: \"^[0-9.]*$\",\n                                    errorMessage:\n                                      \"Please enter valid costperunit\"\n                                  }\n                                }}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`quantity${index}`}>Quantity</Label>\n                              <span className=\"required-label\">*</span>\n                              <AvField\n                                name={`quantity${index}`}\n                                type=\"number\"\n                                id={`quantity${index}`}\n                                value={\n                                  data.selectedItemlist.quantity[index] \n                                }\n                                onChange={e => this.quantityChange(e, index)}\n                                validate={{\n                                  required: {\n                                    value: true,\n                                    errorMessage: \"Please enter Item Quantity\"\n                                  },\n                                  pattern: {\n                                    value: \"^[0-9.]*$\",\n                                    errorMessage: \"Please enter valid quantity\"\n                                  }\n                                }}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`totalcost${index}`}>\n                                Total Cost\n                              </Label>\n                              <AvField\n                                name={`totalcost${index}`}\n                                type=\"number\"\n                                id={`totalcost${index}`}\n                                value={\n                                  data.selectedItemlist.totalcost[index]\n                                    ? data.selectedItemlist.totalcost[index]\n                                    : \" \"\n                                }\n                                onChange={e => this.onChange(e, index)}\n                                // validate={{\n                                //   minLength: {\n                                //     value: 1,\n                                //     errorMessage: \"Total Cost value is required\"\n                                //   }\n                                // }}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <Button\n                              type=\"button\"\n                              color='danger'\n                              onClick={e => this.removeClick(e, index)}\n                              style={{ marginTop: \"30px\" }}\n                            >\n                              -\n                            </Button>\n                          </Col>\n                        </Row>\n                      </div>\n                    </div>\n                  );\n                })}\n              </div>\n              <Row>\n                <div className=\"mg-20\">\n                  <Button\n                    color=\"primary\"\n                    disabled={loading}\n                    className=\"lgn-loader\"\n                  >\n                    Submit\n                    {/* {loading} */}\n                  </Button>\n                </div>\n              </Row>\n            </CardBody>\n          </Card>\n        </AvForm>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    supplierdetaillistvalue: state.supplierdetaillistvalue,\n    masteritemlistvalues: state.masteritemlistvalues,\n    materialoptionlistvalues: state.masteritemtypenamevalue,\n    currencylistvalues: state.currencylistvalue,\n    uomlistvalues: state.uomlistvalue,\n    locationlistvalue: state.locationlistvalue,\n    purchaseorderlistvalues: state.purchaseorderlistvalue\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  null\n)(PurchaseOrderForm);\n","import axios from \"axios\";\n\nexport default {\n  suppliercontact: {\n    addSupplierContact: data => {\n      return axios\n        .post(\n          `${process.env.REACT_APP_BASE_URL}/supplier/suppliercontact/addsuppliercontact`,\n          {\n            data\n          }\n        )\n        .then(res => {\n          return res.data.supplierContactdata;\n        });\n    },\n    getSupplierContact: () => {\n      return axios\n        .get(\n          `${process.env.REACT_APP_BASE_URL}/supplier/suppliercontact/getsuppliercontact`\n        )\n        .then(res => {\n          return res.data.suppliercontactlist;\n        });\n    }\n  },\n  supplierdetail: {\n    addsupplierdetails: data => {\n      return axios\n        .post(\n          `${process.env.REACT_APP_BASE_URL}/supplier/supplierdetail/addsupplierdetail`,\n          {\n            data\n          }\n        )\n        .then(res => {\n          return res.data.masterItemType;\n        });\n    },\n    getSupplierDetails: data => {\n      return axios\n        .get(\n          `${process.env.REACT_APP_BASE_URL}/supplier/supplierdetail/getSupplierdetail`\n        )\n        .then(res => {\n          return res.data.supplierdetaillist;\n        });\n    },\n    updateSupplierContact: data => {\n      return axios\n        .patch(\n          `${process.env.REACT_APP_BASE_URL}/supplier/supplierdetail/updateSupplierdetail?id=${data.id}`,\n          {\n            data\n          }\n        )\n        .then(res => {\n          return res.data.success;\n        });\n    }\n  }\n};\n","import { normalize } from \"normalizr\";\nimport api from \"../Services/supplierapi\";\nimport { SUPPLIER_CONTACT_LIST, SUPPLIER_DETAIL_LIST } from \"../Services/types\";\nimport {\n  supplierContactListSchema,\n  supplierDetailListSchema\n} from \"../Schemas/schemas\";\n\nexport const suppplierContactListFetched = suppliercontactlistvalue => {\n  return {\n    type: SUPPLIER_CONTACT_LIST,\n    suppliercontactlistvalue\n  };\n};\n\nexport const suppplierDetailListFetched = supplierdetaillistvalue => {\n  return {\n    type: SUPPLIER_DETAIL_LIST,\n    supplierdetaillistvalue\n  };\n};\nexport const addSupplierContact = data => {\n  return dispatch => {\n    return api.suppliercontact.addSupplierContact(data);\n  };\n};\n\nexport const addSupplierDetails = data => {\n  return dispatch => {\n    return api.supplierdetail.addsupplierdetails(data);\n  };\n};\n\nexport const getSupplierContact = () => {\n  return dispatch => {\n    return api.suppliercontact\n      .getSupplierContact()\n      .then(suppliercontactlist => {\n        const suppliercontactlistvalue =\n          suppliercontactlist.suppliercontactlistdata;\n        return dispatch(\n          suppplierContactListFetched(\n            normalize(suppliercontactlistvalue, [supplierContactListSchema])\n          )\n        );\n      });\n  };\n};\n\nexport const getSupplierDetails = () => {\n  return dispatch => {\n    return api.supplierdetail.getSupplierDetails().then(supplierdetaillist => {\n      const supplierdetaillistvalue = supplierdetaillist.supplierdetaillistdata;\n      return dispatch(\n        suppplierDetailListFetched(\n          normalize(supplierdetaillistvalue, [supplierDetailListSchema])\n        )\n      );\n    });\n  };\n};\n\nexport const updateSupplierDetails = data => {\n  return dispatch => {\n    return api.supplierdetail.updateSupplierContact(data);\n  };\n};\n","import axios from \"axios\";\n\nexport default {\n  currency: {\n    getCurrencyList: () => {\n      return axios\n        .get(`${process.env.REACT_APP_BASE_URL}/currency/getcurrency`)\n        .then(res => {\n          return res.data.currencylist;\n        });\n    }\n  }\n};\n","import { normalize } from \"normalizr\";\nimport api from \"../Services/currency\";\nimport { CURRENCY_LIST } from \"../Services/types\";\nimport { currencyListSchema } from \"../Schemas/schemas\";\n\nfunction currencyListFetched(currencylist) {\n  return {\n    type: CURRENCY_LIST,\n    currencylist\n  };\n}\n\nexport const getCurrencyList = () => {\n  return dispatch => {\n    return api.currency.getCurrencyList().then(currencylist => {\n      const currencylistvalue = currencylist.currencydata;\n      return dispatch(\n        currencyListFetched(normalize(currencylistvalue, [currencyListSchema]))\n      );\n    });\n  };\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport PropTypes from \"prop-types\";\nimport PurchaseOrderForm from \"./PurchaseOrderForm/PurchaseOrderForm\";\nimport { getSupplierDetails } from \"../../../actions/Supplier\";\nimport {\n  getMasterItemList,\n  addPurchaseOrder,\n  updatePurchaseOrder,\n  getPurchaseOrder,\n  getMasterItemTypes\n} from \"../../../actions/Transaction\";\nimport { getCurrencyList } from \"../../../actions/Currency\";\nimport { getUomList } from \"../../../actions/uom\";\nimport { getLocationList } from \"../../../actions/Location\";\nimport CustomLoader from \"../../../Components/loader/loader\";\nimport axios from \"axios\";\nclass purchaseOrder extends React.Component {\n  state = {\n    loading: false,\n    ID:this.props.match.params.id\n  };\n  componentDidMount() {\n    this.props.getPurchaseOrder();\n    this.props.getCurrencyList();\n    this.props.getSupplierDetails();\n    this.props.getMasterItemTypes();\n    this.props.getMasterItemList();\n    this.props.getUomList();\n    this.props.getLocationList();\n    \n    \n  }\n  submit = data => {\n\n    this.dataHandler(true);\n    if(this.props.match.params.id != undefined){\n      \n      data['_id'] = this.props.match.params.id;\n      console.log(data)\n      return this.props\n      .updatePurchaseOrder(data)\n      .then(res => {\n        this.dataHandler(false);\n        return res;\n      })\n      .catch(err => {\n        this.dataHandler(false);\n        throw err;\n      });\n      \n      // axios\n      // .post(`${process.env.REACT_APP_BASE_URL}/purchaseorder/updatepo`,{\n      //   data\n      // })\n      // .then(res => {\n  \n      //   this.dataHandler(false)\n      //   if(res.data.purchaseorderlist.purchaseorderlistdata.length > 0){\n  \n      //   }\n      //   else{\n      //     this.setState({count:0})\n      //   }\n      // },\n      // error =>{\n      //   this.dataHandler(false)\n      //   this.setState({ success: false, message:'Server error.' });\n      // });\n\n      \n    }\n    else{\n      return this.props\n      .addPurchaseOrder(data)\n      .then(res => {\n        this.dataHandler(false);\n        return res;\n      })\n      .catch(err => {\n        this.dataHandler(false);\n        throw err;\n      });\n    }\n  };\n\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n  render() {\n    const { loading,ID } = this.state;\n    return (\n      <div className=\"container mg-t-20\">\n        {loading ? <CustomLoader /> : null}\n        <div>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to=\"/view_purchaseorderlist\">Purchase Order</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Purchase Order</BreadcrumbItem>\n          </Breadcrumb>\n        </div>\n        <div>\n          <PurchaseOrderForm submit={this.submit} ID={ID} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  {\n    getSupplierDetails,\n    getMasterItemList,\n    getCurrencyList,\n    getUomList,\n    getLocationList,\n    addPurchaseOrder,\n    updatePurchaseOrder,\n    getPurchaseOrder,\n    getMasterItemTypes\n  }\n)(purchaseOrder);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport PropTypes from \"prop-types\";\nimport { Button, Alert } from \"reactstrap\";\nimport { getPurchaseOrder } from \"../../../actions/Transaction\";\nimport DataTable from \"../../../Components/Table/DatatablePage\";\nimport CustomLoader from \"../../../Components/loader/loader\";\nimport moment from \"moment\";\nimport axios from \"axios\";\n\nimport { getSupplierDetails } from \"../../../actions/Supplier\";\nimport {\n  getMasterItemList,\n  getMasterItemTypes\n} from \"../../../actions/Transaction\";\nimport { getCurrencyList } from \"../../../actions/Currency\";\nimport { getUomList } from \"../../../actions/uom\";\nimport { getLocationList } from \"../../../actions/Location\";\n\nclass ViewPurchaseOrderlist extends React.Component {\n  state = {\n    loading: true,\n    purchaseorderlistvalues: [],\n    count: 0\n  };\n\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n\n  componentDidMount() {\n    this.props.getCurrencyList();\n    this.props.getSupplierDetails();\n    this.props.getMasterItemTypes();\n\n    this.props.getMasterItemList();\n    this.props.getUomList();\n    this.props.getLocationList();\n\n    this.props.getPurchaseOrder();\n    \n    let purchaseorderlist = Object.values(this.props.purchaseorderlistvalues);\n    purchaseorderlist.sort(function(a, b){\n      return parseInt(b.ponumber) - parseInt(a.ponumber);\n    });\n    // if(purchaseorderlist.length > 0){\n    //   purchaseorderlist = purchaseorderlist.filter((item) =>{\n    //     if(`${process.env.REACT_APP_BASE_URL}`.indexOf('9002') > -1){\n    //       return item.ponumber >= 1011\n    //     }\n    //     return true\n    //   })\n    // }\n    const purchaseorderlistvalues = purchaseorderlist.map(\n      (purchaseorder, i) => {\n        return {\n          ponumber: purchaseorder.ponumber,\n          suppliername: purchaseorder.suppliername,\n          suppliernumber: purchaseorder.suppliernumber,\n          referenceno: purchaseorder.referenceno,\n          address:\n            purchaseorder.supplieraddress1 +\n            \" \" +\n            purchaseorder.supplieraddress2 +\n            \" \" +\n            purchaseorder.suppliercity +\n            \" \" +\n            purchaseorder.supplierstate +\n            \" \" +\n            purchaseorder.supplierpincode +\n            \" \" +\n            purchaseorder.supplierstate +\n            \"\" +\n            purchaseorder.suppliercountry,\n          view: (\n            <div className=\"actionbuttons\">\n              <Button\n                color=\"primary\"\n                // style={{ 'fontSize': '0.8rem' }}\n                Label\n                onClick={() => {\n                  this.updateButton(purchaseorder.id);\n                }}\n              >\n                Print\n            </Button>\n              <Button\n                color=\"primary\"\n                // style={{ 'fontSize': '0.8rem' }}\n                Label\n                onClick={() => {\n                  this.updateButton(purchaseorder.id);\n                }}\n              >\n                Edit\n            </Button>\n            </div>\n          )\n        };\n      }\n    );\n    const count = purchaseorderlist.length;\n    this.setState({ ...this.state, purchaseorderlistvalues, count });\n    // this.dataHandler(false);\n  }\n\n  componentWillReceiveProps(props) {\n    let purchaseorderlist = Object.values(props.purchaseorderlistvalues);\n    console.log(purchaseorderlist)\n    //purchaseorderlist= purchaseorderlist.sort((a, b) => b.ponumber.toString().toLowerCase().localeCompare(a.ponumber.toString().toLowerCase()));\n    purchaseorderlist.sort(function(a, b){\n      return parseInt(b.ponumber) - parseInt(a.ponumber);\n    });\n    // if(purchaseorderlist.length > 0){\n    //   purchaseorderlist = purchaseorderlist.filter((item) =>{\n    //     if(`${process.env.REACT_APP_BASE_URL}`.indexOf('9002') > -1){\n    //       return item.ponumber >= 1011\n    //     }\n    //     return true\n    //   })\n    // }\n    const purchaseorderlistvalues = purchaseorderlist.map(\n      (purchaseorder, i) => {\n        return {\n          ponumber: purchaseorder.ponumber,\n          suppliername: purchaseorder.suppliername,\n          suppliernumber: purchaseorder.suppliernumber,\n          referenceno: purchaseorder.referenceno,\n          address:\n            purchaseorder.supplieraddress1 +\n            \" \" +\n            purchaseorder.supplieraddress2 +\n            \" \" +\n            purchaseorder.suppliercity +\n            \" \" +\n            purchaseorder.supplierstate +\n            \" \" +\n            purchaseorder.supplierpincode +\n            \" \" +\n            purchaseorder.suppliercountry,\n          view: (\n            <div className=\"actionbuttons\">\n              <Button\n                color=\"primary\" style={{ 'fontSize': '0.8rem' }}\n                onClick={() => {\n                  this.updateButton(purchaseorder.id);\n                }}\n              >\n                Print\n            </Button>\n              <Button\n                color=\"primary\"\n                style={{ 'fontSize': '0.8rem' }}\n                onClick={() => {\n                  this.updatePO(purchaseorder.id);\n                }}\n              >\n                Edit\n            </Button>\n            </div>\n          )\n        };\n      }\n    );\n    const count = purchaseorderlist.length;\n    this.setState({ ...this.state, purchaseorderlistvalues, count });\n    this.dataHandler(false);\n  }\n\n  updateButton = id => {\n    let path = `/view_purchaseorderpdf/${id}`;\n    //window.open(path, \"_blank\");\n    this.props.history.push(path);\n  };\n\n\n  updatePO = id => {\n    let path = `/purchase_order_update/${id}`;\n    this.props.history.push(path);\n  };\n\n  render() {\n    const { count, purchaseorderlistvalues, loading } = this.state;\n    const columnvalue = [\n\n      {\n        label: \"PO Number\",\n        field: \"ponumber\",\n        sort: \"asc\",\n        width: 100\n      },\n      {\n        label: \"Supplier Name\",\n        field: \"suppliername\",\n        sort: \"asc\",\n        width: 100\n      },\n      {\n        label: \"Supplier Number\",\n        field: \"suppliernumber\",\n        sort: \"asc\",\n        width: 100\n      },\n      {\n        label: \"Reference Number\",\n        field: \"referenceno\",\n        sort: \"asc\",\n        width: 100\n      },\n      {\n        label: \"Address\",\n        field: \"address\",\n        sort: \"asc\",\n        width: 40\n      },\n      {\n        label: \"Action\",\n        field: \"view\",\n        sort: \"asc\",\n        width: 100\n      }\n    ];\n    return (\n      <div className=\"container mg-t-20\">\n        <div>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to=\"/transaction_page\">Transactions</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>View Purchase Order List</BreadcrumbItem>\n          </Breadcrumb>\n        </div>\n        <div>\n          {loading ? <CustomLoader /> : null}\n          <div className=\"container mg-20\">\n              <DataTable\n                columnvalue={columnvalue}\n                rowvalues={purchaseorderlistvalues}\n                className=\"viewpurchaseorder\"\n              />\n            </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    purchaseorderlistvalues: state.purchaseorderlistvalue\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { \n    getSupplierDetails,\n    getMasterItemList,\n    getCurrencyList,\n    getUomList,\n    getLocationList,\n    getMasterItemTypes,\n    getPurchaseOrder }\n)(ViewPurchaseOrderlist);\n","import {\n  DataTableCell, Table, TableBody, TableCell, TableHeader\n} from '@david.kucsai/react-pdf-table';\nimport {\n  Document, Image, Page, StyleSheet, Text,\n  View\n} from '@react-pdf/renderer';\nimport React from 'react';\nimport client from '../../../Images/client.png';\nimport logo from '../../../Images/logo.png';\n\n// Create styles\nconst styles = StyleSheet.create({\n  textcenter: { textAlign: 'center' },\n  textright: { textAlign: 'right' },\n  textleft: { textAlign: 'left' },\n  paddingleft: { paddingLeft: 5 },\n  margin: {\n    margin: 5\n  },\n  pagepadding: {\n    padding: 20\n  },\n  section: {\n    width: '100%',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    paddingTop: '6px',\n    paddingRight: 20,\n    backgroundColor: 'white'\n  },\n  columnSection: {\n    paddingRight: 20,\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  padd6: {\n    paddingTop: '6px',\n    paddingBottom: '6px'\n  },\n  padding2: {\n    padding: 5\n  },\n\n  headerfont: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    padding: 3\n  },\n  headerfont2: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    textAlign: 'right',\n    padding: 3\n  },\n  headerwidth: {\n    width: '100%',\n    paddingTop: 20,\n    fontSize: 15,\n    fontWeight: 'bold',\n    backgroundColor: 'white',\n    textAlign: 'center',\n  },\n  headerwidthNew: {\n    width: 140,\n    padding: 20\n  },\n  headerwidthdate: {\n    fontSize: 12,\n  },\n  headerwidthlogo: {\n    width: 350,\n    fontSize: 12\n  },\n  logo: {\n    width: 70\n  },\n  headerwidthAddress: {\n    width: 210,\n    fontSize: 10,\n    padding: 2,\n    textAlign: 'right'\n  },\n  refstyle: {\n    fontSize: 12\n  },\n  headerpadding: {\n    padding: 20\n  },\n  flexgrow: {\n    flexGrow: 1\n  },\n  row: {\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  fontsize18: {\n    fontSize: 10\n  },\n  fontsize18bold: {\n    fontSize: 10,\n    fontWeight: 900,\n    paddingBottom: 10\n  },\n  kindattend: {\n    paddingTop: 15,\n    fontSize: 10,\n    textAlign: 'center'\n  },\n  yourref: {\n    fontSize: 10,\n    paddingBottom: 10\n  },\n  main: {\n    fontSize: 10\n  },\n  footerfixed: {\n    position: 'absolute',\n    bottom: 0,\n    width: '100%'\n  }\n});\n\nconst Small = ({ children }) => {\n  return (\n    <Text style={{ fontSize: 10 }}>{children}</Text>\n  )\n}\n\nconst Description = ({ children }) => {\n  return (\n    <Text style={{ fontSize: 10, textAlign: 'left', paddingLeft: 8 }}>{children}</Text>\n  )\n}\n\nconst SmallBold = ({ children }) => {\n  return (\n    <Text style={{ fontSize: 10, fontWeight: 'bold' }}>{children}</Text>\n  )\n}\n\nconst Header = ({ children }) => {\n  return (\n    <Text style={{ fontSize: 14, fontWeight: 'bold' }}>{children}</Text>\n  )\n}\n\n// Create Document Component\n\nconst MyDocument = ({ purchaseorderlistvalue, data_cond }) => {\n  const ponumber = purchaseorderlistvalue.ponumber.toString();\n  const financialYear = purchaseorderlistvalue.financialyear.toString();\n  const data = purchaseorderlistvalue.addeditemlist;\n  let totaleachitem = 0\n  if (data.length > 0) {\n    data.map((item) => {\n      totaleachitem = totaleachitem + parseFloat(item.totalcost)\n    })\n    totaleachitem = totaleachitem.toFixed(2)\n  }\n\n\n\n  let totalrs = purchaseorderlistvalue.totalvalue\n    ? purchaseorderlistvalue.totalvalue\n    : '';\n  const tax = purchaseorderlistvalue.cgst ? purchaseorderlistvalue.cgst : '';\n  let cgst = purchaseorderlistvalue.cgst && purchaseorderlistvalue.cgst != '' ? purchaseorderlistvalue.cgst : 0\n  cgst = parseFloat(cgst)\n  let cgstval = parseFloat(totaleachitem) * (cgst/100)\n  cgstval = parseFloat(cgstval)\n  cgstval = cgstval.toFixed(2)\n\n  let sgst = purchaseorderlistvalue.sgst && purchaseorderlistvalue.sgst != '' ? purchaseorderlistvalue.sgst : 0\n  sgst = parseFloat(sgst)\n  let sgstval = parseFloat(totaleachitem) * (sgst/100)\n  sgstval = parseFloat(sgstval)\n  sgstval = sgstval.toFixed(2)\n\n  let igst = purchaseorderlistvalue.igst && purchaseorderlistvalue.igst != '' ? purchaseorderlistvalue.igst : 0\n  igst = parseFloat(igst)\n  let igstval = parseFloat(totaleachitem) * (igst/100)\n  igstval = parseFloat(igstval)\n  igstval = igstval.toFixed(2)\n\n  console.log(purchaseorderlistvalue.scheduledays)\n\n  let scheduledays = purchaseorderlistvalue.scheduledays ? purchaseorderlistvalue.scheduledays : ''\n  let schedulepayment = purchaseorderlistvalue.schedulepayment ? purchaseorderlistvalue.schedulepayment : ''\n  const taxpercentage = purchaseorderlistvalue.gst\n    ? purchaseorderlistvalue.gst / 100\n    : '';\n  const grandtotal =  totalrs+igstval+cgstval+sgstval;\n  const selectecontactlist = purchaseorderlistvalue.selectedcontactlist[0]\n    ? purchaseorderlistvalue.selectedcontactlist[0].suppliercontactname\n    : '';\n  const suppliercontactnumber = purchaseorderlistvalue.selectedcontactlist[0]\n    ? purchaseorderlistvalue.selectedcontactlist[0].suppliercontactnumber\n    : '';\n  const cond_data = data_cond;\n  return (\n    <Document>\n      <Page size='A4' style={styles.pagepadding}>\n        <View style={styles.section}>\n          <Image src={logo} />\n          {/* <Text style={styles.logo}></Text> */}\n          <Text style={styles.headerwidthAddress}>\n            <SmallBold>Office & Works:</SmallBold>{'\\n'}\n            Plot no.40 & 41 (corner) Road, no. 5,{'\\n'}\n            KIADB Obadenahalli industrial Area,{'\\n'}\n            3rd phase Doddaballapura,{'\\n'}\n            Bangalore Rural District.-561203{'\\n'}\n            Karnataka, INDIA{'\\n'}\n            GST No. 29AAGCP4018E1ZJ{'\\n'}\n            Mob: +91 9900069150{'\\n'}\n            Email id: info@pondhan.com{'\\n'}\n            Visit Us: www.pondhan.com{'\\n'}\n          </Text>\n        </View>\n        {/* <View style={styles.section}>\n          <Text style={styles.headerwidthlogo}></Text>\n          <Text style={styles.headerwidthAddress}>Jakkur Post,Srirampure,</Text>\n        </View>\n        <View style={styles.section}>\n          <Text style={styles.headerwidthlogo}></Text>\n          <Text style={styles.headerwidthAddress}>Bangalore - 560064</Text>\n        </View>\n        <View style={styles.section}>\n          <Text style={styles.headerwidthlogo}></Text>\n          <Text style={styles.headerwidthAddress}>off No: +919900069150</Text>\n        </View>\n        <View style={styles.section}>\n          <Text style={styles.headerwidthlogo}></Text>\n          <Text style={styles.headerwidthAddress}>\n            works: KIADB obendanahalli,\n          </Text>\n        </View>\n        <View style={styles.section}>\n          <Text style={styles.headerwidthlogo}></Text>\n          <Text style={styles.headerwidthAddress}>\n            Industrial area, Doddaballapura,\n          </Text>\n        </View>\n        <View style={styles.section}>\n          <Text style={styles.headerwidthlogo}></Text>\n          <Text style={styles.headerwidthAddress}>\n            Bangalore rural dist, karnataka,INDIA\n          </Text>\n        </View>\n        <View style={styles.section}>\n          <Text style={styles.headerwidthlogo}></Text>\n          <Text style={styles.headerwidthAddress}>Email: info@pondhan.com</Text>\n        </View>\n        <View style={styles.section}>\n          <Text style={styles.headerwidthlogo}></Text>\n          <Text style={styles.headerwidthAddress}>\n            visit us: www.pondhan.com\n          </Text>\n        </View> */}\n        <Text style={styles.headerwidth}><Header>Purchase Order</Header> \n        \n        \n        \n        </Text>\n\n        <View style={[styles.section, { paddingBottom: 15, marginTop: 8 }]}>\n        \n        <Text style={styles.refstyle}>\n            PO No. PSPL/{financialYear}/{ponumber}\n          </Text>\n          {/* <Text style={styles.refstyle}>\n            Ref No.{purchaseorderlistvalue.referenceno}\n          </Text> */}\n          <Text style={styles.headerwidthdate}>\n            Date:{purchaseorderlistvalue.requestdeliverydate}\n          </Text>\n        </View>\n\n        <View style={styles.columnSection}>\n          <View>\n            <View>\n              <Text style={styles.fontsize18bold}>Vendor Address:</Text>\n            </View>\n            <View>\n              <Text style={styles.fontsize18}>M/S {purchaseorderlistvalue.suppliername}</Text>\n            </View>\n            <View>\n              <Text style={styles.fontsize18}>\n                {purchaseorderlistvalue.supplieraddress1}{' '}\n                {purchaseorderlistvalue.supplieraddress2}\n              </Text>\n            </View>\n            <View>\n              <Text style={styles.fontsize18}>\n                {purchaseorderlistvalue.suppliercity}{' '}\n                {purchaseorderlistvalue.supplierstate}{' '}\n                {purchaseorderlistvalue.supplierpincode}\n              </Text>\n            </View>\n            <View>\n              <Text style={styles.fontsize18}>{purchaseorderlistvalue.suppliercountry}</Text>\n            </View>\n            <View>\n              <Text style={styles.fontsize18}>Mobile: {suppliercontactnumber}</Text>\n            </View>\n            <View>\n              <Text style={styles.fontsize18}>GSTIN No: {purchaseorderlistvalue.suppliergstnumber}</Text>\n            </View>\n          </View>\n          <View>\n            <Text style={styles.fontsize18}>Billing & Delivery Address: {'\\n'}{'\\n'}\n              Pondhan Scaffolding Pvt Ltd.{'\\n'}\n              Plot No : 40&41, Rd. No 5{'\\n'}\n              3rd Phase, KIADB- Obadenahalli{'\\n'}\n              Industrial Area, Doddabalapura,{'\\n'}\n              Bangalore Rural- 561203{'\\n'}\n              GSTIN No : 29AAGCP4018E1ZJ{'\\n'}\n              Contact Person : Nehal Ganapathy{'\\n'}\n              Contact Number : 9844039150/9900069150\n\n      </Text>\n          </View>\n        </View>\n        <View >\n          <Text style={styles.kindattend}>Kind Attn:{selectecontactlist}</Text>\n        </View>\n  \n        <View >\n          <Text style={styles.kindattend}>{'\\n'}</Text>\n        </View>\n        <View>\n          <Text style={styles.main}>Dear Sir,</Text>\n        </View>\n        <View>\n          <Text style={[styles.main, styles.padd6]}>\n            With ref to the discussions we had with you, we are pleased to place our order for the below mentioned\n  material as per the rates quoted by you and as per the T&C given below. ( Ref No ({purchaseorderlistvalue.referenceno}))\n          </Text>\n        </View>\n        <Table style={(styles.section, styles.padding)} data={data}>\n          <TableHeader textAlign={'center'}>\n            <TableCell weighting={0.08}>\n              <Text style={styles.headerfont}>SL No</Text>\n            </TableCell>\n            <TableCell weighting={0.6}>\n              <Text style={styles.headerfont}>Material Description</Text>\n            </TableCell>\n            <TableCell weighting={0.2}>\n              <Text style={styles.headerfont}>Qty</Text>\n            </TableCell>\n            <TableCell weighting={0.2}>\n              <Text style={styles.headerfont}>Rate</Text>\n            </TableCell>\n            <TableCell weighting={0.2}>\n              <Text style={styles.headerfont}>Total</Text>\n            </TableCell>\n          </TableHeader>\n          <TableBody textAlign={'center'}>\n            <DataTableCell\n              \n              weighting={0.08}\n              getContent={r => <Small>{r.slno}</Small>}\n            />\n            <DataTableCell\n              style={{ maxWidth: 200, wordWrap: 'break-word' }}\n              weighting={0.6}\n              getContent={r => <Description>{r.itemname}</Description>}\n            />\n            <DataTableCell\n              style={styles.padding2}\n              weighting={0.2}\n              getContent={r => <Small>{r.itemdescription}</Small>}\n            />\n            <DataTableCell\n              style={styles.padding2}\n              weighting={0.2}\n              getContent={r => <Small>{r.quantity}</Small>} />\n            <DataTableCell\n              style={styles.padding2}\n              weighting={0.2}\n              getContent={r => <Small>{r.totalcost}</Small>} />\n          </TableBody>\n        </Table>\n        <Table style={styles.section}>\n          <TableHeader>\n            <TableCell weighting={1.08}>\n              <Text style={styles.headerfont2}>Total.</Text>\n            </TableCell>\n            <TableCell weighting={0.2}>\n              <Text style={[styles.headerfont2, { textAlign: 'center' }]}>{totaleachitem}</Text>\n            </TableCell>\n          </TableHeader>\n        </Table>\n        <Table style={styles.section}>\n          <TableHeader>\n            <TableCell weighting={1.08}>\n              <Text style={styles.headerfont2}>CGST@{cgst}%. </Text>\n            </TableCell>\n            <TableCell weighting={0.2}>\n              <Text style={[styles.headerfont2, { textAlign: 'center' }]}>{cgstval}</Text>\n            </TableCell>\n          </TableHeader>\n        </Table>\n        <Table style={styles.section}>\n          <TableHeader>\n            <TableCell weighting={1.08}>\n              <Text style={styles.headerfont2}>SGST@{sgst}%. </Text>\n            </TableCell>\n            <TableCell weighting={0.2}>\n              <Text style={[styles.headerfont2, { textAlign: 'center' }]}>{sgstval}</Text>\n            </TableCell>\n          </TableHeader>\n        </Table>\n        <Table style={styles.section}>\n          <TableHeader>\n            <TableCell weighting={1.08}>\n              <Text style={styles.headerfont2}>IGST@{igst}%. </Text>\n            </TableCell>\n            <TableCell weighting={0.2}>\n              <Text style={[styles.headerfont2, { textAlign: 'center' }]}>{igstval}</Text>\n            </TableCell>\n          </TableHeader>\n        </Table>\n        <Table style={styles.section}>\n          <TableHeader>\n            <TableCell weighting={1.08}>\n              <Text style={styles.headerfont2}>Grand Total</Text>\n            </TableCell>\n            <TableCell weighting={0.2}>\n              <Text style={[styles.headerfont2, { textAlign: 'center' }]}>\n                {totalrs}\n              </Text>\n            </TableCell>\n          </TableHeader>\n        </Table>\n        <View style={styles.footerfixed}>\n          <Image src={client} />\n        </View>\n      </Page>\n      <Page size='A4' style={styles.pagepadding}>\n        <View style={styles.section}>\n          <Image src={logo} />\n          <Text style={styles.logo}></Text>\n      \n          <Text style={styles.headerwidthAddress}>\n          <SmallBold>Office & Works</SmallBold>{'\\n'}\n            Plot no.40 & 41 (corner) Road, no. 5,{'\\n'}\n            KIADB Obadenahalli industrial Area,{'\\n'}\n            3rd phase Doddaballapura,{'\\n'}\n            Bangalore Rural District.-561203{'\\n'}\n            Karnataka, INDIA{'\\n'}\n            GST No. 29AAGCP4018E1ZJ{'\\n'}\n            Mob: +91 9900069150{'\\n'}\n            Email id: info@pondhan.com{'\\n'}\n            Visit Us: www.pondhan.com{'\\n'}\n          </Text>\n     \n        </View>\n        {/* <View style={styles.section}>\n          <Text style={styles.headerwidthlogo}></Text>\n          <Text style={styles.headerwidthAddress}>Jakkur Post,Srirampure,</Text>\n        </View>\n        <View style={styles.section}>\n          <Text style={styles.headerwidthlogo}></Text>\n          <Text style={styles.headerwidthAddress}>Bangalore - 560064</Text>\n        </View>\n        <View style={styles.section}>\n          <Text style={styles.headerwidthlogo}></Text>\n          <Text style={styles.headerwidthAddress}>off No: +919900069150</Text>\n        </View>\n        <View style={styles.section}>\n          <Text style={styles.headerwidthlogo}></Text>\n          <Text style={styles.headerwidthAddress}>\n            works: KIADB obendanahalli,\n          </Text>\n        </View>\n        <View style={styles.section}>\n          <Text style={styles.headerwidthlogo}></Text>\n          <Text style={styles.headerwidthAddress}>\n            Industrial area, Doddaballapura,\n          </Text>\n        </View>\n        <View style={styles.section}>\n          <Text style={styles.headerwidthlogo}></Text>\n          <Text style={styles.headerwidthAddress}>\n            Bangalore rural dist, karnataka,INDIA\n          </Text>\n        </View>\n        <View style={styles.section}>\n          <Text style={styles.headerwidthlogo}></Text>\n          <Text style={styles.headerwidthAddress}>Email: info@pondhan.com</Text>\n        </View> */}\n        <View style={styles.section}>\n          <Text style={styles.headerwidthlogo}>Terms & conditions:</Text>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.main}>1. Payment Schedule: {schedulepayment} </Text>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.main}>2. Delivery Schedule: {scheduledays} </Text>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.main}>\n            3. Unloading : Exclusive . (M/S Pondhan’s Scope)\n          </Text>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.main}>\n            4. Painting of material : If applicable\n          </Text>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.main}>\n            5. The weight mentioned above will be subject to toleranc of +/-\n            0.5%. Difference in weight beyond tolerance limit will not be\n            accepted and any shortfall in weight will be deducted from your\n            Invoice as applicable.\n          </Text>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.main}>\n            6. All material shall be as per IS standard and acceptable quality.\n            You will take rejected material back at your cost.\n          </Text>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.main}>\n            7. Weighing slip shall be sent along with each supply.\n          </Text>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.main}>\n            8. Please specify the order No on challan & Bills.\n          </Text>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.main}>\n            9. All your bills must contain our PO number, receipt along with the\n            bill, failing which the same will not be passed for the payment.\n          </Text>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.main}>\n            10. In the event you fail to mention GST number & HSN code of\n            purchaser and seller on the Invoice, the GST component will be\n            released only after the compliance of the same. (mandatory as per\n            the provision of GST ACT.\n          </Text>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.main}>\n            11. Please ensure your GST Invoice is submitted to us immediately\n            after supply of materials, which should contain our GST number also.\n            Our GST no is : 29AAGCP4018E1ZJ & PAN is AAGCP4018E.\n          </Text>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.main}>\n            12. We will recover the GST amount in case of mismatch of GST credit\n            with the GST return filed by the vendor.\n          </Text>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.main}>\n            13. Above price is inclusive of loading but excludes transportation\n            charges & unloading comes under the perview of Pondhan Scaffolding\n            Pvt Ltd.\n          </Text>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.main}>\n            14. The Transport Vehicle must have fitness certificate, emission\n            certificate, Inscurance, RC documents and all statutory vehicle\n            documents & Driver should have valid driving Liscenceas well as\n            driver alongwith unloaders compulsory to wear safety helmets,\n            reflection jackets and Shoes also.\n          </Text>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.main}>\n            15. Special Terms : Relevant Eway bill has to be attached alongwith\n            each and every consignment.\n          </Text>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.main}>\n            16. Special Note : Relevant manufacturer test certificate has to be\n            submittedalongwith the material. (if applicable).\n          </Text>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.main}>\n            17. Special Note : Please ensure to put up your signature alongwith\n            your company seal, on TAX INVOICE without fail.\n          </Text>\n        </View>\n        <View >\n          <Text>{'\\n'}</Text>\n        </View>\n\n        <View>\n          <Text style={styles.main}>Note: {purchaseorderlistvalue.subject}</Text>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.main}>\n            Kindly sign and return the duplicate copy of this PO as a token of\n            acceptance. {'\\n'} Thanking you, {'\\n'} {'\\n'} For Pondhan\n            Scaffolding Pvt Ltd. {'\\n'} {'\\n'} Authorised Signatory {'\\n'}\n          </Text>\n        </View>\n        <View style={styles.row}>\n          <Text style={styles.main}>Prepared By:</Text>\n          <Text style={styles.main}>Checked By:</Text>\n        </View>\n\n        <View>\n        <Text\n                 style={[styles.main, { color: 'red' }]}\n                >\n                 {'\\n'} {'\\n'} \n                 Note: Any legal matter should be under Bengaluru Jurisdiction </Text>\n        </View>\n\n        <View style={styles.footerfixed}>\n          <Image src={client} />\n        </View>\n      </Page>\n    </Document>\n  );\n};\n\nexport default MyDocument;\n","import { PDFViewer } from '@react-pdf/renderer';\nimport axios from \"axios\";\nimport moment from 'moment';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { getSupplierDetails } from '../../../actions/Supplier';\nimport { getPurchaseOrder } from '../../../actions/Transaction';\nimport logo from '../../../Images/logo.png';\nimport MyDocument from './Component';\nimport './ViewPurchaseOrder.scss';\n\nclass ViewPurchaseOrderPdf extends React.Component {\n  state = {\n    purchaseorderlistvalues: {},\n    status: false,\n    link: ''\n  };\n  componentDidMount() {\n    this.props.getPurchaseOrder();\n    this.props.getSupplierDetails();\n    const purchaseorderid = this.props.match.params.id;\n    const purchaseorderlistvalues = this.props.purchaseorderlistvalues[\n      purchaseorderid\n    ];\n    console.log(purchaseorderlistvalues)\n    purchaseorderlistvalues.requestdeliverydate = moment(\n      purchaseorderlistvalues.requestdeliverydate\n    ).format('DD MMM, YYYY');\n    purchaseorderlistvalues.addeditemlist = purchaseorderlistvalues.addeditemlist.map(\n      (itemlist, i) => {\n        return {\n          slno: (i + 1).toString(),\n          itemname: itemlist.itemdescription ? itemlist.itemdescription : '',\n          itemdescription: itemlist.quantity\n            ? itemlist.quantity.toString()\n            : '',\n          quantity: itemlist.costperunit ? itemlist.costperunit.toString() : '',\n          totalcost: itemlist.totalcost\n            ? itemlist.totalcost.toFixed(2).toString()\n            : ''\n        };\n      }\n    );\n    const supplierid = purchaseorderlistvalues.supplierid;\n    const suppliercontactid = purchaseorderlistvalues.suppliercontactid;\n    const supplierlistvalue = this.props.supplierdetaillistvalue[supplierid];\n    const selectedcontact = supplierlistvalue.suppliercontactlistvalue.filter(\n      contactid => {\n        if (contactid._id == suppliercontactid) {\n          return contactid;\n        }\n      }\n    );\n    console.log('__SELECTED_CONTACT_LIST____');\n    console.log(selectedcontact);\n    purchaseorderlistvalues.selectedcontactlist = selectedcontact;\n    axios.get(`${process.env.REACT_APP_BASE_URL}/year/getyear`).then(\n      (res) => {\n        if(res.data.year) {\n          purchaseorderlistvalues.financialyear = res.data.year.currentyear;\n        }\n        else {\n          purchaseorderlistvalues.financialyear = \"2020-21\";          \n        }\n      },\n      (error) => {\n        purchaseorderlistvalues.financialyear = \"2020-21\";\n      }\n    );\n    setTimeout(() => {\n      this.setState({\n        ...this.state.purchaseorderlistvalues,\n        purchaseorderlistvalues,\n        status: true\n      });\n    },2000);\n    this.dynamicClick();\n  }\n\n  dynamicClick() {\n    if (document.getElementsByClassName('pdf-class')) {\n      if (\n        document.getElementsByClassName('pdf-class')[0].children.length <= 1\n      ) {\n        setTimeout(() => {\n          this.dynamicClick();\n        }, 7000);\n      } else if (\n        document.getElementsByClassName('pdf-class')[0].children.length > 1\n      ) {\n        this.setState({\n          link: document.getElementsByClassName('pdf-class')[0].children[1].src\n          // status : undefined,\n        },()=>{\n          setTimeout(() => {\n            document.getElementById('D1').click();\n            this.props.history.push('/view_purchaseorderlist');\n          }, 300);\n        });\n      \n      }\n    } else {\n    }\n  }\n\n  render() {\n    //const link = \"blob:http://localhost:3000/0ef925bb-e930-4ea4-b861-2621aa6447ad\"\n\n    const data_cond = [\n      {\n        slno: '1',\n        title: 'Invoices',\n        value: '2 copies Invoices (original & duplicate)'\n      },\n      {\n        slno: '2',\n        title: 'Tax & Duty',\n        value: 'Included'\n      },\n      {\n        slno: '3',\n        title: 'Payment Schedule',\n        value: '15 days from the date of delivery'\n      },\n      {\n        slno: '4',\n        title: 'Delivery Schedule',\n        value: 'Immediately'\n      },\n      {\n        slno: '5',\n        title: 'Billing address & GST No',\n        value:\n          'M/s Pondhan Scaffolding Pvt Ltd \\n Plot no. 40/41, Road no.5, Obedanahalli,'\n      },\n      {\n        slno: '6',\n        title: 'Delivery Address',\n        value: 'M/s Pondhan Scaffolding Pvt Ltd'\n      }\n    ];\n    const { status, link } = this.state;\n    return (\n      <div>\n        <div className='pdf-class'>\n          Downloading file.Please wait.\n          {/* {!status && (\n          <h1 style={{ 'position': 'absolute','left': '50%','top': '50%','transform': 'translate(-50%, -50%);'}}>Downloading file.Please wait.</h1>\n        )} */}\n          <a href={link} download id='D1'></a>\n          {status && (\n            <PDFViewer>\n              <MyDocument\n                purchaseorderlistvalue={this.state.purchaseorderlistvalues}\n                data_cond={data_cond}\n                logo={logo}\n              />\n            </PDFViewer>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\nfunction mapStateToProps(state) {\n  return {\n    purchaseorderlistvalues: state.purchaseorderlistvalue,\n    supplierdetaillistvalue: state.supplierdetaillistvalue\n  };\n}\nexport default connect(\n  mapStateToProps,\n  { getPurchaseOrder, getSupplierDetails }\n)(ViewPurchaseOrderPdf);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport {\n  Button,\n  Label,\n  Alert,\n  Card,\n  CardBody,\n  CardHeader,\n  Row,\n  Col,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from \"reactstrap\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport axios from \"axios\";\nimport client from '../../../../../Images/client.png';\nimport CustomLoader from \"../../../../../Components/loader/loader\";\nclass QuotationForm extends React.Component {\n\n  state = {\n    customerID: null,\n    isRemovedCalled: false,\n    isVisible: true,\n    transaction: [],\n    data: {\n      customerdetail: {\n        id: \"\",\n        customernumber: \"\",\n        customergstnumber: \"\",\n        customercontactnumber: \"\",\n        customeraddress1: \"\",\n        customeraddress2: \"\",\n        city: \"\",\n        state: \"\",\n        country: \"\",\n        pincode: \"\"\n      },\n      selectedItemlist: {\n        id: [],\n        itemname: [],\n        itemdescription: [],\n        itemtype: [],\n        itemrate: [],\n        itemuom: [],\n        itemdiscount: [],\n        itemdiscountamount: [],\n        costperunit: [],\n        quantity: [],\n        totalcost: []\n      },\n      quotationnumber: null,\n      subject: \"\",\n      gst: null,\n      totalvalue: \"\",\n      values: [],\n      tcharge: \"\",\n      transportationgst: \"\",\n      transitinsurance:\"\",\n      ws: \"\",\n      loadingcharge: \"\",\n      scheduledays:\"\",\n      date: new Date()\n    },\n    errors: {},\n    customerobjects: {},\n    customerlistvalues: [],\n    uom: [],\n    masteritemlistvalues: [],\n    masteritemlistvaluesobject: {},\n    masteritemtypelistvalues: [],\n    masteritemtypelistvaluesobject: {},\n    loading: true,\n    success: false,\n    visible: false\n  };\n\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n\n  getQuotationDetails(id) {\n    this.dataHandler(true)\n    this.setState({ loading: true });\n    axios\n      .get(`${process.env.REACT_APP_BASE_URL}/quotation/getsinglequotation/${id}`)\n      .then(res => {\n\n\n        if (res.data.quotationlist.quotationdata.length > 0) {\n          let founddata = res.data.quotationlist.quotationdata;\n\n          const newState = Object.assign({}, this.state);\n          newState.data.customerdetail.id = founddata[0].customerid;\n\n          newState.data.values = founddata[0].addeditemlist;\n\n\n          if (founddata[0].addeditemlist.length > 0) {\n            founddata[0].addeditemlist.filter((item, index) => {\n              this.selectitemchange(item.id._id, index);\n            })\n          }\n\n\n          newState.data.subject = founddata[0].subject;\n          newState.data.date = new Date(founddata[0].date);\n          newState.data.quotationnumber = founddata[0].quotationnumber;\n          localStorage.setItem('QTno', founddata[0].quotationnumber)\n          newState.data.totalvalue = founddata[0].totalvalue;\n          newState.data.gst = founddata[0].tax;\n          newState.data.ws = founddata[0].ws != undefined && founddata[0].ws != null ? founddata[0].ws : '';\n          newState.data.tcharge = founddata[0].tcharge != undefined && founddata[0].tcharge != null ? founddata[0].tcharge : '';\n          newState.data.transportationgst = founddata[0].transportationgst != undefined && founddata[0].transportationgst != null ? founddata[0].transportationgst : '';\n          \n          newState.data.transitinsurance = founddata[0].transitinsurance != undefined && founddata[0].transitinsurance != null ? founddata[0].transitinsurance : '';\n          \n          newState.data.loadingcharge = founddata[0].loadingcharge != undefined && founddata[0].loadingcharge != null ? founddata[0].loadingcharge : '';\n          newState.data.scheduledays = founddata[0].scheduledays ? founddata[0].scheduledays : \"\";\n\n\n          if (founddata[0].addeditemlist.length > 0) {\n\n            for (var i = 0; i < founddata[0].addeditemlist.length; i++) {\n              founddata[0].addeditemlist[i].itemdiscount = founddata[0].addeditemlist[i].itemdiscount == null || founddata[0].addeditemlist[i].itemdiscount == '' ?\n                founddata[0].addeditemlist[i].itemdiscount = 0 : founddata[0].addeditemlist[i].itemdiscount\n              founddata[0].addeditemlist[i].itemdiscount = (founddata[0].addeditemlist[i].itemdiscount).toString()\n\n\n              founddata[0].addeditemlist[i].quantity = founddata[0].addeditemlist[i].quantity == null || founddata[0].addeditemlist[i].quantity == '' ?\n                founddata[0].addeditemlist[i].quantity = 0 : founddata[0].addeditemlist[i].quantity\n              founddata[0].addeditemlist[i].quantity = (founddata[0].addeditemlist[i].quantity).toString()\n\n              founddata[0].addeditemlist[i].costperunit = founddata[0].addeditemlist[i].costperunit == null || founddata[0].addeditemlist[i].costperunit == '' ?\n                founddata[0].addeditemlist[i].costperunit = 0 : founddata[0].addeditemlist[i].costperunit\n              founddata[0].addeditemlist[i].costperunit = (founddata[0].addeditemlist[i].costperunit).toString()\n\n              founddata[0].addeditemlist[i].totalcost = founddata[0].addeditemlist[i].totalcost == null || founddata[0].addeditemlist[i].totalcost == '' ?\n                founddata[0].addeditemlist[i].totalcost = 0 : founddata[0].addeditemlist[i].totalcost\n              founddata[0].addeditemlist[i].totalcost = (founddata[0].addeditemlist[i].totalcost).toString()\n\n              founddata[0].addeditemlist[i].itemdiscountamount = founddata[0].addeditemlist[i].itemdiscountamount == null || founddata[0].addeditemlist[i].itemdiscountamount == '' ?\n                founddata[0].addeditemlist[i].itemdiscountamount = 0 : founddata[0].addeditemlist[i].itemdiscountamount\n              founddata[0].addeditemlist[i].itemdiscountamount = (founddata[0].addeditemlist[i].itemdiscountamount).toString()\n\n\n\n\n\n\n              newState.data.selectedItemlist.itemdescription.push(founddata[0].addeditemlist[i].itemdescription)\n              newState.data.selectedItemlist.itemtype.push(founddata[0].addeditemlist[i].itemtype._id)\n              newState.data.selectedItemlist.itemdiscount.push(founddata[0].addeditemlist[i].itemdiscount)\n\n\n              newState.data.selectedItemlist.itemdiscountamount.push(founddata[0].addeditemlist[i].itemdiscountamount)\n              newState.data.selectedItemlist.itemuom.push(founddata[0].addeditemlist[i].itemuom._id)\n              newState.data.selectedItemlist.quantity.push(founddata[0].addeditemlist[i].quantity)\n\n              newState.data.selectedItemlist.costperunit.push(founddata[0].addeditemlist[i].costperunit)\n\n              newState.data.selectedItemlist.totalcost.push(founddata[0].addeditemlist[i].totalcost)\n              newState.data.selectedItemlist.id.push(founddata[0].addeditemlist[i].id)\n\n            }\n          }\n\n\n          this.setState(newState);\n          this.handleChange(founddata[0].customerid)\n          this.dataHandler(false)\n        }\n        else {\n          this.setState({ count: 0 })\n          this.dataHandler(false)\n        }\n      },\n        error => {\n          this.dataHandler(false)\n          this.setState({ success: false, message: 'Server error.' });\n        });\n  }\n\n  componentDidMount() {\n    if (this.props.ID != undefined) {\n      this.getQuotationDetails(this.props.ID)\n    }\n    else{\n      setTimeout(() =>{\n        this.dataHandler(false)\n      },100)\n      // quotation/getquotation\n    }\n      \n    const quotationlistvalues = Object.keys(this.props.quotationlistvalues);\n    const customerlistvalues = Object.values(this.props.customerlistvalues);\n    const customerobjects = this.props.customerlistvalues;\n    const masteritemlistvalues = Object.values(this.props.masteritemlistvalues);\n    const masteritemlistvaluesobject = this.props.masteritemlistvalues;\n    const masteritemtypelistvalues = Object.values(\n      this.props.masteritemtypelistvalues\n    );\n    const masteritemtypelistvaluesobject = this.props.masteritemtypelistvalues;\n\n    const uom = Object.values(this.props.uomlistvalues);\n\n\n    if (this.props.ID == undefined) {\n\n      let quotationnumber = '';\n      quotationnumber =\n        quotationlistvalues.length > 0 ? 1 + quotationlistvalues.length : 1;\n      this.setState({\n        data: {\n          ...this.state.data,\n          quotationnumber\n        }\n      })\n\n    }\n    // else{\n    //   alert(this.state.data.quotationnumber)\n    // }\n\n    this.setState({\n      ...this.state,\n      customerlistvalues,\n      customerobjects,\n      masteritemlistvalues,\n      masteritemlistvaluesobject,\n      masteritemtypelistvalues,\n      masteritemtypelistvaluesobject,\n      uom\n    });\n\n    //this.dataHandler(false)\n  }\n\n  componentWillReceiveProps(props) {\n    const quotationlistvalues = Object.keys(props.quotationlistvalues);\n    const customerlistvalues = Object.values(props.customerlistvalues);\n    const customerobjects = props.customerlistvalues;\n    const masteritemlistvalues = Object.values(props.masteritemlistvalues);\n    const masteritemlistvaluesobject = props.masteritemlistvalues;\n    const masteritemtypelistvalues = Object.values(\n      props.masteritemtypelistvalues\n    );\n    const masteritemtypelistvaluesobject = props.masteritemtypelistvalues;\n    const uom = Object.values(props.uomlistvalues);\n    let quotationnumber = ''\n    if (this.props.ID == undefined) {\n      quotationnumber =\n        quotationlistvalues.length > 0 ? 1 + quotationlistvalues.length : 1;\n    }\n\n    this.setState({\n      ...this.state,\n      customerlistvalues,\n      customerobjects,\n      masteritemlistvalues,\n      masteritemlistvaluesobject,\n      masteritemtypelistvalues,\n      masteritemtypelistvaluesobject,\n      uom,\n      data: {\n        ...this.state.data,\n        quotationnumber\n      }\n    });\n  }\n\n  onhandlerChange = e => {\n    let name = e.target.name;\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    }, () => {\n      if (name === 'gst') {\n        this.totalValue();\n      }\n    });\n  };\n\n  onCustomerChange = e => {\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        customerdetail: {\n          ...this.state.data.customerdetail,\n          [e.target.name]: e.target.value\n        }\n      }\n    });\n  };\n\n  onSubjectHandler = e => {\n\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    },()=>{\n      console.log(this.state.data)\n    });\n  };\n\n  createSelectcustomer = () => {\n    let items = [];\n    const customerlistvalues = this.state.customerlistvalues;\n    customerlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.customername}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  selectitemchange2 = (e, index) => {\n    // /console.log(e.target.value + '::' + index)\n    let selected_id = e.target ? e.target.value : e;\n    if (selected_id) {\n      const selected_item = this.state.masteritemlistvaluesobject[selected_id];\n      console.log(selected_item)\n      const selectedItemlist = { ...this.state.data.selectedItemlist };\n      selectedItemlist.id[index] = selected_item.id;\n      selectedItemlist.itemname[index] = selected_item.masteritemtypename;\n\n      this.setState({\n        ...this.state.data,\n        data: {\n          ...this.state.data,\n          selectedItemlist\n        }\n      }, () => {\n        console.log(this.state.data.values)\n      });\n    }\n  }\n\n  selectitemchange = (e, index) => {\n    // /console.log(e.target.value + '::' + index)\n    let selected_id = e.target ? e.target.value : e;\n    if (selected_id) {\n      let selected_item = this.state.masteritemlistvaluesobject[selected_id];\n      if(selected_item){\n        const selectedItemlist = { ...this.state.data.selectedItemlist };\n        selectedItemlist.id[index] = selected_item.id;\n        selectedItemlist.itemname[index] = selected_item.masteritemtypename;\n        selectedItemlist.itemdescription[index] =\n          selected_item.masteritemdescription;\n        selectedItemlist.itemtype[index] = selected_item.masteritemtype._id;\n        selectedItemlist.itemrate[index] = selected_item.masteritemrate._id;\n        selectedItemlist.itemuom[index] = selected_item.masteritemuom._id;\n  \n        if (this.props.ID == undefined) {\n          selectedItemlist.itemdiscount[index] = \"0\";\n          selectedItemlist.costperunit[index] = selected_item.masteritemcostperunit\n            ? selected_item.masteritemcostperunit.toString()\n            : \"\";\n          selectedItemlist.quantity[index] = (1).toString();\n          selectedItemlist.totalcost[index] = selected_item.masteritemcostperunit\n            ? selected_item.masteritemcostperunit.toString()\n            : \"\";\n        }\n  \n  \n        this.setState({\n          ...this.state.data,\n          data: {\n            ...this.state.data,\n            selectedItemlist\n          }\n        }, () => {\n          this.totalValue();\n        });\n      }\n     \n    }\n   \n  };\n\n  quantityChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    const costperunit = selectedItemlist.costperunit[index] || null;\n    selectedItemlist.quantity[index] = e.target.value;\n    const quantity = e.target.value;\n    const discountpercentagevalue = selectedItemlist.itemdiscount[index];\n\n    if (discountpercentagevalue && costperunit && quantity) {\n      const totalcost =\n        parseFloat(quantity) * parseFloat(selectedItemlist.costperunit[index]);\n      const discountvalue = parseFloat(discountpercentagevalue / 100).toFixed(\n        2\n      );\n      const totaldiscountcost = parseFloat(totalcost * discountvalue).toFixed(\n        2\n      );\n      const totalvaluecost = totalcost - totaldiscountcost;\n      selectedItemlist.totalcost[index] = totalvaluecost\n        ? totalvaluecost.toFixed(2)\n        : null || \"\";\n    } else {\n      const totalValue = costperunit\n        ? e.target.value * costperunit\n        : null || undefined || \"\";\n      selectedItemlist.totalcost[index] = totalValue\n        ? parseFloat(totalValue).toFixed(2)\n        : \"\";\n    }\n\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n    this.totalValue();\n  };\n\n  itemdiscountChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    const discount = Number(e.target.value);\n    selectedItemlist.itemdiscount[index] = e.target.value;\n    const unitcost = selectedItemlist.costperunit[index];\n    console.log(unitcost)\n    const quantity = selectedItemlist.quantity[index];\n    const particularindextotalvalue = parseFloat(unitcost * quantity).toFixed(\n      2\n    );\n    if (particularindextotalvalue && discount) {\n\n      const discountvalue = parseFloat(discount / 100);\n      const totaldiscountcost = parseFloat(\n        particularindextotalvalue * discountvalue\n      ).toFixed(2);\n      const totalvaluecost = particularindextotalvalue - totaldiscountcost;\n      selectedItemlist.totalcost[index] = parseFloat(totalvaluecost).toFixed(2);\n      //   selectedItemlist.itemdiscountamount[index] = (parseFloat(unitcost)-parseFloat(totaldiscountcost)).toFixed(2);\n      selectedItemlist.itemdiscountamount[index] = (parseFloat(unitcost) - (parseFloat(unitcost) * discount) / 100).toFixed(2);\n    } else {\n      selectedItemlist.totalcost[index] = particularindextotalvalue;\n      selectedItemlist.itemdiscountamount[index] = null;\n    }\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n    this.totalValue();\n  };\n\n  unitChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.costperunit[index] = e.target.value;\n    const discountpercentagevalue = selectedItemlist.itemdiscount[index];\n    if (discountpercentagevalue) {\n      const totalcost =\n        parseFloat(selectedItemlist.quantity[index]) *\n        parseFloat(selectedItemlist.costperunit[index]);\n      const discountvalue = parseFloat(discountpercentagevalue / 100).toFixed(\n        2\n      );\n      const totaldiscountcost = parseFloat(totalcost * discountvalue).toFixed(\n        2\n      );\n      const totalvaluecost = totalcost - totaldiscountcost;\n      selectedItemlist.totalcost[index] = totalvaluecost\n        ? totalvaluecost.toFixed(2)\n        : null || \"\";\n      selectedItemlist.itemdiscountamount[index] = totaldiscountcost\n\n      selectedItemlist.itemdiscountamount[index] = (parseFloat(selectedItemlist.costperunit[index]) -\n        (parseFloat(selectedItemlist.costperunit[index]) * selectedItemlist.itemdiscount[index]) / 100).toFixed(2);\n\n    } else {\n      const totalcost =\n        parseFloat(selectedItemlist.quantity[index]) *\n        parseFloat(selectedItemlist.costperunit[index]);\n      selectedItemlist.totalcost[index] = totalcost\n        ? totalcost.toFixed(2)\n        : null || \"\";\n      selectedItemlist.itemdiscountamount[index] = null;\n    }\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n    this.totalValue();\n  };\n\n\n  /*itemdiscountChange = (e, index) => {\n    \n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    const discount = Number(e.target.value);\n    selectedItemlist.itemdiscount[index] = e.target.value;\n    const unitcost = selectedItemlist.costperunit[index];\n    const quantity = selectedItemlist.quantity[index];\n    const particularindextotalvalue = parseFloat(unitcost * quantity).toFixed(\n      2\n    );\n    if (particularindextotalvalue && discount) {\n      const discountvalue = parseFloat(discount / 100);\n      const totaldiscountcost = parseFloat(\n        particularindextotalvalue * discountvalue\n      ).toFixed(2);\n      const totalvaluecost = particularindextotalvalue - totaldiscountcost;\n      selectedItemlist.totalcost[index] = parseFloat(totalvaluecost).toFixed(2);\n      selectedItemlist.itemdiscountamount[index] = (parseFloat(unitcost)-parseFloat(totaldiscountcost)).toFixed(2);\n    \n    } else {\n      selectedItemlist.totalcost[index] = particularindextotalvalue;\n      selectedItemlist.itemdiscountamount[index] = null;\n    }\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n    this.totalValue();\n  };\n\n  unitChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.costperunit[index] = e.target.value;\n    const discountpercentagevalue = selectedItemlist.itemdiscount[index];\n    if (discountpercentagevalue) {\n      const totalcost =\n        parseFloat(selectedItemlist.quantity[index]) *\n        parseFloat(selectedItemlist.costperunit[index]);\n      const discountvalue = parseFloat(discountpercentagevalue / 100).toFixed(\n        2\n      );\n      const totaldiscountcost = parseFloat(totalcost * discountvalue).toFixed(\n        2\n      );\n      const totalvaluecost = totalcost - totaldiscountcost;\n      selectedItemlist.totalcost[index] = totalvaluecost\n        ? totalvaluecost.toFixed(2)\n        : null || \"\";\n      selectedItemlist.itemdiscountamount[index] = totaldiscountcost\n    } else {\n      const totalcost =\n        parseFloat(selectedItemlist.quantity[index]) *\n        parseFloat(selectedItemlist.costperunit[index]);\n      selectedItemlist.totalcost[index] = totalcost\n        ? totalcost.toFixed(2)\n        : null || \"\";\n        selectedItemlist.itemdiscountamount[index] = null;\n    }\n\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n    this.totalValue();\n  };*/\n\n  createSelectItemTypes = () => {\n    let items = [];\n    const masteritemtypelistvalues = this.state.masteritemtypelistvalues;\n    masteritemtypelistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.masteritemtypename}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  totalValue = () => {\n    const { totalcost } = this.state.data.selectedItemlist;\n    if (totalcost.length > 0) {\n      let totalvalue = totalcost\n        .map((value, i) => {\n          if (parseFloat(value)) {\n            const floatvalue = parseFloat(value).toFixed(2);\n            return floatvalue;\n          } else {\n            return parseFloat(0);\n          }\n        })\n        .reduce((a, b) => {\n          const parsedvalue = parseFloat(a) + parseFloat(b);\n          return parsedvalue;\n        });\n      // Check if tax exists and handle tax  \n      let { gst } = this.state.data;\n      if (gst !== null) {\n        gst = parseFloat(gst).toFixed(2);\n        let per = (gst * totalvalue) / 100;\n        totalvalue = parseFloat(Number(per) + Number(totalvalue)).toFixed(2);\n      }\n      this.setState({\n        ...this.state.data,\n        data: {\n          ...this.state.data,\n          totalvalue\n        }\n      });\n    }\n  };\n\n  createSelectUomItems = () => {\n    let items = [];\n    const uomlistvalues = this.state.uom;\n    uomlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.uomname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  handleChange = e => {\n\n    let selected_id = e.target ? e.target.value : e\n    this.updateQuotation(selected_id)\n    let customerdetail = this.state.customerobjects[selected_id];\n    console.log(customerdetail)\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        customerdetail\n      }\n    });\n\n  };\n\n  handleClick = e => {\n\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        values: [...this.state.data.values, [\"\"]],\n        selectedItemlist: {\n          ...this.state.data.selectedItemlist,\n          id: [...this.state.data.selectedItemlist.id, \"\"],\n          itemname: [...this.state.data.selectedItemlist.itemname, \"\"],\n          itemdescription: [\n            ...this.state.data.selectedItemlist.itemdescription,\n            \"\"\n          ],\n          itemtype: [...this.state.data.selectedItemlist.itemtype, \"\"],\n          itemrate: [...this.state.data.selectedItemlist.itemrate, \"\"],\n          itemuom: [...this.state.data.selectedItemlist.itemuom, \"\"],\n          itemdiscount: [...this.state.data.selectedItemlist.itemdiscount, \"0\"],\n          itemdiscountamount: [...this.state.data.selectedItemlist.itemdiscountamount, \"\"],\n          costperunit: [...this.state.data.selectedItemlist.costperunit, \"\"],\n          quantity: [...this.state.data.selectedItemlist.quantity, \"1\"],\n          totalcost: [...this.state.data.selectedItemlist.totalcost, \"\"]\n        }\n      }\n    }, () => {\n      console.log(this.state.data.values)\n    });\n  };\n\n  filterItems(itemarray, key) {\n    return itemarray.sort((a, b) => { return a[key].toLowerCase().localeCompare(b[key].toLowerCase()) })\n  }\n\n  createSelectItems = () => {\n    let items = [];\n    let masteritemlistvalues = this.state.masteritemlistvalues;\n    masteritemlistvalues = this.filterItems(masteritemlistvalues, 'masteritemtypename')\n    console.log(masteritemlistvalues)\n    masteritemlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.masteritemtypename}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  removeClick = (e, index) => {\n    console.log(index)\n\n    let removeItem = { ...this.state.data };\n    console.log(removeItem.selectedItemlist)\n    let values = removeItem.values;\n    let id = removeItem.selectedItemlist.id;\n    let itemname = removeItem.selectedItemlist.itemname;\n    let itemdescription = removeItem.selectedItemlist.itemdescription;\n    let itemtype = removeItem.selectedItemlist.itemtype;\n    let itemrate = removeItem.selectedItemlist.itemrate;\n    let itemuom = removeItem.selectedItemlist.itemuom;\n    let itemdiscount = removeItem.selectedItemlist.itemdiscount;\n    let costperunit = removeItem.selectedItemlist.costperunit;\n    let quantity = removeItem.selectedItemlist.quantity;\n    let totalcost = removeItem.selectedItemlist.totalcost;\n    let itemdiscountamount = removeItem.selectedItemlist.itemdiscountamount;\n\n    values.splice(index, 1);\n\n    id.splice(index, 1);\n    itemname.splice(index, 1);\n    itemdescription.splice(index, 1);\n    itemtype.splice(index, 1);\n    itemrate.splice(index, 1);\n    itemuom.splice(index, 1);\n\n    costperunit.splice(index, 1);\n    itemdiscount.splice(index, 1);\n    quantity.splice(index, 1);\n    itemdiscountamount.splice(index, 1);\n\n    totalcost.splice(index, 1);\n\n    console.log(removeItem.selectedItemlist)\n\n\n\n    //setTimeout(() =>{\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        values,\n        selectedItemlist: {\n          ...this.state.data.selectedItemlist,\n          id,\n          itemname,\n          itemdescription,\n          itemtype,\n          itemrate,\n          itemuom,\n          itemdiscount,\n          itemdiscountamount,\n          costperunit,\n          quantity,\n          totalcost\n        }\n      },\n      isVisible: false,\n      isRemovedCalled: true\n    }, () => {\n      // setTimeout(() =>{\n      this.setState({\n        'isVisible': true\n      })\n      console.log(this.state.data.values)\n      console.log(this.state.data.selectedItemlist)\n      if (this.state.data.selectedItemlist.id.length > 0) {\n        this.state.data.selectedItemlist.id.filter((item, index) => {\n          if (typeof item == 'string' && item != '') {\n\n            this.selectitemchange2(item, index)\n          }\n\n        })\n\n      }\n      // },200)\n\n      this.totalValue();\n\n    });\n    //},200)\n\n\n  };\n\n  handleValidSubmit = () => {\n    let AddedIteminfo = [];\n    const { customerdetail, selectedItemlist } = this.state.data;\n    const {\n      quotationnumber,\n      subject,\n      gst,\n      values,\n      date,\n      totalvalue,\n      tcharge,\n      transportationgst,\n      transitinsurance,\n      ws,\n      loadingcharge,\n      scheduledays\n    } = this.state.data;\n    const id = selectedItemlist.id;\n    const itemname = selectedItemlist.itemname;\n    const itemdescription = selectedItemlist.itemdescription;\n    const itemtype = selectedItemlist.itemtype;\n    const itemrate = selectedItemlist.itemrate;\n    const itemuom = selectedItemlist.itemuom;\n    const itemdiscount = selectedItemlist.itemdiscount;\n    const costperunit = selectedItemlist.costperunit;\n    const quantity = selectedItemlist.quantity;\n    const totalcost = selectedItemlist.totalcost;\n    const itemdiscountamount = selectedItemlist.itemdiscountamount;\n    values.forEach(function (value, i) {\n      let obj = {};\n      obj.id = id[i] || null;\n      obj.itemname = itemname[i] || null;\n      obj.itemdescription = itemdescription[i] || null;\n      obj.itemtype = itemtype[i] || null;\n      obj.itemrate = itemrate[i] || null;\n      obj.itemuom = itemuom[i] || null;\n      obj.itemdiscount = itemdiscount[i] || null;\n      obj.costperunit = costperunit[i] || null;\n      obj.quantity = quantity[i] || null;\n      obj.totalcost = totalcost[i] || null;\n      obj.itemdiscountamount = itemdiscountamount[i] || null;\n      AddedIteminfo.push(obj);\n    });\n    let data = {\n      customerdetail,\n      AddedIteminfo,\n      quotationnumber,\n      subject,\n      gst,\n      values,\n      date,\n      totalvalue,\n      tcharge,\n      transportationgst,\n      transitinsurance,\n      ws,\n      loadingcharge,\n      scheduledays\n    };\n    console.log(transportationgst)\n    data['quotationnumber'] = data['quotationnumber'] == '' ? localStorage.getItem('QTno') : data['quotationnumber']\n    data['customeraddress'] = document.getElementById('customeraddress').value ? document.getElementById('customeraddress').value : ''\n\n    this.setState({ loading: true });\n\n    if (localStorage.getItem('customerId') != null) {\n      let date = (new Date().getDate() < 10 ? \"0\" + new Date().getDate() : new Date().getDate()) +\n        \"/\" + (new Date().getMonth() + 1 < 10 ? \"0\" + (new Date().getMonth() + 1) : new Date().getMonth() + 1) + \"/\" + new Date().getFullYear();\n\n      let obj = {}\n      obj['customerid'] = localStorage.getItem('customerId')\n      obj['Qno'] = this.state.data.quotationnumber\n      obj['quotation'] = date\n\n\n\n      if (this.props.ID != undefined) {\n        console.log(data)\n        this.props\n          .submit(data)\n          .then(() => {\n            this.dataHandler(false)\n            this.setState({ loading: false, errors: {}, success: true });\n            this.onShowAlert();\n          })\n          .catch(err => {\n            this.setState({ loading: false, errors: {}, success: true });\n            if (err.response) {\n              this.setState({ errors: err.response.data.errors, loading: false });\n              this.onShowAlert();\n            }\n\n          });\n\n      }\n      else {\n        axios\n          .post(`${process.env.REACT_APP_BASE_URL}/customerTransaction/addcustomertransaction`, obj)\n          .then(res => {\n            this.props\n              .submit(data)\n              .then(() => {\n                this.setState({ loading: false, errors: {}, success: true });\n                this.myFormRef.reset();\n                this.onShowAlert();\n              })\n              .catch(err => {\n                this.setState({ errors: err.response.data.errors, loading: false });\n                this.onShowAlert();\n              });\n          },\n            error => {\n              this.setState({ errors: error.response.data.errors, loading: false });\n              this.onShowAlert();\n            });\n      }\n    }\n    else {\n      this.props\n        .submit(data)\n        .then(() => {\n          this.setState({ loading: false, errors: {}, success: true });\n          this.myFormRef.reset();\n          this.onShowAlert();\n        })\n        .catch(err => {\n          this.setState({ errors: err.response.data.errors, loading: false });\n          this.onShowAlert();\n        });\n    }\n  };\n\n  updateQuotation(id) {\n    if (id != '') {\n      localStorage.setItem('customerId', id)\n      // this.setState({ loading: true,transaction:[] });\n      // axios\n      // .get(`${process.env.REACT_APP_BASE_URL}/customerTransaction/getcustomertransaction/` + id)\n      // .then(res => {\n      //   this.setState({ loading: false });\n      //   if(res.data.customerlist.customerdata.length > 0){\n      //     let customervalues = res.data.customerlist.customerdata;\n      //     if(customervalues.length > 0){\n      //       customervalues = customervalues.filter((item,index) =>{\n      //         return index == customervalues.length-1\n      //       })\n      //       if(customervalues.length == 1){\n      //         this.setState({ transaction: customervalues },() =>{\n      //           console.log(this.state.transaction)\n      //         });\n      //       }\n      //     }\n      //   }\n      // },\n      // error =>{\n      //   this.setState({ loading: false });\n      // });\n    }\n\n  }\n\n  onShowAlert = () => {\n    this.setState({ visible: true }, () => {\n      window.setTimeout(() => {\n        this.setState({ visible: false });\n      }, 5000);\n    });\n  };\n\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n\n  handleInvalidSubmit = () => {\n    console.log(\"invalid submit\");\n  };\n\n  render() {\n    const { data, errors, loading, success, visible, isVisible } = this.state;\n    const successmsg = this.props.ID != undefined ? 'Quotation is updated successfully' : 'Quotation is added successfully'\n    const customerID = data.customerdetail ? (\n      <AvField\n      Label\n      type=\"select\"\n      name={`customername`}\n      value={data.customerdetail.id}\n      required={true}\n      onChange={e => this.handleChange(e)}\n    >\n      <option value=\"\">select customer name</option>\n      {this.createSelectcustomer()}\n    </AvField>\n    ) : (\n      <AvField\n      Label\n      type=\"select\"\n      name={`customername`}\n  \n      required={true}\n      onChange={e => this.handleChange(e)}\n    >\n      <option value=\"\">select customer name</option>\n      {this.createSelectcustomer()}\n    </AvField>\n    )\n\n    const customerNumber = data.customerdetail ? (\n      <AvField\n      Label\n      name=\"customernumber\"\n      type=\"number\"\n      readOnly\n      id=\"customernumber\"\n      value={data.customerdetail.customernumber}\n      onChange={this.onCustomerChange}\n      validate={{\n        required: {\n          value: true,\n          errorMessage: \"Please enter Customer Number\"\n        },\n\n        pattern: {\n          value: \"^[0-9]+$\",\n          errorMessage: \"Please enter valid Number\"\n        }\n      }}\n    />\n    ) : (\n      <AvField\n      Label\n      name=\"customernumber\"\n      type=\"number\"\n      readOnly\n      id=\"customernumber\"\n      onChange={this.onCustomerChange}\n      validate={{\n        required: {\n          value: true,\n          errorMessage: \"Please enter Customer Number\"\n        },\n\n        pattern: {\n          value: \"^[0-9]+$\",\n          errorMessage: \"Please enter valid Number\"\n        }\n      }}\n    />\n    )\n\n\n\n    const customerGST = data.customerdetail ? (\n      <AvField\n      Label\n      name=\"customergstnumber\"\n      type=\"text\" readOnly\n      id=\"customergstnumber\"\n      value={data.customerdetail.customergstnumber}\n      onChange={e => this.onCustomerChange}\n      validate={{\n        minLength: {\n          value: 15,\n          errorMessage:\n            \"Customer GST Number should contain 15 characters\"\n        },\n        maxLength: {\n          value: 15,\n          errorMessage:\n            \"Customer GST Number should contain 15 characters\"\n        },\n        pattern: {\n          value: \"^[a-zA-z0-9]+$\",\n          errorMessage: \"Please enter valid GST Number\"\n        }\n      }}\n    />\n    ) : (\n      <AvField\n      Label\n      name=\"customergstnumber\"\n      type=\"text\" \n      readOnly\n      id=\"customergstnumber\"\n      onChange={e => this.onCustomerChange}\n      validate={{\n        minLength: {\n          value: 15,\n          errorMessage:\n            \"Customer GST Number should contain 15 characters\"\n        },\n        maxLength: {\n          value: 15,\n          errorMessage:\n            \"Customer GST Number should contain 15 characters\"\n        },\n        pattern: {\n          value: \"^[a-zA-z0-9]+$\",\n          errorMessage: \"Please enter valid GST Number\"\n        }\n      }}\n    />\n    )\n\n\n\n    const customerAddress = data.customerdetail ? (\n      <AvField\n      Label\n      name=\"customeraddress\"\n      type=\"text\"\n      readOnly\n      id=\"customeraddress\"\n      value={\n        data.customerdetail.customeraddress1 +\n        \" \" +\n        data.customerdetail.customeraddress2 +\n        \" \" +\n        data.customerdetail.city +\n        \" \" +\n        data.customerdetail.state +\n        \" \" +\n        data.customerdetail.country +\n        \" \" +\n        data.customerdetail.pincode\n      }\n      onChange={this.onCustomerChange}\n    />\n    ) : (\n      <AvField\n      Label\n      name=\"customeraddress\"\n      type=\"text\"\n      readOnly\n      id=\"customeraddress\"\n\n      onChange={this.onCustomerChange}\n    />\n    )\n\n\n\n\n\n    const dataelem = isVisible ? (\n\n      <div className=\"purchaseorder-item-row\">\n        {data.values.map((values, index) => {\n\n          const itemnameinfo = values.id != undefined ? (\n            <AvField\n              type=\"select\"\n              value={values.id._id}\n              name={`selectitem${index}`}\n              onChange={e => this.selectitemchange(e, index)}\n              required={true}\n            >\n              <option value=\"\">select Item</option>\n              {this.createSelectItems()}\n            </AvField>) :\n            (\n              <AvField\n                type=\"select\"\n                name={`selectitem${index}`}\n                value={\n                  data.selectedItemlist.id[index]\n                }\n                onChange={e => this.selectitemchange(e, index)}\n                required={true}\n              >\n                <option value=\"\">select Item</option>\n                {this.createSelectItems()}\n              </AvField>\n\n            )\n          return (\n            <div key={index}>\n\n              <div className=\"purchaseorder-table\">\n                <Row key={index}>\n                  <Col sm={1}>\n\n                    <AvGroup>\n\n                      <Label for=\"selectitem\">Item Code</Label>\n                      <span className=\"required-label\">*</span>\n                      {itemnameinfo}\n\n\n                    </AvGroup>\n                  </Col>\n                  <Col sm={2}>\n                    <AvGroup>\n                      <Label for={`masteritemdescription${index}`}>\n                        Description\n                    </Label>\n                      <span className=\"required-label\">*</span>\n                      <AvField\n                        name={`masteritemdescription${index}`}\n                        type=\"text\"\n                        readOnly\n                        id=\"masteritemdescription\"\n                        value={\n                          data.selectedItemlist.itemdescription[index]\n                        }\n                        onChange={this.onChange}\n                        validate={{\n                          required: {\n                            value: true,\n                            errorMessage:\n                              \"Please enter Item Description\"\n                          }\n\n\n                        }}\n                      />\n                    </AvGroup>\n                  </Col>\n                  <Col sm={1}>\n                    <AvGroup>\n                      <Label for={`masteritemtype${index}`}>Type</Label>\n                      <span className=\"required-label\">*</span>\n                      <AvField\n                        style={{ width: \"150px\" }}\n                        type=\"select\"\n                        readOnly\n                        name={`masteritemtype${index}`}\n                        onChange={this.onChange}\n                        required={true}\n                        value={\n                          data.selectedItemlist.itemtype[index]\n                        }\n                      >\n                        <option value=\"\">select</option>\n                        {this.createSelectItemTypes()}\n                      </AvField>\n                    </AvGroup>\n                  </Col>\n                  <Col sm={1}>\n                    <AvGroup>\n                      <Label for={`masteritemuom${index}`}>UOM</Label>\n                      <span className=\"required-label\">*</span>\n                      <AvField\n                        type=\"select\"\n                        readOnly\n                        name={`masteritemuom${index}`}\n                        onChange={this.onChange}\n                        required={true}\n                        value={\n                          data.selectedItemlist.itemuom[index]\n                        }\n                      >\n                        <option value=\"\">uom</option>\n                        {this.createSelectUomItems()}\n                      </AvField>\n                    </AvGroup>\n                  </Col>\n                  <Col sm={1}>\n                    <AvGroup>\n                      <Label for={`discount${index}`}>Discount %</Label>\n                      <span className=\"required-label\">*</span>\n                      <AvField\n                        name={`itemdiscount${index}`}\n                        type=\"number\"\n                        id={`itemdiscount${index}`}\n                        value={\n                          data.selectedItemlist.itemdiscount[index]\n                        }\n                        onChange={e =>\n                          this.itemdiscountChange(e, index)\n                        }\n                        validate={{\n                          minLength: {\n                            value: 1,\n                            errorMessage:\n                              \"item Discount value is required\"\n                          },\n                          maxLength: { value: 100 },\n                          pattern: {\n                            value: \"^[0-9.]*$\",\n                            errorMessage: \"Please enter valid value\"\n                          }\n                        }}\n                      />\n                    </AvGroup>\n                  </Col>\n\n                  <Col sm={1}>\n                    <AvGroup>\n                      <Label for={`quantity${index}`}>Quantity</Label>\n                      <span className=\"required-label\">*</span>\n                      <AvField\n                        name={`quantity${index}`}\n                        type=\"number\"\n                        id={`quantity${index}`}\n                        value={\n                          data.selectedItemlist.quantity[index]\n                        }\n                        onChange={e => this.quantityChange(e, index)}\n                        validate={{\n                          required: {\n                            value: true,\n                            errorMessage: \"Please enter Item Quantity\"\n                          },\n                          minLength: {\n                            value: 1,\n                            errorMessage: \"quantity value is required\"\n                          },\n                          pattern: {\n                            value: \"^[0-9.]*$\",\n                            errorMessage: \"Please enter valid quantity\"\n                          }\n                        }}\n                      />\n                    </AvGroup>\n                  </Col>\n\n                  <Col sm={1}>\n                    <AvGroup>\n                      <Label for={`costperunit${index}`}>\n                        MRP Cost\n                    </Label>\n                      <AvField\n                        name={`costperunit${index}`}\n                        type=\"number\"\n                        id={`costperunit${index}`}\n                        value={\n                          data.selectedItemlist.costperunit[index]\n                        }\n                        onChange={e => this.unitChange(e, index)}\n                        validate={{\n                          required: {\n                            value: true,\n                            errorMessage: 'Please enter cost'\n                          },\n\n                          pattern: {\n                            value: \"^[0-9.]*$\",\n                            errorMessage:\n                              \"Please enter valid costperunit\"\n                          }\n                        }}\n                      />\n                    </AvGroup>\n                  </Col>\n                  {/* Discount cost */}\n                  <Col sm={1}>\n                    <AvGroup>\n                      <Label for={`itemdiscountamount${index}`}>\n                        Discount Cost\n                    </Label>\n                      <AvField\n                        name={`itemdiscountamount${index}`}\n                        type=\"number\"\n                        id={`itemdiscountamount${index}`}\n                        value={\n                          data.selectedItemlist.itemdiscountamount[index]\n                        }\n                        onChange={e => this.unitChange(e, index)}\n                      />\n                    </AvGroup>\n                  </Col>\n                  {/* Discount cost */}\n\n                  <Col sm={1}>\n                    <AvGroup>\n                      <Label for={`totalcost${index}`}>\n                        Total Cost\n                    </Label>\n                      <AvField\n                        name={`totalcost${index}`}\n                        type=\"number\"\n                        id={`totalcost${index}`}\n                        value={\n                          data.selectedItemlist.totalcost[index]\n                            ? data.selectedItemlist.totalcost[index]\n                            : \" \"\n                        }\n                        onChange={e => this.onChange(e, index)}\n                      />\n                    </AvGroup>\n                  </Col>\n                  <Col sm={1}>\n                    <Button\n                      type=\"button\"\n                      onClick={e => this.removeClick(e, index)}\n                      style={{ marginTop: \"30px\" }}\n                    >\n                      -\n                  </Button>\n                  </Col>\n                </Row>\n              </div>\n\n\n            </div>\n          );\n        })}\n      </div>\n\n\n    ) : null\n\n\n\n    return (\n      <div>\n        <div>\n\n          {loading ? <CustomLoader /> : null}\n          {!!success ? (\n            // <Alert color=\"info\" isOpen={visible}>\n            //   Quotation is added successfully\n            // </Alert>\n            <Modal\n              isOpen={success}\n              toggle={this.toggle}\n              className={this.props.className}\n            >\n              <ModalHeader toggle={this.toggle}>Quotation</ModalHeader>\n              <ModalBody >{successmsg}</ModalBody>\n              <ModalFooter>\n                <Button color=\"primary\" onClick={this.toggle}>\n                  Ok\n                </Button>\n              </ModalFooter>\n            </Modal>\n          ) : null}\n        </div>\n        <div>\n          {!!errors.quotationnumber ? (\n            <Alert color=\"danger\" isOpen={visible} Label>\n              Quotation number should have unique value.\n            </Alert>\n          ) : null}\n        </div>\n        <AvForm\n          onValidSubmit={this.handleValidSubmit}\n          onInvalidSubmit={this.handleInvalidSubmit}\n          ref={el => (this.myFormRef = el)}\n        >\n          <Card>\n            <CardHeader Label>Quotation</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"ponumber\">Quotation Number</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      Label\n                      name=\"quotationnumber\"\n                      type=\"number\"\n                      id=\"quotationnumber\"\n                      value={data.quotationnumber || null}\n                      onChange={this.onhandlerChange}\n\n                      validate={{\n                        pattern: {\n                          value: \"^[0-9]+$\",\n                          errorMessage: \"Please enter valid Number\"\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <Label className='small-font-size' for=\"totalcost\" Label>Total Value</Label>\n                  <span className=\"required-label\">*</span>\n                  <AvField\n                    Label\n                    name=\"totalvalue\"\n                    type=\"Number\"\n                    id=\"totalcost\"\n                    value={data.totalvalue || \" \" || null}\n                    onChange={e => this.onhandlerChange(e)}\n                    readOnly\n                  />\n                </Col>\n                <Col sm={1}>\n                  <Label className='small-font-size' for=\"date\">Date</Label>\n                  <span className=\"required-label\">*</span>\n                  <DatePicker\n                  autoComplete=\"new-password\"\n                    selected={data.date}\n                    onChange={this.handleChangeDeliveryDate}\n                    className=\"form-control small-font-size\"\n                    dateFormat=\"dd/MM/yyyy\"\n                    id=\"startdate\"\n                  />\n                </Col>\n                <Col sm={1}>\n                  <Label className='small-font-size' for=\"gst\">Tax %</Label>\n                  <span className=\"required-label\">*</span>\n                  <AvField\n                    Label F\n                    name=\"gst\"\n                    type=\"Number\"\n                    id=\"gst\"\n                    value={data.gst || null}\n                    onChange={e => this.onhandlerChange(e)}\n                    validate={{\n                      required: {\n                        value: true,\n                        errorMessage: \"Please enter Tax Value in Percentage\"\n                      },\n                      pattern: {\n                        value: \"^[0-9.]+$\",\n                        errorMessage: \"Please enter valid value\"\n                      }\n                    }}\n                  />\n                </Col>\n              </Row>\n              <Row>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"customername\">Customer Name</Label>\n                    <span className=\"required-label\">*</span>\n                    {/* <AvField\n                      Label\n                      type=\"select\"\n                      name={`customername`}\n                      value={data.customerdetail.id || null}\n                      required={true}\n                      onChange={e => this.handleChange(e)}\n                    >\n                      <option value=\"\">select customer name</option>\n                      {this.createSelectcustomer()}\n                    </AvField> */}\n                    {customerID}\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"customernumber\">Customer Number</Label>\n                    <span className=\"required-label\">*</span>\n                    {customerNumber}\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"customergstnumber\">Customer GST </Label>\n                    {customerGST}\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"customeraddress\">Customer Address</Label>\n                    {customerAddress}\n                  </AvGroup>\n                </Col>\n              </Row>\n              <Row>\n              <Col sm={2}>\n                  <AvGroup>\n                  <Label className='small-font-size' for=\"scheduledays\">Delivery Schedule</Label>\n                  <AvField\n                      name=\"scheduledays\"\n                      type=\"text\"\n                      id=\"scheduledays\"\n                      value={data.scheduledays || \"\"}\n                      onChange={this.onSubjectHandler}\n                   \n                    />\n                    </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"subject\">Subject</Label>\n                  \n                    <AvField\n                      Label\n                      name=\"subject\"\n                      type=\"text\"\n                      id=\"subject\"\n                      value={data.subject || \"\"}\n                      onChange={this.onSubjectHandler}\n                  \n                    />\n                  </AvGroup>\n                </Col>\n\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"loadingcharge\">\n                      Loading and Handling Charges </Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      Label\n                      name=\"loadingcharge\"\n                      type=\"number\"\n                      id=\"loadingcharge\"\n                      value={data.loadingcharge || \"\"}\n                      onChange={this.onSubjectHandler}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: \"Please enter Loading and Handling Charges\"\n                        }\n\n\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"ws\">\n                      W.S</Label>\n                    <span className=\"required-label\">*</span>\n                    <AvField\n                      Label\n                      name=\"ws\"\n                      type=\"number\"\n                      id=\"ws\"\n                      value={data.ws || \"\"}\n                      onChange={this.onSubjectHandler}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: \"Please enter W.S\"\n                        }\n\n\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"transitinsurance\">\n                    Transit Insurance</Label>\n     \n                    <AvField\n                      Label\n                      name=\"transitinsurance\"\n                      type=\"number\"\n                      id=\"transitinsurance\"\n                      value={data.transitinsurance || \"\"}\n                      onChange={this.onSubjectHandler}\n          \n                    />  \n                  </AvGroup>\n                </Col>\n\n                \n\n\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"tcharge\">\n                      Transportation Charges</Label>\n     \n                    <AvField\n                      Label\n                      name=\"tcharge\"\n                      type=\"number\"\n                      id=\"tcharge\"\n                      value={data.tcharge || \"\"}\n                      onChange={this.onSubjectHandler}\n          \n                    />\n                  </AvGroup>\n                </Col>\n\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for=\"transportationgst\">Transportation GST(%) </Label>\n                    <AvField\n                      Label\n                      name=\"transportationgst\"\n                      type=\"number\"\n                      id=\"transportationgst\"\n                      value={data.transportationgst || \"\"} \n                      onChange={this.onSubjectHandler}\n                    \n                    />\n                  </AvGroup>\n                </Col>\n\n\n              </Row>\n              <Row>\n                <div className=\"mg-t-20\">\n                  <Button color=\"info\" onClick={this.handleClick} type=\"button\">\n                    Add Item\n                  </Button>\n                </div>\n              </Row>\n\n              {dataelem}\n\n              <Row>\n                <div className=\"mg-20\">\n                  <Button\n                    Label\n                    color=\"primary\"\n                    disabled={loading}\n                    className=\"lgn-loader\"\n                  >\n                    Submit\n                    {/* {loading} */}\n                  </Button>\n                </div>\n              </Row>\n            </CardBody>\n          </Card>\n        </AvForm>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    customerlistvalues: state.customerlistvalues,\n    masteritemlistvalues: state.masteritemlistvalues,\n    masteritemtypelistvalues: state.masteritemtypenamevalue,\n    uomlistvalues: state.uomlistvalue,\n    locationlistvalue: state.locationlistvalue,\n    quotationlistvalues: state.quotationlistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  null\n)(QuotationForm);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport {\n  getMasterItemList,\n  getMasterItemTypes\n} from \"../../../../actions/Transaction\";\nimport { connect } from \"react-redux\";\nimport { getUomList } from \"../../../../actions/uom\";\nimport { getCustomerList } from \"../../../../actions/customerContact\";\nimport { addquotation } from \"../../../../actions/quotation\";\nimport { getquotation } from \"../../../../actions/quotation\";\nimport { updatequotation } from \"../../../../actions/quotation\";\n\nimport QuotationForm from \"./QuotationForm/QuotationForm\";\nimport CustomLoader from \"../../../../Components/loader/loader\";\n\nclass AddQuotation extends React.Component {\n\n  state = {\n    loading: false,\n    ID:this.props.match.params.id\n  }\n\n  componentDidMount() {\n\n    this.props.getCustomerList();\n    this.props.getMasterItemTypes();\n    this.props.getMasterItemList();\n    this.props.getUomList();\n    this.props.getquotation();\n  }\n\n  submit = data => {\n    this.dataHandler(true);\n    \n    if(this.props.match.params.id != undefined){\n      data['_id'] = this.props.match.params.id;\n      console.log(data)\n      return this.props\n      .updatequotation(data)\n      .then(data => {\n        this.dataHandler(false);\n        return data;\n      })\n      .catch(err => {\n        this.dataHandler(false);\n        throw err;\n      });\n    }\n    else{\n      \n      return this.props\n      .addquotation(data)\n      .then(data => {\n        this.dataHandler(false);\n        return data;\n      })\n      .catch(err => {\n        this.dataHandler(false);\n        throw err;\n      });\n    }\n  }\n\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n  render() {\n    const { loading,ID } = this.state;\n    return (\n      <div className=\"container mg-t-20\">\n        {loading ? <CustomLoader /> : null}\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to=\"/admin_dashboard\">Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n          <Link to='/crmlist'>CRM</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>Quotation</BreadcrumbItem>\n        </Breadcrumb>\n        <div>\n          <QuotationForm submit={this.submit} ID={ID}/>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  {\n    getMasterItemList,\n    getMasterItemTypes,\n    getUomList,\n    addquotation,\n    updatequotation,\n    getCustomerList,\n    getquotation\n  }\n)(AddQuotation);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem\n} from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { getquotation } from '../../../../actions/quotation';\nimport { Button, Alert } from 'reactstrap';\nimport DataTable from '../../../../Components/Table/DatatablePage';\nimport CustomLoader from '../../../../Components/loader/loader';\n\nimport {\n  getMasterItemList,\n  getMasterItemTypes\n} from \"../../../../actions/Transaction\";\nimport { getUomList } from \"../../../../actions/uom\";\nimport { getCustomerList } from \"../../../../actions/customerContact\";\n\nclass ViewQuotation extends React.Component {\n  state = {\n    count: 0,\n    loading: true,\n    quotationlistvalues: []\n  };\n  componentDidMount() {\n\n    this.props.getCustomerList();\n    this.props.getMasterItemTypes();\n    this.props.getMasterItemList();\n    this.props.getUomList();\n    this.props.getquotation();\n\n    let quotationlist = Object.values(this.props.quotationlistvalues);\n    quotationlist.sort(function(a, b){\n      return parseInt(b.quotationnumber) - parseInt(a.quotationnumber);\n    });\n  \n    const quotationlistvalues = quotationlist.map(quotationvalue => {\n      return {\n        quotationnumber: quotationvalue.quotationnumber,\n        customername: quotationvalue.customername,\n        customernumber: quotationvalue.customernumber,\n        customercontactnumber: quotationvalue.customercontactnumber,\n       \n        view: (\n\n          <div className=\"actionbuttons\">\n            <Button\n              color=\"primary\"\n              // style={{ 'fontSize': '0.8rem' }}\n              Label\n              onClick={() => {\n                this.updateButton(quotationvalue._id);\n              }}\n            >\n              Print\n          </Button>\n            <Button\n              color=\"primary\"\n              Label\n              // style={{ 'fontSize': '0.8rem' }}\n              onClick={() => {\n                this.updateQuotation(quotationvalue._id);\n              }}\n            >\n              Edit\n          </Button>\n          </div>\n        )\n      };\n    });\n    this.setState({ ...this.state, quotationlistvalues });\n    this.dataHandler(false);\n  }\n  componentWillReceiveProps(props) {\n    let quotationlist = Object.values(props.quotationlistvalues);\n    //quotationlist= quotationlist.sort((a, b) => b.quotationnumber.toLowerCase().localeCompare(a.quotationnumber.toLowerCase()));\n    quotationlist.sort(function(a, b){\n      return parseInt(b.quotationnumber) - parseInt(a.quotationnumber);\n    });\n    const quotationlistvalues = quotationlist.map(quotationvalue => {\n      return {\n        quotationnumber: quotationvalue.quotationnumber,\n        customername: quotationvalue.customername,\n        customernumber: quotationvalue.customernumber,\n        customercontactnumber: quotationvalue.customercontactnumber,\n       \n        view: (\n          <div className=\"actionbuttons\">\n            <Button\n              color=\"primary\"\n              style={{ 'fontSize': '0.8rem' }}\n              onClick={() => {\n                this.updateButton(quotationvalue._id);\n              }}\n            >\n              Print\n          </Button>\n            <Button\n              color=\"primary\"\n              style={{ 'fontSize': '0.8rem' }}\n              onClick={() => {\n                this.updateQuotation(quotationvalue._id);\n              }}\n            >\n              Edit\n          </Button>\n          </div>\n        )\n      };\n    });\n    this.setState({ ...this.state, quotationlistvalues });\n    this.dataHandler(false);\n  }\n\n  updateQuotation(id) {\n    let path = `/editquotation/${id}`;\n    this.props.history.push(path);\n  }\n\n  updateButton = id => {\n    let path = `/view_quotationpdf/${id}`;\n    this.props.history.push(path);\n  };\n\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n\n  render() {\n    const { loading, count, quotationlistvalues } = this.state;\n    const columnvalue = [\n      {\n        label: 'Quotation Number',\n        field: 'quotationnumber',\n        sort: 'asc',\n        width: 40\n      },\n      {\n        label: 'Customer Name',\n        field: 'customername',\n        sort: 'asc',\n        width: 40\n      },\n\n      {\n        label: 'Customer Number',\n        field: 'customernumber',\n        sort: 'asc',\n        width: 40\n      },\n    \n      {\n        label: 'Contact Number',\n        field: 'customercontactnumber',\n        sort: 'asc',\n        width: 40\n      },\n      {\n        label: 'Action',\n        field: 'view',\n        sort: 'asc',\n        width: 40\n      }\n    ];\n    return (\n      <div className='container mg-t-20'>\n       \n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to='/admin_dashboard'>Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to='/crmlist'>CRM</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>Quotation</BreadcrumbItem>\n        </Breadcrumb>\n        {loading ? <CustomLoader /> : null}\n        <div>\n          <DataTable\n            rowvalues={quotationlistvalues}\n            columnvalue={columnvalue}\n            className=\"quotationlist\"\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    quotationlistvalues: state.quotationlistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { \n    getMasterItemList,\n    getMasterItemTypes,\n    getUomList,\n    getCustomerList,\n    getquotation \n  }\n)(ViewQuotation);\n","import React from 'react';\nimport logo from '../../../../Images/logo.png';\nimport justDial from '../../../../Images/js.jpg';\nimport makeInIdia from '../../../../Images/mk.jpg';\nimport proud from '../../../../Images/proud.jpg';\nimport scaff from '../../../../Images/scaff.jpg';\nimport seal from '../../../../Images/seal.jpg';\nimport sign from '../../../../Images/sign.jpg';\n\nimport client from '../../../../Images/client.png';\n\nimport { connect } from 'react-redux';\nimport {\n  Document,\n  Page,\n  Text,\n  View,\n  StyleSheet,\n  Image\n} from '@react-pdf/renderer';\nimport {\n  TableCell,\n  Table,\n  TableHeader,\n  TableBody,\n  DataTableCell\n} from '@david.kucsai/react-pdf-table';\nimport styled from '@react-pdf/styled-components';\n\n// Create styles\nconst styles = StyleSheet.create({\n  textcenter: { textAlign: 'center' },\n  textright: { textAlign: 'right' },\n  textleft: { textAlign: 'left' },\n  paddingleft: { paddingLeft: 5 },\n  margin: {\n    margin: 5\n  },\n\n  pagepadding: {\n    padding: 35\n  },\n  section: {\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  headerfont: {\n    fontSize: 10,\n    fontWeight: 'bold',\n  },\n  headerfont5: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    padding: 5\n  },\n  tableHeader: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    // backgroundColor: '#548DD4',\n    // width: '100%',\n    // height: 40,\n    // color: 'white',\n    // textAlign: 'center',\n    // padding: 5\n  },\n  refno: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    marginBottom: 10\n  },\n  cutoff: {\n    // overflow: 'hidden',\n    // textOverflow: 'ellipsis',\n    // width:'150px',\n    //wordBreak: 'break-all'\n\n    'whiteSpace': 'normal',\n    'wordBreak': 'breakAll',\n\n  },\n\n  bgblue: {\n    backgroundColor: '#000'\n  },\n  padding5: {\n    paddingTop: 5,\n    paddingBottom: 5\n  },\n  fontbold: {\n    fontWeight: 'bolder'\n  },\n  headerfont2: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    textAlign: 'right',\n    padding: 3\n  },\n  headerwidth: {\n    width: 210,\n    padding: 20\n  },\n  headerwidthdate: {\n    width: 210,\n    paddingTop: 23,\n    fontSize: 10\n  },\n  smallicon: {\n    width: 25\n  },\n  headerwidthlogo: {\n    width: 350,\n    fontSize: 10\n  },\n  logo: {\n    width: 70\n  },\n  headerwidthAddress: {\n    width: 300,\n    fontSize: 10,\n    padding: 2,\n    textAlign: 'right'\n  },\n  refstyle: {\n    paddingBottom: 20,\n    fontSize: 10\n  },\n  headerpadding: {\n    padding: 20\n  },\n  flexgrow: {\n    flexGrow: 1\n  },\n  fontsize18: {\n    fontSize: 10\n  },\n  brandname: {\n    fontSize: 10,\n    fontWeight: 600,\n    paddingTop: 10,\n    paddingBottom: 10\n  },\n\n  padding1: {\n    paddingTop: 6\n  },\n\n  kindattend: {\n    paddingTop: 10,\n    paddingBottom: 10,\n    fontSize: 10\n  },\n  yourref: {\n    fontSize: 10,\n    paddingBottom: 10\n  },\n  padding: {\n    padding: 0\n  },\n  main: {\n    fontSize: 10\n  },\n  flexview: {\n    fontSize: 10,\n    display: 'flex'\n  },\n  tableheaderbgcolor: {\n    backgroundColor: '#000',\n    color: 'red',\n    background: '#000'\n  },\n  footerfixed: {\n    // position: 'absolute',\n    // bottom: 0,\n    width: '100%'\n  }\n});\n\nconst Small = ({ children }) => {\n  return (\n    <Text style={{ fontSize: 10 }}>{children}</Text>\n  )\n}\n\nconst SmallBold = ({ children }) => {\n  return (\n    <Text style={{ fontSize: 10, fontWeight: 'bold', color: 'black' }}>{children}</Text>\n  )\n}\n\nconst Header = ({ children }) => {\n  return (\n    <Text style={{ fontSize: 14, fontWeight: 'bold', color: 'black' }}>{children}</Text>\n  )\n}\n\nconst RedBold = ({ children }) => {\n  return (\n    <Text style={{ fontSize: 10, fontWeight: 'bold',color: 'red'}}>{children}</Text>\n  )\n}\n\nconst BlackBold = ({ children }) => {\n  return (\n    <Text style={{ fontSize: 10, fontWeight: 'bold',color: 'black'}}>{children}</Text>\n  )\n}\n\n// Create Document Component\n\nconst MyDocument = ({ quotationlistvalues, data_cond }) => {\n  console.log(quotationlistvalues)\n\n  let amountinwords = ''\n  let Rs = function (amount) {\n    var words = new Array();\n    words[0] = 'Zero'; words[1] = 'One'; words[2] = 'Two'; words[3] = 'Three'; words[4] = 'Four'; words[5] = 'Five'; words[6] = 'Six'; words[7] = 'Seven'; words[8] = 'Eight'; words[9] = 'Nine'; words[10] = 'Ten'; words[11] = 'Eleven'; words[12] = 'Twelve'; words[13] = 'Thirteen'; words[14] = 'Fourteen'; words[15] = 'Fifteen'; words[16] = 'Sixteen'; words[17] = 'Seventeen'; words[18] = 'Eighteen'; words[19] = 'Nineteen'; words[20] = 'Twenty'; words[30] = 'Thirty'; words[40] = 'Forty'; words[50] = 'Fifty'; words[60] = 'Sixty'; words[70] = 'Seventy'; words[80] = 'Eighty'; words[90] = 'Ninety'; var op;\n    amount = amount.toString();\n    var atemp = amount.split(\".\");\n    var number = atemp[0].split(\",\").join(\"\");\n    var n_length = number.length;\n    var words_string = \"\";\n    if (n_length <= 9) {\n      var n_array = new Array(0, 0, 0, 0, 0, 0, 0, 0, 0);\n      var received_n_array = new Array();\n      for (var i = 0; i < n_length; i++) {\n        received_n_array[i] = number.substr(i, 1);\n      }\n      for (var i = 9 - n_length, j = 0; i < 9; i++ , j++) {\n        n_array[i] = received_n_array[j];\n      }\n      for (var i = 0, j = 1; i < 9; i++ , j++) {\n        if (i == 0 || i == 2 || i == 4 || i == 7) {\n          if (n_array[i] == 1) {\n            n_array[j] = 10 + parseInt(n_array[j]);\n            n_array[i] = 0;\n          }\n        }\n      }\n      var value = \"\";\n      for (var i = 0; i < 9; i++) {\n        if (i == 0 || i == 2 || i == 4 || i == 7) {\n          value = n_array[i] * 10;\n        } else {\n          value = n_array[i];\n        }\n        if (value != 0) {\n          words_string += words[value] + \" \";\n        }\n        if ((i == 1 && value != 0) || (i == 0 && value != 0 && n_array[i + 1] == 0)) {\n          words_string += \"Crores \";\n        }\n        if ((i == 3 && value != 0) || (i == 2 && value != 0 && n_array[i + 1] == 0)) {\n          words_string += \"Lakhs \";\n        }\n        if ((i == 5 && value != 0) || (i == 4 && value != 0 && n_array[i + 1] == 0)) {\n          words_string += \"Thousand \";\n        }\n        if (i == 6 && value != 0 && (n_array[i + 1] != 0 && n_array[i + 2] != 0)) {\n          words_string += \"Hundred and \";\n        } else if (i == 6 && value != 0) {\n          words_string += \"Hundred \";\n        }\n      }\n      words_string = words_string.split(\" \").join(\" \");\n    }\n    return words_string;\n  }\n\n  let RsPaise = function (n) {\n    var op;\n    var nums = n.toString().split('.')\n    var whole = Rs(nums[0])\n    if (nums[1] == null) nums[1] = 0;\n    if (nums[1].length == 1) nums[1] = nums[1] + '0';\n    if (nums[1].length > 2) { nums[1] = nums[1].substring(2, nums[1].length - 1) }\n    if (nums.length == 2) {\n      if (nums[0] <= 9) { nums[0] = nums[0] * 10 } else { nums[0] = nums[0] };\n      var fraction = Rs(nums[1])\n      if (whole == '' && fraction == '') { op = 'Zero only'; }\n      if (whole == '' && fraction != '') { op = 'paise ' + fraction + ' only'; }\n      if (whole != '' && fraction == '') { op = 'INR: ' + whole + ' only'; }\n      if (whole != '' && fraction != '') { op = 'INR: ' + whole + 'and ' + fraction + ' paise only'; }\n      amountinwords = op\n    }\n  }\n\n\n\n\n  const data = quotationlistvalues.addeditemlist;\n  let totaleachitem = 0;\n  console.log('data');\n  console.log(data);\n  if (data.length > 0) {\n    data.map((item) => {\n      totaleachitem = totaleachitem + parseFloat(item.totalcost)\n    })\n    totaleachitem = totaleachitem.toFixed(2)\n  }\n  // const data = [\n  //   {\n  //     slno: \"1\",\n  //     itemname: \"Pipe 40 NB X 2.6 mm thk \",\n  //     quantity: \"2\",\n  //     itemdiscount: 25,\n  //     costperunit: \"145.83\",\n  //     totalcost: \"100\"\n  //   },\n  //   {\n  //     slno: \"2\",\n  //     itemname: \"Pipe 40 NB X 2.6 mm thk \",\n  //     quantity: \"2\",\n  //     itemdiscount: 25,\n  //     costperunit: \"145.83\",\n  //     totalcost: \"100\"\n  //   },\n  //   {\n  //     slno: \"1\",\n  //     itemname: \"Pipe 40 NB X 2.6 mm thk \",\n  //     quantity: \"2\",\n  //     itemdiscount: 25,\n  //     costperunit: \"145.83\",\n  //     totalcost: \"100\"\n  //   },\n  //   {\n  //     slno: \"2\",\n  //     itemname: \"Pipe 40 NB X 2.6 mm thk \",\n  //     quantity: \"2\",\n  //     itemdiscount: 25,\n  //     costperunit: \"145.83\",\n  //     totalcost: \"100\"\n  //   },\n  //   {\n  //     slno: \"1\",\n  //     itemname: \"Pipe 40 NB X 2.6 mm thk \",\n  //     quantity: \"2\",\n  //     itemdiscount: 25,\n  //     costperunit: \"145.83\",\n  //     totalcost: \"100\"\n  //   },\n  //   {\n  //     slno: \"2\",\n  //     itemname: \"Pipe 40 NB X 2.6 mm thk \",\n  //     quantity: \"2\",\n  //     itemdiscount: 25,\n  //     costperunit: \"145.83\",\n  //     totalcost: \"100\"\n  //   }\n  // ];\n  console.log(quotationlistvalues)\n\n  let customeraddress = quotationlistvalues.customeraddress ? quotationlistvalues.customeraddress : ''\n  let loadingcharges = quotationlistvalues.loadingcharge != undefined\n    && quotationlistvalues.loadingcharge != null ?\n    parseFloat(quotationlistvalues.loadingcharge) : 0.00\n\n  let ws = quotationlistvalues.ws != undefined\n    && quotationlistvalues.ws != null ?\n    parseFloat(quotationlistvalues.ws) : 0.00\n\n  let transitinsurance = quotationlistvalues.transitinsurance != undefined\n    && quotationlistvalues.transitinsurance != null ?\n    parseFloat(quotationlistvalues.transitinsurance) : 0.00\n\n    \n\n  let tcharge = quotationlistvalues.tcharge != undefined\n    && quotationlistvalues.tcharge != null ?\n    parseFloat(quotationlistvalues.tcharge) : 0.00\n\n\n  loadingcharges = loadingcharges.toFixed(2)\n  let tchargegst = 0.00\n  ws = ws.toFixed(2)\n  transitinsurance = transitinsurance.toFixed(2)\n  tcharge = tcharge.toFixed(2)\n  let subtotal = parseFloat(totaleachitem) + parseFloat(loadingcharges) + parseFloat(ws) + parseFloat(transitinsurance)\n  subtotal = subtotal.toFixed(2)\n  let subtotalgst = parseFloat(subtotal * 0.18)\n  subtotalgst = subtotalgst.toFixed(2)\n  let totalincludegst = parseFloat(subtotal) + parseFloat(subtotalgst)\n  totalincludegst = totalincludegst.toFixed(2)\n\n  let transportationgstper=0,transportationgst;\n  transportationgst = quotationlistvalues.transportationgst && quotationlistvalues.transportationgst != '' ? parseFloat(quotationlistvalues.transportationgst) : 0\n  transportationgstper = transportationgst\n  transportationgst = transportationgst / 100;\n\n  tchargegst = tcharge * transportationgst\n  tchargegst = tchargegst.toFixed(2)\n  let grandtotal = parseFloat(tcharge) + parseFloat(totalincludegst) + parseFloat(tchargegst)\n  grandtotal = grandtotal.toFixed(2)\n\n  RsPaise(grandtotal)\n\n  let scheduledays = quotationlistvalues.scheduledays ? quotationlistvalues.scheduledays + ' days' : ''\n\n  const totalrs = quotationlistvalues.totalvalue\n    ? quotationlistvalues.totalvalue\n    : '';\n  const tax = quotationlistvalues.tax ? quotationlistvalues.tax : '';\n  const taxpercentage = quotationlistvalues.tax\n    ? quotationlistvalues.tax / 100\n    : '';\n  //const grandtotal = taxpercentage * totalrs;\n  //   const selectecontactlist = quotationlistvalues.selectedcontactlist[0]\n  //     ? quotationlistvalues.selectedcontactlist[0].suppliercontactname\n  //     : \"\";\n  const cond_data = data_cond;\n  const tableComponentTwo = [];\n  for (let i = 0; i < data.length; i++) {\n    if (data[i] && data[i + 1]) {\n      tableComponentTwo.push([data[i], data[i + 1]]);\n    } else {\n      tableComponentTwo.push([data[i]]);\n    }\n    ++i;\n  }\n  const refno = 'Quotation no:PSPL/Quote/' + quotationlistvalues.quotationnumber + '/2020-21'\n  const datalength = tableComponentTwo.length - 1;\n  const tableComponent = tableComponentTwo.map((data, i) => {\n    if (i >= 1 && i === datalength) {\n\n      return (\n        <Page size='A4' style={styles.pagepadding} wrap key={i}>\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={data}\n          >\n            <TableHeader\n              textAlign={'center'}\n              style={{ backgroundColor: 'tomato' }}\n            >\n              <TableCell weighting={0.08} style={{ backgroundColor: '#000' }}>\n                <Text style={styles.headerfont}>SL No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont}>Particular</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Weight Each kgs(+/-5%)</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Rate/{'\\n'}Each</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Dist %</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>\n                  After Dist Rate/Each{'\\n'}\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Qty</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Total</Text>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell\n                weighting={0.08}\n                style={styles.padding}\n                getContent={r => r.slno}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.6}\n                getContent={r => {\n                  return (\n                    <View>\n                      <Text>{r.itemname + '\\n'}</Text>\n                      <Text>{'\\n'}</Text>\n                      <Image\n                        src={`${process.env.REACT_APP_IMAGE_BASE_URL}/${r.itemimage}`}\n                      />\n                      <Text>{'\\n'}</Text>\n                    </View>\n                  );\n                }}\n              />\n              <DataTableCell\n                weighting={0.2}\n                style={styles.padding}\n                getContent={r => {\n                  return r.weighteach;\n                }}\n              />\n              <DataTableCell style={styles.padding} weighting={0.2} getContent={r => r.costperunit} />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.2}\n                getContent={r => r.itemdiscountamount.toString()}\n              />\n              <DataTableCell style={styles.padding} weighting={0.2} getContent={r => r.quantity} />\n              <DataTableCell style={styles.padding} weighting={0.2} getContent={r => r.totalcost} />\n            </TableBody>\n          </Table>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1.087}>\n                <Text style={styles.headerfont2}>Total</Text>\n              </TableCell>\n              <TableCell weighting={0.13}>\n                <Text style={{ textAlign: 'center' }}>{totalrs}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1.087}>\n                <Text style={styles.headerfont2}>GST %</Text>\n              </TableCell>\n              <TableCell weighting={0.13}>\n                <Text style={{ textAlign: 'center' }}>{tax}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1.087}>\n                <Text style={styles.headerfont2}>Grand Total</Text>\n              </TableCell>\n              <TableCell weighting={0.13}>\n                <Text style={{ textAlign: 'center' }}>\n                  {grandtotal}\n                </Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n        </Page>\n      );\n    } else if (i >= 1) {\n      return (\n        <Page size='A4' style={styles.pagepadding} wrap key={i}>\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={data}\n          >\n            <TableHeader\n              textAlign={'center'}\n              style={{ backgroundColor: 'tomato' }}\n            >\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Text style={styles.headerfont}>SL No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont}>Particular</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Weight Each kgs(+/-5%)</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Rate/{'\\n'}Each</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Dist %</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>\n                  After Dist Rate/Each{'\\n'}\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Qty</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Total</Text>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell\n                weighting={0.08}\n                style={styles.padding}\n                getContent={r => r.slno}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.6}\n                getContent={r => {\n                  return (\n                    <View>\n                      <Text>{r.itemname + '\\n'}</Text>\n                      <Text>{'\\n'}</Text>\n                      <Image\n                        src={`${process.env.REACT_APP_IMAGE_BASE_URL}/${r.itemimage}`}\n                      />\n                      <Text>{'\\n'}</Text>\n                    </View>\n                  );\n                }}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.weighteach} />\n              <DataTableCell weighting={0.2} getContent={r => r.costperunit} />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscountamount.toString()}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.quantity} />\n              <DataTableCell weighting={0.2} getContent={r => r.totalcost} />\n            </TableBody>\n          </Table>\n        </Page>\n      );\n    } else if (i < 1 && i === datalength) {\n      return (\n        <View>\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={data}\n            key={i}\n          >\n            <TableHeader\n              textAlign={'center'}\n              style={{ backgroundColor: 'tomato' }}\n            >\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Text style={styles.headerfont}>SL No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont}>Particular</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Weight Each kgs(+/-3%)</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Rate/{'\\n'}Each</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Dist %</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>\n                  After Dist Rate/Each{'\\n'}\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Qty</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Total</Text>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell\n                weighting={0.08}\n                style={styles.padding}\n                getContent={r => r.slno}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.6}\n                getContent={r => {\n                  return (\n                    <View>\n                      <Text>{r.itemname + '\\n'}</Text>\n                      <Text>{'\\n'}</Text>\n                      <Image\n                        src={`${process.env.REACT_APP_IMAGE_BASE_URL}/${r.itemimage}`}\n                      />\n                      <Text>{'\\n'}</Text>\n                    </View>\n                  );\n                }}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.weighteach} />\n              <DataTableCell weighting={0.2} getContent={r => r.costperunit} />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscountamount.toString()}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.quantity} />\n              <DataTableCell weighting={0.2} getContent={r => r.totalcost} />\n            </TableBody>\n          </Table>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1.087}>\n                <Text style={styles.headerfont2}>Total</Text>\n              </TableCell>\n              <TableCell weighting={0.13}>\n                <Text style={{ textAlign: 'center' }}>{totalrs}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1.087}>\n                <Text style={styles.headerfont2}>GST %</Text>\n              </TableCell>\n              <TableCell weighting={0.13}>\n                <Text style={{ textAlign: 'center' }}>{tax}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1.087}>\n                <Text style={styles.headerfont2}>Grand Total</Text>\n              </TableCell>\n              <TableCell weighting={0.13}>\n                <Text style={{ textAlign: 'center' }}>\n                  {grandtotal}\n                </Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n        </View>\n      );\n    } else {\n      return (\n        <View>\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={data}\n            key={i}\n          >\n            <TableHeader textAlign={'center'} style={styles.tableheaderbgcolor}>\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Text style={styles.headerfont}>SL No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont}>Particular</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Weight Each kgs(+/-3%)</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Rate/{'\\n'}Each</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Dist %</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>\n                  After Dist Rate/Each{'\\n'}\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Qty</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Total</Text>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell\n                weighting={0.08}\n                style={styles.padding}\n                getContent={r => r.slno}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.6}\n                getContent={r => {\n                  return (\n                    <View>\n                      <Text>{r.itemname + '\\n'}</Text>\n                      <Text>{'\\n'}</Text>\n                      <Image\n                        src={`${process.env.REACT_APP_IMAGE_BASE_URL}/${r.itemimage}`}\n                      />\n                      <Text>{'\\n'}</Text>\n                    </View>\n                  );\n                }}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.weighteach} />\n              <DataTableCell weighting={0.2} getContent={r => r.costperunit} />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscountamount.toString()}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.quantity} />\n              <DataTableCell weighting={0.2} getContent={r => r.totalcost} />\n            </TableBody>\n          </Table>\n        </View>\n      );\n    }\n  });\n\n  return (\n    <Document>\n      <Page size='A4' style={styles.pagepadding} wrap>\n\n        <View style={styles.section}>\n          <Image style={{ marginLeft: -15 }} src={logo} />\n          <Text style={styles.headerwidthAddress}>\n            <SmallBold>Office & Works</SmallBold>{'\\n'}\n            Plot no.40 & 41 (corner) Road, no. 5,{'\\n'}\n            KIADB Obadenahalli industrial Area,{'\\n'}\n            3rd phase Doddaballapura,{'\\n'}\n            Bangalore Rural District.-561203{'\\n'}\n            Karnataka, INDIA{'\\n'}\n            GST No. 29AAGCP4018E1ZJ{'\\n'}\n            Mob: +91 9900069150{'\\n'}\n            Email id: info@pondhan.com{'\\n'}\n            Visit Us: www.pondhan.com{'\\n'}\n          </Text>\n        </View>\n\n        <Text style={{ fontSize: 10 }}>\n          {'\\n'}{'\\n'}\n          <SmallBold>Dear sir / Madam,</SmallBold>{'\\n'}{'\\n'}\n          <SmallBold>Thank you for your valuable enquiry & giving us an opportunity to help you <RedBold>“BUILD BETTER”.</RedBold></SmallBold>{'\\n'}\n          <SmallBold>We are the leading manufacturing company in the field of <RedBold>“SCAFFOLDING & FORMWORK SYSTEM”</RedBold></SmallBold>{'\\n'}{'\\n'}\n          We’re honored to present ourselves to you, Please click www.pondhan.com{'\\n'}{'\\n'}\n          Our Product catalog & detailed specifications will help you more to understand our Products.{'\\n'}{'\\n'}\n          We trust you will find our offer in line with your requirements.{'\\n'}{'\\n'}\n          Our goal is to “giving you pretty reasonable price with good / high quality & get reasonable profit”{'\\n'}{'\\n'}\n          In case you need any further information / queries, please feel free to get in touch with us.{'\\n'}{'\\n'}\n          Looking forward to your valuable support with an assurance of our best services at all times.{'\\n'}{'\\n'}\n          We look forward to an opportunity to serve you & your quick reply will be highly appreciated!{'\\n'}{'\\n'}{'\\n'}\n          Thanking You,{'\\n'}\n          With Regards,{'\\n'}\n          <SmallBold>For M/s Pondhan Scaffolding Pvt Ltd</SmallBold>\n          {'\\n'}\n        </Text>\n\n\n        <View style={{ flexDirection: 'row' }}>\n\n          <View style={{ flex: 1, flexDirection: 'row', justifyContent: 'center', alignItems: 'bottom' }}>\n            <Image style={{ width: 70, height: 70 }} src={sign} />\n            <Image style={{ width: 70, height: 70 }} src={seal} />\n          </View>\n          <View style={{ flex: 1, flexDirection: 'row', justifyContent: 'center' }}>\n            <Image style={{ width: 130, height: 130 }} src={proud} />\n          </View>\n          <View style={{ flex: 1, flexDirection: 'row', justifyContent: 'center' }}>\n            <Image style={{ width: 200, height: 120 }} src={makeInIdia} />\n          </View>\n        </View>\n\n        <View>\n          <SmallBold>A.B.Ponnappa.</SmallBold>\n          <Small>Managing Director</Small>\n        </View>\n\n        <View style={{ flexDirection: 'row' }}>\n          <View style={{ flex: 1, flexDirection: 'row', justifyContent: 'center' }}>\n            <Image style={{ flex: 1, height: 150, margin: 16 }} src={justDial} />\n          </View>\n          <View style={{ flex: 1, flexDirection: 'row', justifyContent: 'center' }}>\n            <Image style={{ flex: 1, height: 150, margin: 16 }} src={scaff} />\n          </View>\n        </View>\n\n\n        <View style={[styles.section]}>\n          <Image style={{ marginLeft: -15 }} src={logo} />\n\n          <Text style={styles.headerwidthAddress}>\n          <SmallBold>Office & Works</SmallBold>{'\\n'}\n            Plot no.40 & 41 (corner) Road, no. 5,{'\\n'}\n            KIADB Obadenahalli industrial Area,{'\\n'}\n            3rd phase Doddaballapura,{'\\n'}\n            Bangalore Rural District.-561203{'\\n'}\n            Karnataka, INDIA{'\\n'}\n            GST No. 29AAGCP4018E1ZJ{'\\n'}\n            Mob: +91 9900069150{'\\n'}\n            Email id: info@pondhan.com{'\\n'}\n            Visit Us: www.pondhan.com{'\\n'}\n          </Text>\n          \n         \n        </View>\n        <View style={[styles.section]}>\n          <Text style={styles.headerwidth}></Text>\n          <Text style={styles.headerwidth}>\n            <Header>QUOTATION</Header>\n          </Text>\n          <Text style={styles.headerwidthdate}>\n            Date:{quotationlistvalues.requestdeliverydate}\n          </Text>\n        </View>\n        <View>\n          <Text style={styles.refno}>{refno}</Text>\n        </View>\n        <View style={styles.fontsize18}>\n          <Text>To,</Text>\n          <Text>Mr/Miss. {quotationlistvalues.customername}</Text>\n          <Text\n           style={[styles.fontsize18, {\n            width: 180,\n            wordWrap: 'break-word'\n          }]}\n          >{quotationlistvalues.customeraddress}</Text>\n          \n        </View>\n\n\n        <View style={styles.kindattend}>\n          <Text>Mob:{quotationlistvalues.customercontactnumber}</Text>\n        </View>\n\n\n        <View style={styles.main}>\n          <Text>Dear Sir/Madam,</Text>\n        </View>\n        <View style={styles.main}>\n          <Text style={styles.padding5}>\n            As per your inquiry for MS Scaffolding material, we are pleased to inform you the rates as mentioned below\n          </Text>\n        </View>\n        <Table\n          style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n          data={data}\n        >\n          <TableHeader\n            textAlign={'center'}\n            style={{ background: '#000' }}\n          >\n            <TableCell weighting={0.08}>\n              <Text style={[styles.headerfont, {}]}>SL No</Text>\n            </TableCell>\n            <TableCell weighting={0.6}>\n              <Text style={styles.tableHeader}>Particular</Text>\n            </TableCell>\n            <TableCell weighting={0.2}>\n              <Text style={styles.tableHeader}>Weight Each kgs(+/-5%)</Text>\n            </TableCell>\n            <TableCell weighting={0.2}>\n              <Text style={styles.tableHeader}>Rate/{'\\n'}Each</Text>\n            </TableCell>\n            <TableCell weighting={0.2}>\n              <Text style={styles.tableHeader}>Dist %</Text>\n            </TableCell>\n            <TableCell weighting={0.2}>\n              <Text style={styles.tableHeader}>\n                After Dist Rate/Each{'\\n'}\n              </Text>\n            </TableCell>\n            <TableCell weighting={0.2}>\n              <Text style={styles.tableHeader}>Qty</Text>\n            </TableCell>\n            <TableCell weighting={0.2}>\n              <Text style={styles.tableHeader}>Total</Text>\n            </TableCell>\n          </TableHeader>\n          <TableBody textAlign={'center'}>\n            <DataTableCell\n              weighting={0.08}\n              style={styles.padding}\n              getContent={r => r.slno}\n            />\n            <DataTableCell\n              style={[styles.padding, { width: 150, wordWrap: 'break-word' }]}\n              weighting={0.6}\n              getContent={r => {\n                return (\n                  <View>\n                    <Text style={{ fontSize: 11 }}><Small\n                    >{r.itemname}</Small>{'\\n'}</Text>\n                    {r.itemimage && r.itemimage !== null ? (<View><Text>{'\\n'}</Text>\n                      <Image\n                        src={`${process.env.REACT_APP_IMAGE_BASE_URL}/${r.itemimage}`}\n                      />\n                      <Text>{'\\n'}</Text></View>) : (<View></View>)}\n\n                  </View>\n                );\n              }}\n            />\n            <DataTableCell style={styles.padding} weighting={0.2} getContent={r => <Small>{r.weighteach}</Small>} />\n            <DataTableCell style={styles.padding} weighting={0.2} getContent={r => <Small>{r.costperunit}</Small>} />\n            <DataTableCell\n              weighting={0.2}\n              style={styles.padding}\n              getContent={r => <Small>{r.itemdiscount.toString()}</Small>}\n            />\n            <DataTableCell\n              weighting={0.2}\n              style={styles.padding}\n              getContent={r => <BlackBold>{r.itemdiscountamount.toString()}</BlackBold>}\n            />\n            <DataTableCell style={styles.padding} weighting={0.2} getContent={r => <Small>{r.quantity}</Small>} />\n            <DataTableCell style={styles.padding} weighting={0.2} getContent={r => <Small>{r.totalcost}</Small>} />\n          </TableBody>\n        </Table>\n\n        <Table style={styles.section}>\n          <TableHeader>\n            <TableCell weighting={1.087}>\n              <Text style={styles.headerfont2}>Total</Text>\n            </TableCell>\n            <TableCell weighting={0.13}>\n              <Text style={{ textAlign: 'center', fontSize: 11 }}>{totaleachitem}</Text>\n            </TableCell>\n          </TableHeader>\n        </Table>\n\n        <Table style={styles.section}>\n          <TableHeader>\n            <TableCell weighting={1.087}>\n              <Text style={styles.headerfont2}>Loading and Handling Charges per ton Rs185.00 x (No of tons)</Text>\n            </TableCell>\n            <TableCell weighting={0.13}>\n              <Text style={{ textAlign: 'center', fontSize: 11 }}>{loadingcharges}</Text>\n            </TableCell>\n          </TableHeader>\n        </Table>\n\n        <Table style={styles.section}>\n          <TableHeader>\n            <TableCell weighting={1.087}>\n              <Text style={styles.headerfont2}>W.S</Text>\n            </TableCell>\n            <TableCell weighting={0.13}>\n              <Text style={[styles.headerfont, { textAlign: 'center' }]}>{ws}</Text>\n            </TableCell>\n          </TableHeader>\n        </Table>\n\n        <Table style={styles.section}>\n          <TableHeader>\n            <TableCell weighting={1.087}>\n              <Text style={styles.headerfont2}> Transit Insurance</Text>\n            </TableCell>\n            <TableCell weighting={0.13}>\n              <Text style={[styles.headerfont, { textAlign: 'center' }]}>{transitinsurance}</Text>\n            </TableCell>\n          </TableHeader>\n        </Table>\n\n        <Table style={styles.section}>\n          <TableHeader>\n            <TableCell weighting={1.087}>\n              <Text style={styles.headerfont2}>Sub Total</Text>\n            </TableCell>\n            <TableCell weighting={0.13}>\n              <Text style={[styles.headerfont, { textAlign: 'center' }]}>{subtotal}</Text>\n            </TableCell>\n          </TableHeader>\n        </Table>\n\n        <Table style={styles.section}>\n          <TableHeader>\n            <TableCell weighting={1.087}>\n              <Text style={styles.headerfont2}>GST@18%</Text>\n            </TableCell>\n            <TableCell weighting={0.13}>\n              <Text style={[styles.headerfont, { textAlign: 'center' }]}>{subtotalgst}</Text>\n            </TableCell>\n          </TableHeader>\n        </Table>\n\n\n        <Table style={styles.section}>\n          <TableHeader>\n            <TableCell weighting={1.087}>\n              <Text style={styles.headerfont2}>Total</Text>\n            </TableCell>\n            <TableCell weighting={0.13}>\n              <Text style={[styles.headerfont, { textAlign: 'center' }]}>{totalincludegst}</Text>\n            </TableCell>\n          </TableHeader>\n        </Table>\n\n\n        <Table style={styles.section}>\n          <TableHeader>\n            <TableCell weighting={1.087}>\n              <Text style={styles.headerfont2}>Transportation Charges</Text>\n            </TableCell>\n            <TableCell weighting={0.13}>\n              <Text style={[styles.headerfont, { textAlign: 'center' }]}>{tcharge}</Text>\n            </TableCell>\n          </TableHeader>\n        </Table>\n\n\n        <Table style={styles.section}>\n          <TableHeader>\n            <TableCell weighting={1.087}>\n              <Text style={styles.headerfont2}>GST@{transportationgstper}%</Text>\n            </TableCell>\n            <TableCell weighting={0.13}>\n              <Text style={[styles.headerfont, { textAlign: 'center' }]}>{tchargegst}</Text>\n            </TableCell>\n          </TableHeader>\n        </Table>\n\n\n\n        <Table style={styles.section}>\n          <TableHeader>\n            <TableCell weighting={1.087}>\n              <Text style={styles.headerfont2}>Grand Total</Text>\n            </TableCell>\n            <TableCell weighting={0.13}>\n              <Text style={[styles.headerfont, { textAlign: 'center' }]}>\n                {grandtotal}\n              </Text>\n            </TableCell>\n          </TableHeader>\n        </Table>\n\n        <Table style={styles.section}>\n          <TableHeader>\n        \n            <TableCell weighting={1}>\n              <Text style={[styles.headerfont5, { textAlign: 'right' }]}>\n              {amountinwords}\n              </Text>\n            </TableCell>\n          </TableHeader>\n        </Table>\n{/* \n        <Text style={[styles.headerfont, { textAlign: 'right' }]}>\n        {'\\n'} \n            {amountinwords}\n        </Text> */}\n\n       \n\n        {/* <View style={styles.footerfixed}>\n          <Image src={client} />\n        </View> */}\n      </Page>\n\n      <Page size='A4' style={styles.pagepadding}>\n        <View style={styles.section}>\n          <Image style={{ marginLeft: -15 }} src={logo} />\n          <Text style={styles.headerwidthAddress}>\n            Plot no.40 & 41 (corner) Road, no. 5,{'\\n'}\n            KIADB Obadenahalli industrial Area,{'\\n'}\n            3rd phase Doddaballapura,{'\\n'}\n            Bangalore Rural District.-561203{'\\n'}\n            Karnataka, INDIA{'\\n'}\n            GST No. 29AAGCP4018E1ZJ{'\\n'}\n            Mob: +91 9900069150{'\\n'}\n            Email id: info@pondhan.com{'\\n'}\n            Visit Us: www.pondhan.com{'\\n'}\n          </Text>\n        </View>\n\n        <View style={[styles.main]}>\n          <Text>We hope the rates quoted are reasonable and looking forward for your kind orders.</Text>\n        </View>\n\n        <View style={[styles.main]}>\n          <Text style={styles.padding1} >Thanking you </Text>\n          <Text style={styles.padding1}>Yours truly,</Text>\n          <Text style={styles.brandname}>For PONDHAN SCAFFOLING PVT LTD</Text>\n        </View>\n\n\n\n        <View style={{ flexDirection: 'row', justifyContent: 'flex-start' }}>\n          <Image style={{ width: 70, height: 70 }} src={sign} />\n          <Image style={{ width: 70, height: 70 }} src={seal} />\n        </View>\n\n        <View>\n          {/* <Image src={seal} style={styles.smallicon} />\n          <Image src={sign} style={styles.smallicon} /> */}\n          <Text style={styles.brandname}>A.B. Ponnappa {'\\n'}\n            Managing Director\n          </Text>\n          \n        </View>\n\n        <View style={[styles.main]}>\n          <Text style={styles.brandname} > Note:</Text>\n          \n          <Text style={styles.padding1}>Delivery Schedule: {scheduledays}</Text>\n          <Text style={styles.padding1}>1, 100% Payment Along With Purchase Order.</Text>\n          <Text style={styles.padding1}>2, Validity: All prices are Current Ruling.</Text>\n          <Text style={styles.padding1}>3, Transportation Charges extra as actual.</Text>\n\n        </View>\n\n        <View style={[styles.main]}>\n          <Text style={styles.brandname} > Bank Details:-</Text>\n          <Text style={styles.padding1}>Name: Pondhan scaffolding Pvt ltd.</Text>\n          <Text style={styles.padding1}>Bank: Vijaya Bank Branch: Byatarayanapura</Text>\n          <Text style={styles.padding1}>City: Bangalore-560092</Text>\n          <Text style={styles.padding1}>A/C No: 104006211000006.</Text>\n          <Text style={styles.padding1}>IFSC: Code: VIJB-0001040.</Text>\n        </View>\n\n        <View>\n            <Text\n                 style={[styles.main, { color: 'red' }]}\n                >\n                 {'\\n'} {'\\n'} \n                 Note: Any legal matter should be under Bengaluru Jurisdiction </Text>\n        </View>\n\n        <View style={[styles.footerfixed]}>\n          <Image src={client} />\n        </View>\n\n      </Page>\n    </Document>\n  );\n};\n\nexport default MyDocument;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport ReactPDF from \"@react-pdf/renderer\";\nimport moment from \"moment\";\nimport { PDFViewer } from \"@react-pdf/renderer\";\nimport { getquotation } from \"../../../../actions/quotation\";\nimport MyDocument from \"./Component\";\nimport logo from \"../../../../Images/logo.png\";\nimport \"./ViewQuotation.scss\";\n\nclass ViewPurchaseOrderPdf extends React.Component {\n  state = {\n    quotationlistvalues: {},\n    status: false\n  };\n  componentDidMount() {\n    this.props.getquotation();\n\n    const quotationid = this.props.match.params.id;\n    const quotationlistvalues = this.props.quotationlistvalues[quotationid];\n    quotationlistvalues.requestdeliverydate = moment(\n      quotationlistvalues.date\n    ).format(\"DD MMM, YYYY\");\n    quotationlistvalues.addeditemlist = quotationlistvalues.addeditemlist.map(\n      (itemlist, i) => {\n        console.log(itemlist)\n        itemlist.itemdiscountamount = parseFloat(itemlist.itemdiscountamount)\n        itemlist.itemdiscountamount = itemlist.itemdiscountamount.toFixed(2)\n        itemlist.quantity = parseInt(itemlist.quantity)\n        itemlist.totalcost = itemlist.itemdiscountamount != '0.00' ? \n        parseFloat(itemlist.itemdiscountamount) * parseInt(itemlist.quantity) : \n        parseFloat(itemlist.totalcost) * parseInt(itemlist.quantity) \n  \n        itemlist.totalcost = parseFloat(itemlist.totalcost)\n        itemlist.totalcost = itemlist.totalcost.toFixed(2)\n\n        return {\n          slno: (i + 1).toString(),\n          itemname: itemlist.itemdescription ? itemlist.itemdescription : \"\",\n          weighteach: itemlist.id.masteritemunitwt && itemlist.id.masteritemunitwt != \"undefined\" && \n          itemlist.id.masteritemunitwt != \"null\"\n            ? itemlist.id.masteritemunitwt\n            : \"-\",\n          itemimage: itemlist.id.masteritemimage\n            ? itemlist.id.masteritemimage\n            : \"\",\n          quantity: itemlist.quantity ? itemlist.quantity.toString() : \"\",\n          itemdiscount: itemlist.itemdiscount ? \n          itemlist.itemdiscount.toString()\n            : \"0\",\n          costperunit: itemlist.costperunit\n            ? itemlist.costperunit.toString()\n            : \"\",\n            itemdiscountamount:itemlist.itemdiscountamount\n            ? itemlist.itemdiscountamount\n            : \"\",\n          totalcost: itemlist.totalcost\n            ? itemlist.totalcost\n            : \"\"\n        };\n      }\n    );\n    const customerid = quotationlistvalues.customerid;\n    const customernumber = quotationlistvalues.customernumber;\n    const customername = quotationlistvalues.customername;\n    console.log(\"--COMPONENTDIDMOUNT--\");\n    console.log(quotationlistvalues);\n    setTimeout(() => {\n      this.setState({\n        ...this.state.purchaseorderlistvalues,\n        quotationlistvalues,\n        status: true\n      });\n    }, 2000);\n    this.dynamicClick();\n  }\n  dynamicClick() {\n    if (document.getElementsByClassName(\"pdf-class\")) {\n      if (\n        document.getElementsByClassName(\"pdf-class\")[0].children.length <= 1\n      ) {\n        setTimeout(() => {\n          this.dynamicClick();\n        }, 7000);\n      } else if (\n        document.getElementsByClassName(\"pdf-class\")[0].children.length > 1\n      ) {\n        this.setState({\n          link: document.getElementsByClassName(\"pdf-class\")[0].children[1].src\n          // status : undefined,\n        });\n\n        setTimeout(() => {\n          document.getElementById(\"D1\").click();\n          this.props.history.push(\"/quotationlist\");\n        }, 200);\n    \n      }\n    } else {\n    }\n  }\n\n\n\n  render() {\n    const data_cond = [\n      {\n        slno: \"1\",\n        title: \"Invoices\",\n        value: \"2 copies Invoices (original & duplicate)\"\n      },\n      {\n        slno: \"2\",\n        title: \"Tax & Duty\",\n        value: \"Included\"\n      },\n      {\n        slno: \"3\",\n        title: \"Payment Schedule\",\n        value: \"15 days from the date of delivery\"\n      },\n      {\n        slno: \"4\",\n        title: \"Delivery Schedule\",\n        value: \"Immediately\"\n      },\n      {\n        slno: \"5\",\n        title: \"Billing address & GST No\",\n        value:\n          \"M/s Pondhan Scaffolding Pvt Ltd \\n Plot no. 40/41, Road no.5, Obedanahalli,\"\n      },\n      {\n        slno: \"6\",\n        title: \"Delivery Address\",\n        value: \"M/s Pondhan Scaffolding Pvt Ltd\"\n      }\n    ];\n    const { status, quotationlistvalues,link } = this.state;\n    return (\n      <div>\n        <div className=\"pdf-class\">\n        Downloading file.Please wait.\n          <a href={link} download id=\"D1\"></a>\n          {status && (\n            <PDFViewer>\n              <MyDocument\n                \n                quotationlistvalues={this.state.quotationlistvalues}\n                data_cond={data_cond}\n                logo={logo}\n              />\n            </PDFViewer>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\nfunction mapStateToProps(state) {\n  return {\n    quotationlistvalues: state.quotationlistvalues\n  };\n}\nexport default connect(\n  mapStateToProps,\n  { getquotation }\n)(ViewPurchaseOrderPdf);\n","import React from \"react\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport { Button, Label, Alert } from \"reactstrap\";\nimport { Card, CardBody, CardHeader, Row, Col } from \"reactstrap\";\n\nclass SupplierContactForm extends React.Component {\n  state = {\n    data: {\n      suppliercontactname: \"\",\n      suppliercontactnumber: \"\"\n    },\n    errors: {},\n    loading: false,\n    success: false\n  };\n  onChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n  handleValidSubmit = () => {\n    console.log(this.state.data);\n    this.setState({ loading: true });\n    this.props\n      .submit(this.state.data)\n      .then(() => {\n        this.setState({ loading: false, errors: {}, success: true });\n        this.myFormRef.reset();\n      })\n      .catch(err => {\n        this.setState({ errors: err.response.data.errors, loading: false });\n      });\n  };\n\n  render() {\n    const { data, errors, loading, success } = this.state;\n    return (\n      <div>\n        <div>\n          {!!success ? (\n            <Alert color=\"info\">Supplier Contact is added Successfully</Alert>\n          ) : null}\n          {!!errors.suppliercontactnumber ? (\n            <Alert color=\"danger\">Supplier Contact Number already exist</Alert>\n          ) : null}\n          {!!errors.username ? (\n            <Alert color=\"danger\">{errors.username}</Alert>\n          ) : null}\n        </div>\n        <div>\n          <AvForm\n            onValidSubmit={this.handleValidSubmit}\n            onInvalidSubmit={this.handleInvalidSubmit}\n            ref={el => (this.myFormRef = el)}\n          >\n            <Card>\n              <CardHeader>Supplier Contact</CardHeader>\n              <CardBody>\n                <Row>\n                  <Col sm={6}>\n                    <AvGroup>\n                      <Label className='small-font-size' for=\"fullname\">Full Name</Label>\n                      <span className=\"required-label\">*</span>\n                      <AvField\n                        name=\"suppliercontactname\"\n                        type=\"text\"\n                        id=\"fullname\"\n                        value={data.suppliercontactname}\n                        onChange={this.onChange}\n                        validate={{\n                          required: {\n                            value: true,\n                            errorMessage: \"Please enter Your Name\"\n                          },\n                      \n                          pattern: {\n                            value: \"^[a-zA-Z ]+$\",\n                            errorMessage: \"Please enter valid Name\"\n                          }\n                        }}\n                      />\n                    </AvGroup>\n                  </Col>\n                  <Col sm={6}>\n                    <AvGroup>\n                      <Label className='small-font-size' for=\"phone\">Phone</Label>\n                      <span className=\"required-label\">*</span>\n                      <AvField\n                        type=\"text\"\n                        name=\"suppliercontactnumber\"\n                        id=\"phone\"\n                        value={data.suppliercontactnumber}\n                        onChange={this.onChange}\n                        validate={{\n                          required: {\n                            value: true,\n                            errorMessage: \"Please enter your phone number\"\n                          },\n                          pattern: {\n                            value: \"^[0-9]+$\",\n                            errorMessage:\n                              \"Your phone number must be composed only with numbers\"\n                          },\n                          minLength: {\n                            value: 10,\n                            errorMessage:\n                              \"Your phone number must be between 10 and 12 numbers\"\n                          },\n                          maxLength: {\n                            value: 12,\n                            errorMessage:\n                              \"Your phone number be between 10 and 12 numbers\"\n                          }\n                        }}\n                      />\n                    </AvGroup>\n                  </Col>\n                </Row>\n                <div className=\"mg-20\">\n                  <Button\n                    color=\"primary\"\n                    disabled={loading}\n                    className=\"lgn-loader\"\n                  >\n                    Submit\n                    {/* {loading} */}\n                  </Button>\n                </div>\n              </CardBody>\n            </Card>\n          </AvForm>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SupplierContactForm;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport SupplierContactForm from \"../SupplierForm/SupplierContact\";\nimport {\n  addSupplierContact,\n  getSupplierContact\n} from \"../../../../actions/Supplier\";\n\nclass SupplierContact extends React.Component {\n  componentDidMount() {\n    this.props.getSupplierContact();\n  }\n  submit = data => {\n    return this.props.addSupplierContact(data);\n  };\n  render() {\n    return (\n      <div className=\"container mg-t-20\">\n        <div>\n          <div>\n            <Breadcrumb>\n              <BreadcrumbItem>\n                <Link to=\"/admin_dashboard\">Admin Dashboard</Link>\n              </BreadcrumbItem>\n              <BreadcrumbItem>\n                <Link to=\"/transaction_page\">Transaction</Link>\n              </BreadcrumbItem>\n              <BreadcrumbItem>\n                <Link to=\"/supplier\">Supplier</Link>\n              </BreadcrumbItem>\n              <BreadcrumbItem active>Supplier Contact</BreadcrumbItem>\n            </Breadcrumb>\n          </div>\n        </div>\n        <div>\n          <SupplierContactForm submit={this.submit} />\n        </div>\n      </div>\n    );\n  }\n}\n\nSupplierContact.propTypes = {\n  addSupplierContact: PropTypes.func.isRequired,\n  getSupplierContact: PropTypes.func.isRequired\n};\n\nexport default connect(\n  null,\n  { addSupplierContact, getSupplierContact }\n)(SupplierContact);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport {\n  Card,\n  CardBody,\n  CardHeader,\n  Row,\n  Col,\n  Button,\n  Label,\n  Alert,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from \"reactstrap\";\n\nclass SupplierDetail extends React.Component {\n  state = {\n    data: {\n      suppliernumber: \"\",\n      suppliername: \"\",\n      supplieraddress1: \"\",\n      supplieraddress2: \"\",\n      city: \"\",\n      pincode: \"\",\n      state: \"\",\n      country: \"\",\n      suppliergstnumber: \"\",\n      status: null,\n      values: [\"\"],\n      suppliercontactnamelist: [\"\"],\n      suppliercontactdesignation: [\"\"],\n      suppliercontactnumber: [\"\"],\n      suppliercontactemail: [\"\"]\n    },\n    errors: {},\n    loading: false,\n    success: false,\n    suppliercontactlistvalue: []\n  };\n\n  componentWillReceiveProps(props) {\n    const suppliercontactlistvalue = Object.values(\n      props.suppliercontactlistvalue\n    );\n    const supplierdetaillistvalue = Object.values(\n      props.supplierdetaillistvalue\n    );\n    const count = supplierdetaillistvalue.length;\n    const suppliernumber = count > 0 ? 10001 + count : 10001;\n    this.setState({\n      ...this.state,\n      suppliercontactlistvalue,\n      data: { ...this.state.data, suppliernumber }\n    });\n  }\n\n  onChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  handleClick = e => {\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        values: [...this.state.data.values, \"\"],\n        suppliercontactnamelist: [\n          ...this.state.data.suppliercontactnamelist,\n          \"\"\n        ],\n        suppliercontactdesignation: [\n          ...this.state.data.suppliercontactdesignation,\n          \"\"\n        ],\n        suppliercontactnumber: [...this.state.data.suppliercontactnumber, \"\"],\n        suppliercontactemail: [...this.state.data.suppliercontactemail, \"\"]\n      }\n    });\n  };\n\n  supplierContacthandleChange = (e, index) => {\n    this.state.data.suppliercontactlistvalue[index] = e.target.value;\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        suppliercontactlistvalue: this.state.data.suppliercontactlistvalue\n      }\n    });\n  };\n\n  removeClick = (e, index) => {\n    const removeContact = { ...this.state.data };\n    const values = removeContact.values;\n    const suppliercontactnamelist = removeContact.suppliercontactnamelist;\n    const suppliercontactdesignation = removeContact.suppliercontactdesignation;\n    const suppliercontactnumber = removeContact.suppliercontactnumber;\n    const suppliercontactemail = removeContact.suppliercontactemail;\n    values.splice(index, 1);\n    suppliercontactnamelist.splice(index, 1);\n    suppliercontactdesignation.splice(index, 1);\n    suppliercontactnumber.splice(index, 1);\n    suppliercontactemail.splice(index, 1);\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        values,\n        suppliercontactnamelist,\n        suppliercontactdesignation,\n        suppliercontactnumber,\n        suppliercontactemail\n      }\n    });\n  };\n\n  contactnameChange = (e, index) => {\n    this.state.data.suppliercontactnamelist[index] = e.target.value;\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        suppliercontactnamelist: this.state.data.suppliercontactnamelist\n      }\n    });\n  };\n\n  contactdesignationChange = (e, index) => {\n    this.state.data.suppliercontactdesignation[index] = e.target.value;\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        suppliercontactdesignation: this.state.data.suppliercontactdesignation\n      }\n    });\n  };\n\n  contactnumberChange = (e, index) => {\n    this.state.data.suppliercontactnumber[index] = e.target.value;\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        suppliercontactnumber: this.state.data.suppliercontactnumber\n      }\n    });\n  };\n\n  contactemailChange = (e, index) => {\n    this.state.data.suppliercontactemail[index] = e.target.value;\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        suppliercontactemail: this.state.data.suppliercontactemail\n      }\n    });\n  };\n\n  handleValidSubmit = () => {\n    let supplierContactinfo = [];\n    const values = this.state.data.values;\n    const suppliercontactarray = this.state.data.suppliercontactnamelist;\n    const suppliercontactdesignationarray = this.state.data\n      .suppliercontactdesignation;\n    const suppliercontactnumberarray = this.state.data.suppliercontactnumber;\n    const suppliercontactemailarray = this.state.data.suppliercontactemail;\n    values.forEach(function (value, i) {\n      var obj = {};\n      obj.suppliercontactname = suppliercontactarray[i] || null;\n      obj.suppliercontactdesignation =\n        suppliercontactdesignationarray[i] || null;\n      obj.suppliercontactnumber = suppliercontactnumberarray[i] || null;\n      obj.suppliercontactemail = suppliercontactemailarray[i] || null;\n      supplierContactinfo.push(obj);\n    });\n    const data = { ...this.state.data, supplierContactinfo };\n    this.setState({ loading: true });\n    this.props\n      .submit(data)\n      .then(() => {\n        this.setState({ loading: false, errors: {}, success: true });\n        this.myFormRef.reset();\n      })\n      .catch(err => {\n        this.setState({ errors: err.response.data.errors, loading: false });\n      });\n  };\n\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n\n  render() {\n    const { data, errors, loading, success } = this.state;\n\n    return (\n      <div className=\"container mg-t-20\">\n        <div>\n          {!!success ? (\n            // <Alert color=\"info\">Supplier data is added successfully</Alert>\n            <Modal\n              isOpen={success}\n              toggle={this.toggle}\n              className={this.props.className}\n            >\n              <ModalHeader  toggle={this.toggle}>Supplier</ModalHeader>\n              <ModalBody >Supplier data is added successfully</ModalBody>\n              <ModalFooter>\n                <Button color=\"primary\" onClick={this.toggle}>\n                  Ok\n                </Button>{\" \"}\n               \n              </ModalFooter>\n            </Modal>\n          ) : null}\n          {!!errors.suppliernumber ? (\n            <Alert Label color=\"danger\">Supplier Number alreadt exist</Alert>\n          ) : null}\n          {!!errors.username ? (\n            <Alert Label color=\"danger\">{errors.username}</Alert>\n          ) : null}\n        </div>\n        <div>\n          <AvForm\n            onValidSubmit={this.handleValidSubmit}\n            onInvalidSubmit={this.handleInvalidSubmit}\n            ref={el => (this.myFormRef = el)}\n          >\n            <Card>\n              <CardHeader Label>Supplier Details</CardHeader>\n              <CardBody>\n                <Row>\n                  <Col sm={2}>\n                    <AvGroup>\n                      <Label className='small-font-size' for=\"suppliernumber\">Supplier Number</Label>\n                      <span className=\"required-label\">*</span>\n                      <AvField\n                        Label\n                        name=\"suppliernumber\"\n                        type=\"number\"\n                        id=\"suppliernumber\"\n                        value={data.suppliernumber.toString()}\n                        onChange={this.onChange}\n                        validate={{\n                          required: {\n                            value: true,\n                            errorMessage: \"Please enter Supplier Number\"\n                          },\n                        \n                          pattern: {\n                            value: \"^[0-9]+$\",\n                            errorMessage: \"Please enter valid Number\"\n                          }\n                        }}\n                      />\n                    </AvGroup>\n                  </Col>\n                  <Col sm={2}>\n                    <AvGroup>\n                      <Label className='small-font-size' for=\"suppliername\">Supplier Name</Label>\n                      <span className=\"required-label\">*</span>\n                      <AvField\n                        Label\n                        name=\"suppliername\"\n                        type=\"text\"\n                        id=\"suppliername\"\n                        value={data.suppliername}\n                        onChange={this.onChange}\n                        validate={{\n                          required: {\n                            value: true,\n                            errorMessage: \"Please enter Supplier Name\"\n                          },\n                          minLength: {\n                            value: 3,\n                            errorMessage:\n                              \"Supplier Name must be between 3 and 300 characters\"\n                          },\n                          maxLength: {\n                            value: 300,\n                            errorMessage:\n                              \"Supplier Name must be between 3 and 300 characters\"\n                          },\n                          pattern: {\n                            value: \"^[a-zA-Z ]+$\",\n                            errorMessage: \"Please enter valid Supplier Name\"\n                          }\n                        }}\n                      />\n                    </AvGroup>\n                  </Col>\n                  <Col sm={2}>\n                    <AvGroup>\n                      <Label className='small-font-size' for=\"suppliergstnumber\">Supplier GSTN </Label>\n                      <span className=\"required-label\">*</span>\n                      <AvField\n                        Label\n                        name=\"suppliergstnumber\"\n                        type=\"text\"\n                        id=\"suppliergstnumber\"\n                        value={data.suppliergstnumber}\n                        onChange={this.onChange}\n                        validate={{\n                          required: {\n                            value: true,\n                            errorMessage: \"Please enter Supplier GST Number\"\n                          },\n                          minLength: {\n                            value: 15,\n                            errorMessage:\n                              \"Supplier GST Number should contain 15 characters\"\n                          },\n                          maxLength: {\n                            value: 15,\n                            errorMessage:\n                              \"Supplier GST Number should contain 15 characters\"\n                          },\n                          pattern: {\n                            value: \"^[a-zA-z0-9]+$\",\n                            errorMessage: \"Please enter valid GST Number\"\n                          }\n                        }}\n                      />\n                    </AvGroup>\n                  </Col>\n                </Row>\n                <Card>\n                  <CardHeader Label>Address</CardHeader>\n                  <CardBody>\n                    <Row>\n                      <Col sm={3}>\n                        <AvGroup>\n                          <Label className='small-font-size' for=\"supplieraddress1\">Address 1</Label>\n                          <span className=\"required-label\">*</span>\n                          <AvField\n                            Label\n                            name=\"supplieraddress1\"\n                            type=\"text\"\n                            id=\"supplieraddress1\"\n                            value={data.supplieraddress1}\n                            onChange={this.onChange}\n                            validate={{\n                              required: {\n                                value: true,\n                                errorMessage: \"Please enter Supplier Address\"\n                              },\n                              minLength: {\n                                value: 3,\n                                errorMessage:\n                                  \"Supplier Address must be between 3 and 300 characters\"\n                              },\n                              maxLength: {\n                                value: 300,\n                                errorMessage:\n                                  \"SupplierAddress must be between 3 and 300 characters\"\n                              }\n                            }}\n                          />\n                        </AvGroup>\n                      </Col>\n                      <Col sm={3}>\n                        <AvGroup>\n                          <Label className='small-font-size' for=\"supplieraddress2\">Address 2</Label>\n                          <span className=\"required-label\">*</span>\n                          <AvField\n                            Label\n                            name=\"supplieraddress2\"\n                            type=\"text\"\n                            id=\"supplieraddress2\"\n                            value={data.supplieraddress2}\n                            onChange={this.onChange}\n                            validate={{\n                              required: {\n                                value: true,\n                                errorMessage: \"Please enter Supplier Address\"\n                              },\n                              minLength: {\n                                value: 3,\n                                errorMessage:\n                                  \"Supplier Address must be between 3 and 300 characters\"\n                              },\n                              maxLength: {\n                                value: 300,\n                                errorMessage:\n                                  \"SupplierAddress must be between 3 and 300 characters\"\n                              }\n                            }}\n                          />\n                        </AvGroup>\n                      </Col>\n                      <Col sm={2}>\n                        <AvGroup>\n                          <Label className='small-font-size' for=\"city\">City</Label>\n                          <span className=\"required-label\">*</span>\n                          <AvField\n                            Label\n                            name=\"city\"\n                            type=\"text\"\n                            id=\"city\"\n                            value={data.city}\n                            onChange={this.onChange}\n                            validate={{\n                              required: {\n                                value: true,\n                                errorMessage: \"Please enter city Name\"\n                              },\n                              minLength: {\n                                value: 1,\n                                errorMessage:\n                                  \"city Name should contain between 1 to 50 characters\"\n                              },\n                              maxLength: {\n                                value: 50,\n                                errorMessage:\n                                  \"city Name should contain between 1 to 50 characters\"\n                              },\n                              pattern: {\n                                value: \"^[a-zA-z ]+$\",\n                                errorMessage: \"Please enter valid city Name\"\n                              }\n                            }}\n                          />\n                        </AvGroup>\n                      </Col>\n                    </Row>\n                    <Row>\n                      <Col sm={2}>\n                        <AvGroup>\n                          <Label className='small-font-size' for=\"pincode\">Pin Code</Label>\n                          <span className=\"required-label\">*</span>\n                          <AvField\n                            Label\n                            name=\"pincode\"\n                            type=\"text\"\n                            id=\"pincode\"\n                            value={data.pincode}\n                            onChange={this.onChange}\n                            validate={{\n                              required: {\n                                value: true,\n                                errorMessage: \"Please enter Pincode\"\n                              },\n                              minLength: {\n                                value: 6,\n                                errorMessage:\n                                  \"Pincode should contain atleast 6 characters\"\n                              },\n                              maxLength: {\n                                value: 10,\n                                errorMessage:\n                                  \"Pincode should contain between 6 to 10 characters\"\n                              },\n                              pattern: {\n                                value: \"^[0-9]+$\",\n                                errorMessage: \"Please enter valid PinCode\"\n                              }\n                            }}\n                          />\n                        </AvGroup>\n                      </Col>\n                      <Col sm={2}>\n                        <AvGroup>\n                          <Label className='small-font-size' for=\"state\">State</Label>\n                          <span className=\"required-label\">*</span>\n                          <AvField\n                            Label\n                            name=\"state\"\n                            type=\"text\"\n                            id=\"state\"\n                            value={data.state}\n                            onChange={this.onChange}\n                            validate={{\n                              required: {\n                                value: true,\n                                errorMessage: \"Please enter State Name\"\n                              },\n                              minLength: {\n                                value: 1,\n                                errorMessage:\n                                  \"State Name should contain between 1 to 50 characters\"\n                              },\n                              maxLength: {\n                                value: 50,\n                                errorMessage:\n                                  \"State Name should contain between 1 to 50 characters\"\n                              },\n                              pattern: {\n                                value: \"^[a-zA-z ]+$\",\n                                errorMessage: \"Please enter valid State Name\"\n                              }\n                            }}\n                          />\n                        </AvGroup>\n                      </Col>\n                      <Col sm={2}>\n                        <AvGroup>\n                          <Label className='small-font-size' for=\"country\">Country</Label>\n                          <span className=\"required-label\">*</span>\n                          <AvField\n                            Label\n                            name=\"country\"\n                            type=\"text\"\n                            id=\"country\"\n                            value={data.country}\n                            onChange={this.onChange}\n                            validate={{\n                              required: {\n                                value: true,\n                                errorMessage: \"Please enter Country Name\"\n                              },\n                              minLength: {\n                                value: 1,\n                                errorMessage:\n                                  \"Country Name should contain between 1 to 50 characters\"\n                              },\n                              maxLength: {\n                                value: 50,\n                                errorMessage:\n                                  \"Country Name should contain between 1 to 50 characters\"\n                              },\n                              pattern: {\n                                value: \"^[a-zA-z ]+$\",\n                                errorMessage: \"Please enter valid Country Name\"\n                              }\n                            }}\n                          />\n                        </AvGroup>\n                      </Col>\n                    </Row>\n                  </CardBody>\n                </Card>\n              </CardBody>\n              <CardHeader Label>Add supplier contact</CardHeader>\n              <CardBody>\n                <div className=\"mg-t-20\">\n                  <Button color=\"info\" onClick={this.handleClick}>\n                    Add Supplier Contacts\n                  </Button>\n                </div>\n                {data.values.map((value, index) => {\n                  return (\n                    <Row key={index}>\n                      <Col sm={2}>\n                        <AvGroup>\n                          <Label className='small-font-size' for={`contactname + ${index}`}>\n                            Contact Name{\" \"}\n                          </Label>\n                          <AvField\n                            Label\n                            name={`contactname + ${index}`}\n                            type=\"text\"\n                            id={`contactname + ${index}`}\n                            value={data.suppliercontactnamelist[index] || null}\n                            onChange={e => this.contactnameChange(e, index)}\n                            validate={{\n                              minLength: {\n                                value: 3,\n                                errorMessage:\n                                  \"contact name should contain only between 3 to 300 characters\"\n                              },\n                              maxLength: {\n                                value: 300,\n                                errorMessage:\n                                  \"contact name should contain only between 3 to 300 characters\"\n                              },\n                              pattern: {\n                                value: \"^[a-zA-z ]+$\",\n                                errorMessage: \"Please enter valid contact name\"\n                              }\n                            }}\n                          />\n                        </AvGroup>\n                      </Col>\n                      <Col sm={2}>\n                        <AvGroup>\n                          <Label className='small-font-size' for={`suppliercontactdesignation + ${index}`}>\n                            designation{\" \"}\n                          </Label>\n                          <AvField\n                            Label\n                            name={`suppliercontactdesignation + ${index}`}\n                            type=\"text\"\n                            id={`suppliercontactdesignation + ${index}`}\n                            value={\n                              data.suppliercontactdesignation[index] || null\n                            }\n                            onChange={e =>\n                              this.contactdesignationChange(e, index)\n                            }\n                            validate={{\n                              minLength: {\n                                value: 3,\n                                errorMessage:\n                                  \"contact designation name should contain only between 3 to 100 characters\"\n                              },\n                              maxLength: {\n                                value: 100,\n                                errorMessage:\n                                  \"contact designation name should contain only between 3 to 100 characters\"\n                              },\n                              pattern: {\n                                value: \"^[a-zA-z ]+$\",\n                                errorMessage: \"Please enter valid contact name\"\n                              }\n                            }}\n                          />\n                        </AvGroup>\n                      </Col>\n                      <Col sm={2}>\n                        <AvGroup>\n                          <Label className='small-font-size' for={`suppliercontactnumber + ${index}`}>\n                            Contact Number{\" \"}\n                          </Label>\n                          <AvField\n                            Label\n                            name={`suppliercontactnumber + ${index}`}\n                            type=\"text\"\n                            id={`suppliercontactnumber + ${index}`}\n                            value={data.suppliercontactnumber[index]}\n                            onChange={e => this.contactnumberChange(e, index)}\n                            validate={{\n                              pattern: {\n                                value: \"^[0-9]+$\",\n                                errorMessage:\n                                  \"Your phone number must be composed only with numbers\"\n                              },\n                              minLength: {\n                                value: 10,\n                                errorMessage:\n                                  \"Your phone number must be between 10 and 12 numbers\"\n                              },\n                              maxLength: {\n                                value: 12,\n                                errorMessage:\n                                  \"Your phone number be between 10 and 12 numbers\"\n                              }\n                            }}\n                          />\n                        </AvGroup>\n                      </Col>\n                      <Col sm={3}>\n                        <AvGroup>\n                          <Label className='small-font-size' for={`suppliercontactemail + ${index}`}>\n                            Contact Email{\" \"}\n                          </Label>\n                          <AvField\n                            Label\n                            name={`suppliercontactemail + ${index}`}\n                            type=\"text\"\n                            id={`suppliercontactemail + ${index}`}\n                            value={data.suppliercontactemail[index] || null}\n                            onChange={e => {\n                              this.contactemailChange(e, index);\n                            }}\n                            validate={{\n                              pattern: {\n                                value:\n                                  \"^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$\",\n                                errorMessage: \"Please enter valid email\"\n                              }\n                            }}\n                          />\n                        </AvGroup>\n                      </Col>\n                      <Col sm={2}>\n                        <Button\n                          Label\n                          type=\"button\"\n                          color='danger'\n                          onClick={e => this.removeClick(e, index)}\n                          style={{ marginTop: \"30px\" }}\n                        >\n                          -\n                        </Button>\n                      </Col>\n                      {/* <Col sm={6}>\n                                  <AvGroup>\n                                    <Label className='small-font-size' for=\"contact Number\">Contact Number</Label>\n                                    <span className=\"required-label\">*</span>\n                                    <AvField\n                                      type=\"select\"\n                                      name=\"contactnumber\"\n                                      onChange={this.onChange}\n                                      required={true}\n                                      disabled={true}\n                                    >\n                                      <option value=\"\">123</option>\n                                      <option value=\"\">345</option>\n                                      <option value=\"\"></option>\n                                      {this.createSelectNumbers()}\n                                    </AvField>\n                                  </AvGroup>\n                                </Col> */}\n                    </Row>\n                  );\n                })}\n                <div className=\"mg-20\">\n                  <Button\n                    Label\n                    color=\"primary\"\n                    disabled={loading}\n                    className=\"lgn-loader\"\n                  >\n                    Submit\n                    {/* {loading} */}\n                  </Button>\n                </div>\n              </CardBody>\n            </Card>\n          </AvForm>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    suppliercontactlistvalue: state.suppliercontactlistvalue,\n    supplierdetaillistvalue: state.supplierdetaillistvalue\n  };\n}\nexport default connect(\n  mapStateToProps,\n  null\n)(SupplierDetail);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport SupplierDetailForm from \"../SupplierForm/SupplierDetail\";\nimport {\n  getSupplierContact,\n  addSupplierDetails,\n  getSupplierDetails\n} from \"../../../../actions/Supplier\";\nimport CustomLoader from \"../../../../Components/loader/loader\";\n\nclass SupplierDetail extends React.Component {\n  state = {\n    loading: false\n  };\n  componentDidMount() {\n    this.props.getSupplierContact();\n    this.props.getSupplierDetails();\n  }\n  submit = data => {\n    this.dataHandler(true);\n    return this.props\n      .addSupplierDetails(data)\n      .then(data => {\n        this.dataHandler(false);\n        this.props.getSupplierDetails();\n        return data;\n      })\n      .catch(err => {\n        this.dataHandler(false);\n        throw err;\n      });\n  };\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n  render() {\n    const { loading } = this.state;\n    return (\n      <div className=\"container mg-t-20\">\n        {loading ? <CustomLoader /> : null}\n        <div>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to=\"/admin_dashboard\">Home</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link to=\"/inventory_page\">Setup</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link to=\"/supplier\">Supplier</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Supplier Detail</BreadcrumbItem>\n          </Breadcrumb>\n        </div>\n        <div>\n          <SupplierDetailForm submit={this.submit} />\n        </div>\n      </div>\n    );\n  }\n}\n\nSupplierDetail.propTypes = {\n  getSupplierContact: PropTypes.func.isRequired\n};\n\nexport default connect(\n  null,\n  { getSupplierContact, addSupplierDetails, getSupplierDetails }\n)(SupplierDetail);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport {\n  Button,\n  Label,\n  Alert,\n  Card,\n  CardBody,\n  CardHeader,\n  Row,\n  Col,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from \"reactstrap\";\n\nclass SupplierDetailUpdateForm extends React.Component {\n  state = {\n    data: {\n      suppliernumber: \"\",\n      suppliername: \"\",\n      supplieraddress1: \"\",\n      supplieraddress2: \"\",\n      city: \"\",\n      pincode: \"\",\n      state: \"\",\n      country: \"\",\n      suppliergstnumber: \"\",\n      status: null,\n      values: [null],\n      suppliercontactnamelist: [\"\"],\n      suppliercontactdesignation: [\"\"],\n      suppliercontactnumber: [\"\"],\n      suppliercontactemail: [\"\"],\n      mongoid: [\"\"]\n    },\n    errors: {},\n    loading: false,\n    success: false,\n    suppliercontactlistvalue: []\n  };\n\n  componentWillReceiveProps(props) {\n    const data = props.supplierdetaillistvalue;\n    const suppliercontactname = data.suppliercontactlistvalue.map(\n      obj => obj.suppliercontactname\n    );\n\n    const mongoid = data.suppliercontactlistvalue.map(obj => obj._id);\n    const suppliercontactnumber = data.suppliercontactlistvalue.map(\n      obj => obj.suppliercontactnumber\n    );\n\n    const suppliercontactdesignation = data.suppliercontactlistvalue.map(\n      obj => obj.suppliercontactdesignation\n    );\n\n    const suppliercontactemail = data.suppliercontactlistvalue.map(\n      obj => obj.suppliercontactemail\n    );\n    data.mongoid = mongoid;\n    data.values = suppliercontactname;\n    data.suppliercontactnamelist = suppliercontactname;\n    data.suppliercontactdesignation = suppliercontactdesignation;\n    data.suppliercontactnumber = suppliercontactnumber.map((item, i) => {\n      return item ? item.toString() : item;\n    });\n    data.suppliercontactemail = suppliercontactemail;\n    this.setState({ ...this.state.data, data });\n  }\n\n  onChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  handleClick = e => {\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        values: [...this.state.data.values, \"\"],\n        suppliercontactnamelist: [\n          ...this.state.data.suppliercontactnamelist,\n          \"\"\n        ],\n        suppliercontactdesignation: [\n          ...this.state.data.suppliercontactdesignation,\n          \"\"\n        ],\n        suppliercontactnumber: [...this.state.data.suppliercontactnumber, \"\"],\n        suppliercontactemail: [...this.state.data.suppliercontactemail, \"\"]\n      }\n    });\n  };\n\n  supplierContacthandleChange = (e, index) => {\n    this.state.data.suppliercontactlistvalue[index] = e.target.value;\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        suppliercontactlistvalue: this.state.data.suppliercontactlistvalue\n      }\n    });\n  };\n\n  removeClick = (e, index) => {\n    const removeContact = { ...this.state.data };\n    const values = removeContact.values;\n    const suppliercontactnamelist = removeContact.suppliercontactnamelist;\n    const suppliercontactdesignation = removeContact.suppliercontactdesignation;\n    const suppliercontactnumber = removeContact.suppliercontactnumber;\n    const suppliercontactemail = removeContact.suppliercontactemail;\n    values.splice(index, 1);\n    suppliercontactnamelist.splice(index, 1);\n    suppliercontactdesignation.splice(index, 1);\n    suppliercontactnumber.splice(index, 1);\n    suppliercontactemail.splice(index, 1);\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        values,\n        suppliercontactnamelist,\n        suppliercontactdesignation,\n        suppliercontactnumber,\n        suppliercontactemail\n      }\n    });\n  };\n\n  contactnameChange = (e, index) => {\n    this.state.data.suppliercontactnamelist[index] = e.target.value;\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        suppliercontactnamelist: this.state.data.suppliercontactnamelist\n      }\n    });\n  };\n\n  contactdesignationChange = (e, index) => {\n    this.state.data.suppliercontactdesignation[index] = e.target.value;\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        suppliercontactdesignation: this.state.data.suppliercontactdesignation\n      }\n    });\n  };\n\n  contactnumberChange = (e, index) => {\n    this.state.data.suppliercontactnumber[index] = e.target.value;\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        suppliercontactnumber: this.state.data.suppliercontactnumber\n      }\n    });\n  };\n\n  contactemailChange = (e, index) => {\n    this.state.data.suppliercontactemail[index] = e.target.value;\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        suppliercontactemail: this.state.data.suppliercontactemail\n      }\n    });\n  };\n\n  handleValidSubmit = () => {\n    let supplierContactinfo = [];\n    const values = this.state.data.values;\n    const suppliercontactid = this.state.data.mongoid;\n    const suppliercontactarray = this.state.data.suppliercontactnamelist;\n    const suppliercontactdesignationarray = this.state.data\n      .suppliercontactdesignation;\n    const suppliercontactnumberarray = this.state.data.suppliercontactnumber;\n    const suppliercontactemailarray = this.state.data.suppliercontactemail;\n    values.forEach(function(value, i) {\n      var obj = {};\n      obj.id = suppliercontactid[i] || null;\n      obj.suppliercontactname = suppliercontactarray[i] || null;\n      obj.suppliercontactdesignation =\n        suppliercontactdesignationarray[i] || null;\n      obj.suppliercontactnumber = suppliercontactnumberarray[i] || null;\n      obj.suppliercontactemail = suppliercontactemailarray[i] || null;\n      supplierContactinfo.push(obj);\n    });\n    const data = { ...this.state.data, supplierContactinfo };\n    this.setState({ loading: true });\n    this.props\n      .submit(data)\n      .then(() => {\n        this.setState({ loading: false, errors: {}, success: true });\n        // this.myFormRef.reset();\n      })\n      .catch(err => {\n        this.setState({ errors: err.response.data.errors, loading: false });\n      });\n  };\n\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n\n  render() {\n    const { data, errors, loading, success } = this.state;\n\n    return (\n      <div className=\"container mg-t-20\">\n        <div>\n          {!!success ? (\n            // <Alert color=\"info\">Supplier data is updated successfully</Alert>\n            <Modal\n              isOpen={success}\n              toggle={this.toggle}\n              className={this.props.className}\n            >\n              <ModalHeader toggle={this.toggle}>Supplier</ModalHeader>\n              <ModalBody>Supplier data is updated successfully</ModalBody>\n              <ModalFooter>\n                <Button color=\"primary\" onClick={this.toggle}>\n                  Ok\n                </Button>\n              </ModalFooter>\n            </Modal>\n          ) : null}\n          {!!errors.suppliernumber ? (\n            <Alert color=\"danger\">Supplier Number already exist</Alert>\n          ) : null}\n          {!!errors.username ? (\n            <Alert color=\"danger\">{errors.username}</Alert>\n          ) : null}\n        </div>\n        <div>\n          <AvForm\n            onValidSubmit={this.handleValidSubmit}\n            onInvalidSubmit={this.handleInvalidSubmit}\n            ref={el => (this.myFormRef = el)}\n          >\n            <Card>\n              <CardHeader>Supplier Details</CardHeader>\n              <CardBody>\n                <Row>\n                  <Col sm={2}>\n                    <AvGroup>\n                      <Label className='small-font-size' for=\"suppliernumber\">Supplier Number</Label>\n                      <span className=\"required-label\">*</span>\n                      <AvField\n                        name=\"suppliernumber\"\n                        type=\"number\"\n                        id=\"suppliernumber\"\n                        value={data.suppliernumber.toString() || null}\n                        onChange={this.onChange}\n                        validate={{\n                          required: {\n                            value: true,\n                            errorMessage: \"Please enter Supplier Number\"\n                          },\n                  \n                          pattern: {\n                            value: \"^[0-9]+$\",\n                            errorMessage: \"Please enter valid Number\"\n                          }\n                        }}\n                      />\n                    </AvGroup>\n                  </Col>\n                  <Col sm={2}>\n                    <AvGroup>\n                      <Label className='small-font-size' for=\"suppliername\">Supplier Name</Label>\n                      <span className=\"required-label\">*</span>\n                      <AvField\n                        name=\"suppliername\"\n                        type=\"text\"\n                        id=\"suppliername\"\n                        value={data.suppliername || null}\n                        onChange={this.onChange}\n                        validate={{\n                          required: {\n                            value: true,\n                            errorMessage: \"Please enter Supplier Name\"\n                          },\n                       \n                          pattern: {\n                            value: \"^[a-zA-Z ]+$\",\n                            errorMessage: \"Please enter valid Supplier Name\"\n                          }\n                        }}\n                      />\n                    </AvGroup>\n                  </Col>\n                  <Col sm={2}>\n                    <AvGroup>\n                      <Label className='small-font-size' for=\"suppliergstnumber\">Supplier GSTN </Label>\n                      <span className=\"required-label\">*</span>\n                      <AvField\n                        name=\"suppliergstnumber\"\n                        type=\"text\"\n                        id=\"suppliergstnumber\"\n                        value={data.suppliergstnumber || null}\n                        onChange={this.onChange}\n                        validate={{\n                          required: {\n                            value: true,\n                            errorMessage: \"Please enter Supplier GST Number\"\n                          },\n                          minLength: {\n                            value: 15,\n                            errorMessage:\n                              \"Supplier GST Number should contain 15 characters\"\n                          },\n                          maxLength: {\n                            value: 15,\n                            errorMessage:\n                              \"Supplier GST Number should contain 15 characters\"\n                          },\n                          pattern: {\n                            value: \"^[a-zA-z0-9]+$\",\n                            errorMessage: \"Please enter valid GST Number\"\n                          }\n                        }}\n                      />\n                    </AvGroup>\n                  </Col>\n                </Row>\n                <Card>\n                  <CardHeader>Address</CardHeader>\n                  <CardBody>\n                    <Row>\n                      <Col sm={2}>\n                        <AvGroup>\n                          <Label className='small-font-size' for=\"supplieraddress1\">Address 1</Label>\n                          <span className=\"required-label\">*</span>\n                          <AvField\n                            name=\"supplieraddress1\"\n                            type=\"text\"\n                            id=\"supplieraddress1\"\n                            value={data.supplieraddress1 || null}\n                            onChange={this.onChange}\n                            validate={{\n                              required: {\n                                value: true,\n                                errorMessage: \"Please enter Supplier Address\"\n                              },\n                              minLength: {\n                                value: 4,\n                                errorMessage:\n                                  \"Supplier Address must be between 6 and 30 characters\"\n                              },\n                              maxLength: {\n                                value: 30,\n                                errorMessage:\n                                  \"SupplierAddress must be between 6 and 30 characters\"\n                              }\n                            }}\n                          />\n                        </AvGroup>\n                      </Col>\n                      <Col sm={2}>\n                        <AvGroup>\n                          <Label className='small-font-size' for=\"supplieraddress2\">Address 2</Label>\n                          <span className=\"required-label\">*</span>\n                          <AvField\n                            name=\"supplieraddress2\"\n                            type=\"text\"\n                            id=\"supplieraddress2\"\n                            value={data.supplieraddress2 || null}\n                            onChange={this.onChange}\n                            validate={{\n                              required: {\n                                value: true,\n                                errorMessage: \"Please enter Supplier Address\"\n                              },\n                              minLength: {\n                                value: 4,\n                                errorMessage:\n                                  \"Supplier Address must be between 6 and 30 characters\"\n                              },\n                              maxLength: {\n                                value: 30,\n                                errorMessage:\n                                  \"SupplierAddress must be between 6 and 30 characters\"\n                              }\n                            }}\n                          />\n                        </AvGroup>\n                      </Col>\n                      <Col sm={2}>\n                        <AvGroup>\n                          <Label className='small-font-size' for=\"city\">City</Label>\n                          <span className=\"required-label\">*</span>\n                          <AvField\n                            name=\"city\"\n                            type=\"text\"\n                            id=\"city\"\n                            value={data.city || null}\n                            onChange={this.onChange}\n                            validate={{\n                              required: {\n                                value: true,\n                                errorMessage: \"Please enter city Name\"\n                              },\n                              minLength: {\n                                value: 1,\n                                errorMessage:\n                                  \"city Name should contain atleast 1 characters\"\n                              },\n                              maxLength: {\n                                value: 15,\n                                errorMessage:\n                                  \"city Name should contain between 1 to 15 characters\"\n                              },\n                              pattern: {\n                                value: \"^[a-zA-z ]+$\",\n                                errorMessage: \"Please enter valid city Name\"\n                              }\n                            }}\n                          />\n                        </AvGroup>\n                      </Col>\n                    </Row>\n                    <Row>\n                      <Col sm={2}>\n                        <AvGroup>\n                          <Label className='small-font-size' for=\"pincode\">Pin Code</Label>\n                          <span className=\"required-label\">*</span>\n                          <AvField\n                            name=\"pincode\"\n                            type=\"text\"\n                            id=\"pincode\"\n                            value={data.pincode || null}\n                            onChange={this.onChange}\n                            validate={{\n                              required: {\n                                value: true,\n                                errorMessage: \"Please enter Pincode\"\n                              },\n                              minLength: {\n                                value: 6,\n                                errorMessage:\n                                  \"Pincode should contain atleast 6 characters\"\n                              },\n                              maxLength: {\n                                value: 10,\n                                errorMessage:\n                                  \"Pincode should contain between 6 to 10 characters\"\n                              },\n                              pattern: {\n                                value: \"^[0-9]+$\",\n                                errorMessage: \"Please enter valid PinCode\"\n                              }\n                            }}\n                          />\n                        </AvGroup>\n                      </Col>\n                      <Col sm={2}>\n                        <AvGroup>\n                          <Label className='small-font-size' for=\"state\">State</Label>\n                          <span className=\"required-label\">*</span>\n                          <AvField\n                            name=\"state\"\n                            type=\"text\"\n                            id=\"state\"\n                            value={data.state || null}\n                            onChange={this.onChange}\n                            validate={{\n                              required: {\n                                value: true,\n                                errorMessage: \"Please enter State Name\"\n                              },\n                              minLength: {\n                                value: 1,\n                                errorMessage:\n                                  \"State Name should contain atleast 1 characters\"\n                              },\n                              maxLength: {\n                                value: 15,\n                                errorMessage:\n                                  \"State Name should contain between 1 to 15 characters\"\n                              },\n                              pattern: {\n                                value: \"^[a-zA-z ]+$\",\n                                errorMessage: \"Please enter valid State Name\"\n                              }\n                            }}\n                          />\n                        </AvGroup>\n                      </Col>\n                      <Col sm={2}>\n                        <AvGroup>\n                          <Label className='small-font-size' for=\"country\">Country</Label>\n                          <span className=\"required-label\">*</span>\n                          <AvField\n                            name=\"country\"\n                            type=\"text\"\n                            id=\"country\"\n                            value={data.country || null}\n                            onChange={this.onChange}\n                            validate={{\n                              required: {\n                                value: true,\n                                errorMessage: \"Please enter Country Name\"\n                              },\n                              minLength: {\n                                value: 1,\n                                errorMessage:\n                                  \"Country Name should contain atleast 1 characters\"\n                              },\n                              maxLength: {\n                                value: 15,\n                                errorMessage:\n                                  \"Country Name should contain between 1 to 15 characters\"\n                              },\n                              pattern: {\n                                value: \"^[a-zA-z ]+$\",\n                                errorMessage: \"Please enter valid Country Name\"\n                              }\n                            }}\n                          />\n                        </AvGroup>\n                      </Col>\n                    </Row>\n                  </CardBody>\n                </Card>\n              </CardBody>\n              <CardHeader>Add supplier contact</CardHeader>\n              <CardBody>\n                <div className=\"mg-t-20\">\n                  <Button color=\"info\" onClick={this.handleClick}>\n                    Add Supplier Contacts\n                  </Button>\n                </div>\n                {data.values.map((value, index) => {\n                  return (\n                    <Row key={index}>\n                      <Col sm={2}>\n                        <AvGroup>\n                          <Label className='small-font-size' for={`contactname + ${index}`}>\n                            Contact Name{\" \"}\n                          </Label>\n                          <AvField\n                            name={`contactname + ${index}`}\n                            type=\"text\"\n                            id={`contactname + ${index}`}\n                            value={data.suppliercontactnamelist[index] || null}\n                            onChange={e => this.contactnameChange(e, index)}\n                            validate={{\n                              minLength: {\n                                value: 4,\n                                errorMessage:\n                                  \"contact name should contain more than 4 characters\"\n                              },\n                              maxLength: {\n                                value: 15,\n                                errorMessage:\n                                  \"contact name should contain only between 4 to 15 characters\"\n                              },\n                              pattern: {\n                                value: \"^[a-zA-z ]+$\",\n                                errorMessage: \"Please enter valid contact name\"\n                              }\n                            }}\n                          />\n                        </AvGroup>\n                      </Col>\n                      <Col sm={2}>\n                        <AvGroup>\n                          <Label className='small-font-size' for={`suppliercontactdesignation + ${index}`}>\n                            Contact designation{\" \"}\n                          </Label>\n                          <AvField\n                            name={`suppliercontactdesignation + ${index}`}\n                            type=\"text\"\n                            id={`suppliercontactdesignation + ${index}`}\n                            value={\n                              data.suppliercontactdesignation[index] || null\n                            }\n                            onChange={e =>\n                              this.contactdesignationChange(e, index)\n                            }\n                            validate={{\n                              minLength: {\n                                value: 4,\n                                errorMessage:\n                                  \"contact designation name should contain more than 4 characters\"\n                              },\n                              maxLength: {\n                                value: 15,\n                                errorMessage:\n                                  \"contact designation name should contain only between 4 to 15 characters\"\n                              },\n                              pattern: {\n                                value: \"^[a-zA-z ]+$\",\n                                errorMessage: \"Please enter valid contact name\"\n                              }\n                            }}\n                          />\n                        </AvGroup>\n                      </Col>\n                      <Col sm={2}>\n                        <AvGroup>\n                          <Label className='small-font-size' for={`suppliercontactnumber + ${index}`}>\n                            Contact Number{\" \"}\n                          </Label>\n                          <AvField\n                            name={`suppliercontactnumber + ${index}`}\n                            type=\"text\"\n                            id={`suppliercontactnumber + ${index}`}\n                            value={data.suppliercontactnumber[index]}\n                            onChange={e => this.contactnumberChange(e, index)}\n                            validate={{\n                              pattern: {\n                                value: \"^[0-9]+$\",\n                                errorMessage:\n                                  \"Your phone number must be composed only with numbers\"\n                              },\n                              minLength: {\n                                value: 10,\n                                errorMessage:\n                                  \"Your phone number must be between 10 and 12 numbers\"\n                              },\n                              maxLength: {\n                                value: 12,\n                                errorMessage:\n                                  \"Your phone number be between 10 and 12 numbers\"\n                              }\n                            }}\n                          />\n                        </AvGroup>\n                      </Col>\n                      <Col sm={2}>\n                        <AvGroup>\n                          <Label className='small-font-size' for={`suppliercontactemail + ${index}`}>\n                            Contact Email{\" \"}\n                          </Label>\n                          <AvField\n                            name={`suppliercontactemail + ${index}`}\n                            type=\"text\"\n                            id={`suppliercontactemail + ${index}`}\n                            value={data.suppliercontactemail[index] || null}\n                            onChange={e => {\n                              this.contactemailChange(e, index);\n                            }}\n                            validate={{\n                              pattern: {\n                                value:\n                                  \"^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$\",\n                                errorMessage: \"Please enter valid email\"\n                              }\n                            }}\n                          />\n                        </AvGroup>\n                      </Col>\n                      <Col sm={2}>\n                        <Button\n                          type=\"button\"\n                          color='danger'\n                          onClick={e => this.removeClick(e, index)}\n                          style={{ marginTop: \"30px\" }}\n                        >\n                          -\n                        </Button>\n                      </Col>\n                      {/* <Col sm={6}>\n                                      <AvGroup>\n                                        <Label className='small-font-size' for=\"contact Number\">Contact Number</Label>\n                                        <span className=\"required-label\">*</span>\n                                        <AvField\n                                          type=\"select\"\n                                          name=\"contactnumber\"\n                                          onChange={this.onChange}\n                                          required={true}\n                                          disabled={true}\n                                        >\n                                          <option value=\"\">123</option>\n                                          <option value=\"\">345</option>\n                                          <option value=\"\"></option>\n                                          {this.createSelectNumbers()}\n                                        </AvField>\n                                      </AvGroup>\n                                    </Col> */}\n                    </Row>\n                  );\n                })}\n                <div className=\"mg-20\">\n                  <Button\n                    color=\"primary\"\n                    disabled={loading}\n                    className=\"lgn-loader\"\n                  >\n                    Submit\n                    {/* {loading} */}\n                  </Button>\n                </div>\n              </CardBody>\n            </Card>\n          </AvForm>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  null\n)(SupplierDetailUpdateForm);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport SupplierDetailUpdateForm from \"../SupplierForm/SupplierDetailUpdate\";\nimport {\n  getSupplierDetails,\n  updateSupplierDetails\n} from \"../../../../actions/Supplier\";\nimport CustomLoader from \"../../../../Components/loader/loader\";\n\nclass SupplierDetailUpdate extends React.Component {\n  state = {\n    supplierdetaillistvalue: \"\",\n    loading: false\n  };\n  componentDidMount() {\n    this.props.getSupplierDetails();\n    const supplierdetailid = this.props.match.params.id;\n    const supplierdetaillistvalue = this.props.supplierdetaillistvalue[\n      supplierdetailid\n    ];\n    this.setState({ supplierdetaillistvalue });\n  }\n\n  submit = data => {\n    this.dataHandler(true);\n    return this.props\n      .updateSupplierDetails(data)\n      .then(data => {\n        this.dataHandler(false);\n        this.props.getSupplierDetails();\n        return data;\n      })\n      .catch(err => {\n        this.dataHandler(false);\n        throw err;\n      });\n  };\n\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n\n  render() {\n    const { loading, supplierdetaillistvalue } = this.state;\n    return (\n      <div className=\"container mg-t-20\">\n        {loading ? <CustomLoader /> : null}\n        <div>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to=\"/admin_dashboard\">Home</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link to=\"/inventory_page\">Set Up</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link to=\"/supplier\">Supplier</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Supplier Detail Update</BreadcrumbItem>\n          </Breadcrumb>\n        </div>\n        <div>\n          <SupplierDetailUpdateForm\n            supplierdetaillistvalue={supplierdetaillistvalue}\n            submit={this.submit}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nSupplierDetailUpdate.propTypes = {\n  getSupplierContact: PropTypes.func.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    supplierdetaillistvalue: state.supplierdetaillistvalue\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { getSupplierDetails, updateSupplierDetails }\n)(SupplierDetailUpdate);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { Breadcrumb, BreadcrumbItem, Button, Alert } from \"reactstrap\";\nimport { getSupplierDetails } from \"../../../../actions/Supplier\";\nimport DataTable from \"../../../../Components/Table/DatatablePage\";\nimport CustomLoader from \"../../../../Components/loader/loader\";\n\nclass Supplierlist extends React.Component {\n  state = {\n    supplierdetaillist: [],\n    count: 0,\n    loading: false\n  };\n  componentDidMount() {\n    this.dataHandler(true);\n    this.props.getSupplierDetails();\n  }\n  componentWillReceiveProps(props) {\n    let supplierdetaillistvalue = Object.values(\n      props.supplierdetaillistvalue\n    );\n    //supplierdetaillistvalue= supplierdetaillistvalue.sort((a, b) => b.suppliernumber.toString().toLowerCase().localeCompare(a.suppliernumber.toString().toLowerCase()));\n\n    supplierdetaillistvalue.sort(function(a, b){\n      return parseInt(b.suppliernumber) - parseInt(a.suppliernumber);\n    });\n    const count = supplierdetaillistvalue.length;\n    const supplierdetaillist = supplierdetaillistvalue.map(\n      (supplierdata, i) => {\n        return {\n          suppliernumber: supplierdata.suppliernumber,\n          suppliername: supplierdata.suppliername,\n          suppliergstnumber: supplierdata.suppliergstnumber,\n          supplierAddress:\n            supplierdata.supplieraddress1 +\n            \" \" +\n            supplierdata.supplieraddress2 +\n            \" \" +\n            supplierdata.city +\n            \" \" +\n            supplierdata.state +\n            \" \" +\n            supplierdata.country +\n            \" \" +\n            supplierdata.pincode,\n          view: (\n            <Button\n              Label\n              color=\"primary\"\n              onClick={() => {\n                this.updateButton(supplierdata.id);\n              }}\n            >\n              Edit\n            </Button>\n          )\n        };\n      }\n    );\n    this.setState({ supplierdetaillist, count });\n    this.dataHandler(false);\n  }\n  updateButton = id => {\n    let path = `/supplierdetail_update/${id}`;\n    this.props.history.push(path);\n\n  };\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n  render() {\n    const { supplierdetaillist, count, loading } = this.state;\n    const columnvalue = [\n      {\n        label: \"Supplier Number\",\n        field: \"suppliernumber\",\n        sort: \"asc\",\n        width: 75\n      },\n      {\n        label: \"Supplier Name\",\n        field: \"suppliername\",\n        sort: \"asc\",\n        width: 75\n      },\n      {\n        label: \"Supplier GST\",\n        field: \"suppliergstnumber\",\n        sort: \"asc\",\n        width: 75\n      },\n      {\n        label: \"Supplier Address\",\n        field: \"supplierAddress\",\n        sort: \"asc\",\n        width: 75\n      },\n      {\n        label: \"Edit\",\n        field: \"view\",\n        sort: \"asc\",\n        width: 100\n      }\n    ];\n    return (\n      <div className=\"container mg-t-20\">\n        {loading ? <CustomLoader /> : null}\n        <div>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to=\"/admin_dashboard\">Home</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link to=\"/inventory_page\">Setup</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link to=\"/supplier\">Supplier</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Supplier list</BreadcrumbItem>\n          </Breadcrumb>\n        </div>\n        <div>\n          {count > 0 ? (\n            <div>\n              <DataTable\n                columnvalue={columnvalue}\n                rowvalues={supplierdetaillist}\n                className=\"supplierlist\"\n              />\n            </div>\n          ) : (\n              <div>\n                <Alert color=\"info\">Please add Supplier details</Alert>\n              </div>\n            )}\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    supplierdetaillistvalue: state.supplierdetaillistvalue\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { getSupplierDetails }\n)(Supplierlist);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { AvForm, AvField, AvGroup } from \"availity-reactstrap-validation\";\nimport { Button, Label, Alert } from \"reactstrap\";\nimport { Card, CardBody, CardHeader, Row, Col } from \"reactstrap\";\n\nclass ItemQuantitySearch extends React.Component {\n  state = {\n    data: {\n      locationid: \"\",\n      itemid: \"\"\n    },\n    locationlistvalue: [],\n    masteritemlistvalues: [],\n    loading: false\n  };\n  componentDidMount() {\n    const locationlistvalue = Object.values(this.props.locationlistvalue);\n    const masteritemlistvalues = Object.values(this.props.masteritemlistvalues);\n    this.setState({\n      ...this.state,\n      locationlistvalue,\n      masteritemlistvalues\n    });\n  }\n  componentWillReceiveProps(props) {\n    const locationlistvalue = Object.values(props.locationlistvalue);\n    const masteritemlistvalues = Object.values(props.masteritemlistvalues);\n    this.setState({\n      ...this.state,\n      locationlistvalue,\n      masteritemlistvalues\n    });\n  }\n  createSelectLocationItems = () => {\n    let items = [];\n    const locationlistvalue = this.state.locationlistvalue;\n    locationlistvalue.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.locationname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  filterItems(itemarray, key) {\n    return itemarray.sort((a, b) => { return a[key].toLowerCase().localeCompare(b[key].toLowerCase()) })\n  }\n\n  createSelectItems = () => {\n    let items = [];\n    let masteritemlistvalues = this.state.masteritemlistvalues;\n    console.log('XXXXXXXXXXXXX');\n    masteritemlistvalues = this.filterItems(masteritemlistvalues, 'masteritemtypename')\n    masteritemlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.masteritemtypename}\n        </option>\n      );\n    });\n    return items;\n  };\n  selectitemchange = () => { };\n  \n  onhandlerChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n  handleValidSubmit = () => {\n    const { data } = this.state;\n    this.props\n      .submit(data)\n      .then(() => {\n        this.setState({\n          ...this.state,\n          loading: false\n        });\n      })\n      .catch(err => { });\n  };\n  render() {\n    const { loading } = this.state;\n    return (\n      <div>\n        <AvForm\n          onValidSubmit={this.handleValidSubmit}\n          onInvalidSubmit={this.handleInvalidSubmit}\n          ref={el => (this.myFormRef = el)}\n        >\n          <Card>\n            <CardHeader Label>Search Item Quantity</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size'>location</Label>\n                    <AvField\n                      Label\n                      type=\"select\"\n                      name=\"locationid\"\n                      onChange={this.onhandlerChange}\n                    >\n                      <option value=\"\">select location</option>\n                      {this.createSelectLocationItems()}\n                    </AvField>\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size'>Item</Label>\n                    <AvField\n                      Label\n                      type=\"select\"\n                      name={`itemid`}\n                      onChange={this.onhandlerChange}\n                    >\n                      <option value=\"\">select Item</option>\n                      {this.createSelectItems()}\n                    </AvField>\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <Button\n                    Label\n                    color=\"primary\"\n                    disabled={loading}\n                    type=\"submit\"\n                    onClick={this.submit}\n                    style={{ marginTop: \"30px\" }}\n                  >\n                    Find\n                  </Button>\n                </Col>\n              </Row>\n            </CardBody>\n          </Card>\n        </AvForm>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    locationlistvalue: state.locationlistvalue,\n    masteritemlistvalues: state.masteritemlistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  null\n)(ItemQuantitySearch);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { Breadcrumb, BreadcrumbItem, Alert } from \"reactstrap\";\nimport ItemSearch from \"./TotalQuantityForm/ItemQuantitySearch\";\nimport DataTable from \"../../../Components/Table/DatatablePage\";\nimport { getLocationList } from \"../../../actions/Location\";\nimport {\n  totalitemvaluesearch,\n  getMasterItemList\n} from \"../../../actions/Transaction\";\nimport { ar } from \"date-fns/locale\";\n\nclass TotalQuantity extends React.Component {\n  state = {\n    itemlist: [],\n    success: false\n  };\n  componentDidMount() {\n    this.props.getLocationList();\n    this.props.getMasterItemList();\n  }\n  submit = data => {\n    return this.props.totalitemvaluesearch(data).then(data => {\n   \n       //console.log(itemsArray)\n      // var i=0,j,arr = [],count=0,isAllDuplicate=false;\n      // for(i=0;i<data.itemlist.length;i++){\n      //   j=i;\n      //   j = j + 1;\n      //   console.log(data.itemlist[i].itemquantity)\n      //   if(j < data.itemlist.length){\n      //     if(data.itemlist[i].itemname == data.itemlist[j].itemname){\n      //       count += parseInt(data.itemlist[i].itemquantity)\n      //       isAllDuplicate = true;\n      //     }\n      //     else if(data.itemlist[i].itemname != data.itemlist[j].itemname){\n      //       count += parseInt(data.itemlist[j].itemquantity)\n      //       if(count > 0)\n      //         data.itemlist[i].itemquantity = count\n      //       arr.push(data.itemlist[i])\n      //       count=0;\n      //       isAllDuplicate=false;\n      //     }\n      //   }\n      //   else if(j == data.itemlist.length){\n      //     console.log(data.itemlist[i].itemquantity)\n      //      if(count > 0)\n      //          data.itemlist[i].itemquantity = data.itemlist[i].itemquantity + count\n      //   }\n\n        \n      // }\n\n      // //console.log(count)\n      // //console.log(i)\n      // if(isAllDuplicate){\n      //   i > data.itemlist.length - 1 ?  arr.push(data.itemlist[i-1]) : arr.push(data.itemlist[i])\n      // }\n        \n\n      // console.log(arr)\n\n      // data.itemlist = arr;\n      \n      \n      const itemlist = data.itemlist.map(item => {\n        return {\n          // locationname: item.locationname,\n          itemname: item.itemname,\n          itemdescription: item.itemdescription,\n          itemquantity: item.itemquantity\n        };\n      });\n      this.setState({\n        ...this.state,\n        itemlist,\n        success: true\n      });\n   \n    });\n  };\n  render() {\n    const { success, itemlist } = this.state;\n    const columnvalue = [\n      // {\n      //   label: \"location\",\n      //   field: \"locationname\",\n      //   sort: \"asc\",\n      //   width: 40\n      // },\n      {\n        label: \"Item Code\",\n        field: \"itemname\",\n        sort: \"asc\",\n        width: 40\n      },\n      {\n        label: \"Item Description\",\n        field: \"itemdescription\",\n        sort: \"asc\",\n        width: 40\n      },\n      {\n        label: \"Quantity\",\n        field: \"itemquantity\",\n        sort: \"asc\",\n        width: 40\n      }\n    ];\n    return (\n      <div className=\"container mg-t-20\">\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to=\"/admin_dashboard\">Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/transaction_page\">Transaction</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to='/onhand'>On Hand</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>Total Item Quantity</BreadcrumbItem>\n        </Breadcrumb>\n        <div>\n          <ItemSearch submit={this.submit} />\n        </div>\n        <div className=\"mg-t-20\">\n          {itemlist.length > 0 ? (\n            <DataTable\n              columnvalue={columnvalue}\n              rowvalues={itemlist}\n              className=\"totalquantity\"\n            />\n          ) : (\n              <div>\n                <Alert color=\"info\" Label>Result Not Found.</Alert>\n              </div>\n            )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  { getLocationList, totalitemvaluesearch, getMasterItemList }\n)(TotalQuantity);\n","import axios from 'axios';\n\nexport default {\n  order: {\n    addorder: data => {\n      return axios\n        .post(`${process.env.REACT_APP_BASE_URL}/order/addorder`, {\n          data\n        })\n        .then(res => {\n          return res.data.orderdata;\n        });\n    },\n\n    updateaddorder: data => {\n      return axios\n        .post(`${process.env.REACT_APP_BASE_URL}/order/updateworkorder`, {\n          data\n        })\n        .then(res => {\n          return res.data.orderdata;\n        });\n    },\n\n    getorder: () => {\n      return axios\n        .get(`${process.env.REACT_APP_BASE_URL}/order/getorder`)\n        .then(res => {\n          return res.data.orderlist;\n        });\n    }\n  }\n};\n","import { normalize } from 'normalizr';\nimport api from '../Services/order';\nimport { ADD_ORDER, ORDER_FETCHED } from '../Services/types';\nimport { orderListSchema } from '../Schemas/schemas';\n\nconst orderCreated = orderlist => {\n  return {\n    type: ADD_ORDER,\n    orderlist\n  };\n};\n\nconst orderFetched = orderlist => {\n  return {\n    type: ORDER_FETCHED,\n    orderlist\n  };\n};\n\nexport const addorder = data => {\n  return dispatch => {\n    return api.order.addorder(data).then(orderlistvalues => {\n      return dispatch(\n        orderCreated(normalize(orderlistvalues, orderListSchema))\n      );\n    });\n  };\n};\n\nexport const updateaddorder = data => {\n  return dispatch => {\n    return api.order.updateaddorder(data).then(orderlistvalues => {\n      return dispatch(\n        orderCreated(normalize(orderlistvalues, orderListSchema))\n      );\n    });\n  };\n};\n\n\n\nexport const getorder = () => {\n  return dispatch => {\n    return api.order.getorder().then(orderlist => {\n      console.log(orderlist);\n      const orderlistvalues = orderlist.orderdata;\n      console.log(orderlistvalues);\n      return dispatch(\n        orderFetched(normalize(orderlistvalues, [orderListSchema]))\n      );\n    });\n  };\n};\n\nexport const searchquotation = customerid => {\n  return dispatch => {\n    return api.quotation.searchquotation(customerid);\n  };\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { AvForm, AvField, AvGroup } from 'availity-reactstrap-validation';\nimport {\n  Button,\n  Label,\n  Alert,\n  Card,\n  CardBody,\n  CardHeader,\n  Row,\n  Col,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from 'reactstrap';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport axios from \"axios\";\n\nclass OrderForm extends React.Component {\n  state = {\n    data: {\n      selectedItemlist: {\n        id: [],\n        itemname: [],\n        itemdescription: [],\n        itemtype: [],\n        itemrate: [],\n        itemuom: [],\n        itemlocation: [],\n        costperunit: [],\n        quantity: [],\n        totalcost: [],\n        remarks: [],\n        totalweight: [],\n        readystock: [],\n        firstround: [],\n        secondround: [],\n        thirdround: []\n      },\n      workorderno: '',\n      companydetails: '',\n      contactperson: '',\n      date: new Date(),\n      officeno: '',\n      deliveryschedule: new Date(),\n      orderdate: new Date(),\n      deliveryaddress: '',\n      distance: '',\n      sitecontactperson: '',\n      gstno: '',\n      pono: '',\n      values: ['']\n    },\n    errors: {},\n    materialoptionlistvalues: [],\n    supplierdetaillistvalue: [],\n    supplierdetaillistvalueobject: {},\n    masteritemlistvalues: [],\n    masteritemlistvaluesobject: {},\n    currencylistvalues: [],\n    uom: [],\n    locationlistvalue: [],\n    loading: false,\n    success: false\n  };\n\n  componentDidMount() {\n\n    if (this.props.ID != undefined) {\n      this.getWorkorderDetails(this.props.ID)\n    }\n  }\n\n  getWorkorderDetails(id) {\n    this.setState({ loading: true });\n    axios\n      .get(`${process.env.REACT_APP_BASE_URL}/order/getsingleworkorder/${id}`)\n      .then(res => {\n\n         if (res.data.orderlist.orderdata.length > 0) {\n           let founddata = res.data.orderlist.orderdata;\n            console.log(founddata[0])\n           const newState = Object.assign({}, this.state);\n           newState.data.workorderno = founddata[0].workorderno;\n           newState.data.companydetails = founddata[0].companydetails;\n           newState.data.contactperson = founddata[0].contactperson;\n           newState.data.date = new Date(founddata[0].date);\n           newState.data.officeno = founddata[0].officeno;\n           newState.data.deliveryschedule =  new Date(founddata[0].deliveryschedule);\n           newState.data.orderdate =  new Date(founddata[0].orderdate);\n           newState.data.deliveryaddress = founddata[0].deliveryaddress;\n           newState.data.gstno = founddata[0].gstno;\n           newState.data.distance = founddata[0].distance;\n           newState.data.values = founddata[0].addeditemlist;\n           newState.data.pono = founddata[0].pono\n           newState.data.sitecontactperson = founddata[0].sitecontactperson\n           if(founddata[0].customerid) \n            this.handleChange2(founddata[0].customerid._id)\n\n          if (founddata[0].addeditemlist.length > 0) {\n\n            for (var i = 0; i < founddata[0].addeditemlist.length; i++) {\n         \n\n              founddata[0].addeditemlist[i].quantity = founddata[0].addeditemlist[i].quantity == null || founddata[0].addeditemlist[i].quantity == '' ?\n                founddata[0].addeditemlist[i].quantity = 0 : founddata[0].addeditemlist[i].quantity\n              founddata[0].addeditemlist[i].quantity = (founddata[0].addeditemlist[i].quantity).toString()\n\n              founddata[0].addeditemlist[i].costperunit = founddata[0].addeditemlist[i].costperunit == null || founddata[0].addeditemlist[i].costperunit == '' ?\n                founddata[0].addeditemlist[i].costperunit = 0 : founddata[0].addeditemlist[i].costperunit\n              founddata[0].addeditemlist[i].costperunit = (founddata[0].addeditemlist[i].costperunit).toString()\n\n              founddata[0].addeditemlist[i].totalcost = founddata[0].addeditemlist[i].totalcost == null || founddata[0].addeditemlist[i].totalcost == '' ?\n                founddata[0].addeditemlist[i].totalcost = 0 : founddata[0].addeditemlist[i].totalcost\n              founddata[0].addeditemlist[i].totalcost = (founddata[0].addeditemlist[i].totalcost).toString()\n\n              founddata[0].addeditemlist[i].remarks = founddata[0].addeditemlist[i].remarks == null || founddata[0].addeditemlist[i].remarks == '' ?\n               \"\" : founddata[0].addeditemlist[i].remarks\n\n              \n               \n              newState.data.selectedItemlist.itemname.push(founddata[0].addeditemlist[i].itemname)\n              newState.data.selectedItemlist.itemdescription.push(founddata[0].addeditemlist[i].itemdescription)\n              newState.data.selectedItemlist.itemtype.push(founddata[0].addeditemlist[i].itemtype._id)\n              newState.data.selectedItemlist.remarks.push(founddata[0].addeditemlist[i].remarks)\n              \n            \n              newState.data.selectedItemlist.itemuom.push(founddata[0].addeditemlist[i].itemuom._id)\n              newState.data.selectedItemlist.quantity.push(founddata[0].addeditemlist[i].quantity)\n\n              newState.data.selectedItemlist.costperunit.push(founddata[0].addeditemlist[i].costperunit)\n\n              newState.data.selectedItemlist.totalcost.push(founddata[0].addeditemlist[i].totalcost)\n              newState.data.selectedItemlist.totalweight.push(founddata[0].addeditemlist[i].totalweight)\n              newState.data.selectedItemlist.readystock.push(founddata[0].addeditemlist[i].readystock)\n              newState.data.selectedItemlist.firstround.push(founddata[0].addeditemlist[i].firstround)\n              newState.data.selectedItemlist.secondround.push(founddata[0].addeditemlist[i].secondround)\n              newState.data.selectedItemlist.thirdround.push(founddata[0].addeditemlist[i].thirdround)\n   \n\n             // setTimeout(()=>{\n                newState.data.selectedItemlist.id.push(founddata[0].addeditemlist[i].id._id)\n             // })\n              \n              \n            }\n          }\n\n          \n            this.setState(newState,()=>{\n              console.log(this.state.data.selectedItemlist)\n            });\n\n         \n         \n          // if (founddata[0].addeditemlist.length > 0) {\n          //   founddata[0].addeditemlist.filter((item, index) => {\n          //     this.selectitemchange(item.id._id, index);\n          //   })\n          // }\n          this.setState({ loading: false });\n        }\n        else {\n          this.setState({ count: 0,loading: false })\n          \n        }\n      },\n        error => {\n          \n          this.setState({ success: false, message: 'Server error.' });\n        });\n  }\n\n\n  componentWillReceiveProps(props) {\n\n    console.log(this.props.orderlistvalues);\n    const materialoptionlistvalues = Object.values(\n      props.materialoptionlistvalues\n    );\n    // const supplierdetaillistvalue = Object.values(\n    //   props.supplierdetaillistvalue\n    // );\n    // const supplierdetaillistvalueobject = props.supplierdetaillistvalue;\n    const masteritemlistvalues = Object.values(props.masteritemlistvalues);\n    const masteritemlistvaluesobject = props.masteritemlistvalues;\n    const currencylistvalues = Object.values(props.currencylistvalues);\n    const uomlistvalues = Object.values(props.uomlistvalues);\n    const locationlistvalue = Object.values(props.locationlistvalue);\n    const purchaseorderlist = Object.keys(this.props.purchaseorderlistvalues);\n    const orderlistvalues = Object.keys(this.props.orderlistvalues);\n    if (this.props.ID == undefined) {\n      const workorderno =\n      orderlistvalues.length > 0 ? 1 + orderlistvalues.length : 1;\n\n      this.setState({\n        ...this.state,\n        masteritemlistvalues,\n        masteritemlistvaluesobject,\n        materialoptionlistvalues,\n        currencylistvalues,\n        locationlistvalue,\n        uom: uomlistvalues,\n        data: {\n          ...this.state.data,\n          workorderno\n        }\n      },() =>{\n        if(orderlistvalues.length == 0)\n          this.getOrderData()\n      });\n    }\n    else{\n      this.setState({\n        ...this.state,\n        masteritemlistvalues,\n        masteritemlistvaluesobject,\n        materialoptionlistvalues,\n        currencylistvalues,\n        locationlistvalue,\n        uom: uomlistvalues\n      });\n    }\n\n  }\n\n  getOrderData(){\n    if(Object.keys(this.props.orderlistvalues).length == 0){\n      axios\n      .get(`${process.env.REACT_APP_BASE_URL}/order/getorder`)\n      .then(res => {\n        console.log(res.data.orderlist.orderdata)\n         //if (res.data.orderlist.orderdata.length > 0) {\n           \n          let workorderno =\n          res.data.orderlist.orderdata.length > 0 ? 1 + res.data.orderlist.orderdata.length : 1;\n\n          this.setState({\n            ...this.state,\n            data: {\n              ...this.state.data,\n              workorderno\n            }\n          });\n        //}\n      },\n        error => {\n          this.setState({ success: false, message: 'Server error.' });\n        });\n    }\n  }\n\n  handleChangeDeliveryDate = date => {\n    this.setState({\n      data: {\n        ...this.state.data,\n        requestdeliverydate: date\n      }\n    });\n  };\n  handleChangeDeliveryschedule = date => {\n    this.setState({\n      data: {\n        ...this.state.data,\n        deliveryschedule: date\n      }\n    });\n  };\n  handleChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  totalValue = () => {\n    const { totalcost } = this.state.data.selectedItemlist;\n    if (totalcost.length > 0) {\n      const totalvalue = totalcost\n        .map((value, i) => {\n          if (value) {\n            return parseFloat(value);\n          } else {\n            return 0;\n          }\n        })\n        .reduce((a, b) => {\n          return a + b;\n        });\n      this.setState({\n        ...this.state.data,\n        data: {\n          ...this.state.data,\n          totalvalue\n        }\n      });\n    }\n  };\n\n  selectitemchange = (e, index) => {\n    let selected_id = e.target ? e.target.value : e;\n    if (selected_id) {\n      const selected_item = this.state.masteritemlistvaluesobject[selected_id];\n      console.log(selected_item)\n      const selectedItemlist = { ...this.state.data.selectedItemlist };\n      selectedItemlist.id[index] = selected_item.id;\n      selectedItemlist.itemname[index] = selected_item.masteritemtypename;\n      // selectedItemlist.itemdescription[index] =\n      //   selected_item.masteritemdescription;\n      selectedItemlist.itemdescription[index] = selected_item.masteritemshortdescription == '' ? selected_item.masteritemdescription \n        : selected_item.masteritemshortdescription\n\n      selectedItemlist.itemtype[index] = selected_item.masteritemtype._id;\n      selectedItemlist.itemrate[index] = selected_item.masteritemrate;\n      selectedItemlist.itemuom[index] = selected_item.masteritemuom._id;\n     // selectedItemlist.itemlocation[index] = null;\n\n\n\n        if (this.props.ID == undefined) {\n          selectedItemlist.costperunit[index] = selected_item.masteritemcostperunit\n          ? selected_item.masteritemcostperunit.toString()\n          : '';\n        selectedItemlist.quantity[index] = (1).toString();\n        selectedItemlist.totalcost[index] = selected_item.masteritemcostperunit\n          ? selected_item.masteritemcostperunit.toString()\n          : '';\n\n          selectedItemlist.totalweight[index] = \n          selected_item.masteritemunitwt != \"undefined\" && selected_item.masteritemunitwt != \"null\" && \n          selected_item.masteritemunitwt != \"\" ? (1 * parseFloat(selected_item.masteritemunitwt)).toFixed(2) : ''\n          \n        } \n      // this.state.data.selectedItemlist.id[index] = selected_item.id;\n      // this.state.data.selectedItemlist.itemdescription[index] =\n      //   selected_item.masteritemdescription;\n      this.setState({\n        ...this.state.data,\n        data: {\n          ...this.state.data,\n          selectedItemlist\n          // selectedItemlist: {\n          //   ...this.state.data.selectedItemlist,\n          //   id: [...this.state.data.selectedItemlist.id, selected_item.id]\n          // itemname: [...this.state.data.selectedItemlist.itemname, \"\"],\n          // itemdescription: [\n          //   ...this.state.data.selectedItemlist.itemdescription,\n          //   \"\"\n          // ],\n          // itemtype: [...this.state.data.selectedItemlist.itemtype, \"\"],\n          // itemrate: [...this.state.data.selectedItemlist.itemrate, \"\"],\n          // itemuom: [...this.state.data.selectedItemlist.itemuom, \"\"],\n          // costperunit: [...this.state.data.selectedItemlist.costperunit, \"\"]\n          // }\n        }\n      });\n    }\n    this.totalValue();\n  };\n\n  locationChange = (e, index) => {\n    const selected_location = e.target.value;\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.itemlocation[index] = selected_location;\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n  };\n\n  onhandlerChange = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  onSubjectHandler = e => {\n    this.setState({\n      ...this.state,\n      data: { ...this.state.data, [e.target.name]: e.target.value }\n    });\n  };\n\n  filterItems(itemarray,key) {\n    return itemarray.sort((a,b)=>{return a[key].toLowerCase().localeCompare(b[key].toLowerCase())})\n  }\n\n  createSelectItems = () => {\n    let items = [];\n    let masteritemlistvalues = this.state.masteritemlistvalues;\n    masteritemlistvalues = this.filterItems(masteritemlistvalues,'masteritemtypename')\n    masteritemlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.masteritemtypename}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  createSelectItemTypes = () => {\n    let items = [];\n    const materialoptionlistvalues = this.state.materialoptionlistvalues;\n    materialoptionlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.masteritemtypename}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  createSelectCurrencyItems = () => {\n    let items = [];\n    const currencylistvalues = this.state.currencylistvalues;\n    currencylistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.currencyname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  createSelectUomItems = () => {\n    let items = [];\n    const uomlistvalues = this.state.uom;\n    uomlistvalues.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.uomname}\n        </option>\n      );\n    });\n    return items;\n  };\n  createSelectLocationItems = () => {\n    let items = [];\n    const locationlistvalue = this.state.locationlistvalue;\n    locationlistvalue.map((option, i) => {\n      items.push(\n        <option key={i} value={option.id}>\n          {option.locationname}\n        </option>\n      );\n    });\n    return items;\n  };\n\n  handleClick = e => {\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        values: [...this.state.data.values, ''],\n        selectedItemlist: {\n          ...this.state.data.selectedItemlist,\n          id: [...this.state.data.selectedItemlist.id, ''],\n          itemname: [...this.state.data.selectedItemlist.itemname, ''],\n          itemdescription: [\n            ...this.state.data.selectedItemlist.itemdescription,\n            ''\n          ],\n          itemtype: [...this.state.data.selectedItemlist.itemtype, ''],\n          itemrate: [...this.state.data.selectedItemlist.itemrate, ''],\n          itemuom: [...this.state.data.selectedItemlist.itemuom, ''],\n          itemlocation: [...this.state.data.selectedItemlist.itemlocation, ''],\n          costperunit: [...this.state.data.selectedItemlist.costperunit, ''],\n          quantity: [...this.state.data.selectedItemlist.quantity, 1],\n          totalcost: [...this.state.data.selectedItemlist.totalcost, ''],\n          remarks: [...this.state.data.selectedItemlist.remarks, ''],\n          totalweight: [...this.state.data.selectedItemlist.totalweight, ''],\n          readystock: [...this.state.data.selectedItemlist.readystock, ''],\n          firstround: [...this.state.data.selectedItemlist.firstround, ''],\n          secondround: [...this.state.data.selectedItemlist.secondround, ''],\n          thirdround: [...this.state.data.selectedItemlist.thirdround, '']\n        }\n      }\n    });\n  };\n  removeClick = (e, index) => {\n    let removeItem = { ...this.state.data };\n    let values = removeItem.values;\n    let id = removeItem.selectedItemlist.id;\n    let itemname = removeItem.selectedItemlist.itemname;\n    let itemdescription = removeItem.selectedItemlist.itemdescription;\n    let itemtype = removeItem.selectedItemlist.itemtype;\n    let itemrate = removeItem.selectedItemlist.itemrate;\n    let itemuom = removeItem.selectedItemlist.itemuom;\n    let itemlocation = removeItem.selectedItemlist.itemlocation;\n    let costperunit = removeItem.selectedItemlist.costperunit;\n    let quantity = removeItem.selectedItemlist.quantity;\n    let totalcost = removeItem.selectedItemlist.totalcost;\n\n    let remarks = removeItem.selectedItemlist.remarks;\n    let totalweight = removeItem.selectedItemlist.totalweight;\n    let readystock = removeItem.selectedItemlist.readystock;\n    let firstround = removeItem.selectedItemlist.firstround;\n    let secondround = removeItem.selectedItemlist.secondround;\n    let thirdround = removeItem.selectedItemlist.thirdround;\n\n\n    values.splice(index, 1);\n    id.splice(index, 1);\n    itemname.splice(index, 1);\n    itemdescription.splice(index, 1);\n    itemtype.splice(index, 1);\n    itemrate.splice(index, 1);\n    itemuom.splice(index, 1);\n    itemlocation.splice(index, 1);\n    costperunit.splice(index, 1);\n    quantity.splice(index, 1);\n    totalcost.splice(index, 1);\n\n    remarks.splice(index, 1);\n    totalweight.splice(index, 1);\n    readystock.splice(index, 1);\n    firstround.splice(index, 1);\n    secondround.splice(index, 1);\n    thirdround.splice(index, 1);\n\n    this.setState({\n      ...this.state,\n      data: {\n        ...this.state.data,\n        values,\n        selectedItemlist: {\n          ...this.state.data.selectedItemlist,\n          id,\n          itemname,\n          itemdescription,\n          itemtype,\n          itemrate,\n          itemuom,\n          itemlocation,\n          costperunit,\n          quantity,\n          totalcost,\n          remarks,\n          totalweight,\n          readystock,\n          firstround,\n          secondround,\n          thirdround\n        }\n      }\n    });\n  };\n\n  quantityChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    console.log(selectedItemlist)\n    \n    const selected_item = this.state.masteritemlistvaluesobject[selectedItemlist.id[index]];\n    console.log(selected_item)\n\n\n    const costperunit = selectedItemlist.costperunit[index] || null;\n    const wtperunit = selectedItemlist.totalweight[index] || null;\n    selectedItemlist.quantity[index] = e.target.value;\n    const totalValue = costperunit\n      ? e.target.value * costperunit  \n      : null || undefined || '';\n    selectedItemlist.totalcost[index] = totalValue ? parseFloat(totalValue).toFixed(2)\n      : '';\n\n\n    selectedItemlist.totalweight[index] = \n    selected_item.masteritemunitwt != \"undefined\" && selected_item.masteritemunitwt != \"null\" && \n    selected_item.masteritemunitwt != \"\" ? (e.target.value * parseFloat(selected_item.masteritemunitwt)).toFixed(2) : ''\n    \n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n    this.totalValue();\n  };\n  remarkChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.remarks[index] = e.target.value;\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n  };\n  weightChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.totalweight[index] = e.target.value;\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n  };\n  stockChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.readystock[index] = e.target.value;\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n  };\n  secondChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.secondround[index] = e.target.value;\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n  };\n  firstChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.firstround[index] = e.target.value;\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n  };\n  thirdChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.thirdround[index] = e.target.value;\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n  };\n\n  unitChange = (e, index) => {\n    const selectedItemlist = { ...this.state.data.selectedItemlist };\n    selectedItemlist.costperunit[index] = e.target.value;\n    const totalcost =\n      parseFloat(selectedItemlist.quantity[index]) *\n      parseFloat(selectedItemlist.costperunit[index]);\n    selectedItemlist.totalcost[index] = totalcost\n      ? totalcost.toFixed(2)\n      : null || '';\n    this.setState({\n      ...this.state.data,\n      data: {\n        ...this.state.data,\n        selectedItemlist\n      }\n    });\n    this.totalValue();\n  };\n\n  handleValidSubmit = () => {\n    let AddedIteminfo = [];\n    const { supplierdetail, selectedItemlist } = this.state.data;\n    const { values } = this.state.data;\n    const id = selectedItemlist.id;\n    const itemname = selectedItemlist.itemname;\n    const itemdescription = selectedItemlist.itemdescription;\n    const itemtype = selectedItemlist.itemtype;\n    const itemrate = selectedItemlist.itemrate;\n    const itemuom = selectedItemlist.itemuom;\n    const itemlocation = selectedItemlist.itemlocation;\n    const costperunit = selectedItemlist.costperunit;\n    const quantity = selectedItemlist.quantity;\n    const totalcost = selectedItemlist.totalcost;\n    const remarks = selectedItemlist.remarks;\n\n    const totalweight = selectedItemlist.totalweight;\n    const readystock = selectedItemlist.readystock;\n    const firstround = selectedItemlist.firstround;\n    const secondround = selectedItemlist.secondround;\n    const thirdround = selectedItemlist.thirdround;\n\n    values.forEach(function(value, i) {\n      let obj = {};\n      obj.id = id[i] || null;\n      obj.itemname = itemname[i] || null;\n      obj.itemdescription = itemdescription[i] || null;\n      obj.itemtype = itemtype[i] || null;\n      obj.itemrate = itemrate[i] || null;\n      obj.itemuom = itemuom[i] || null;\n      obj.itemlocation = itemlocation[i] || null;\n      obj.costperunit = costperunit[i] || null;\n      obj.quantity = quantity[i] || null;\n      obj.totalcost = totalcost[i] || null;\n      obj.remarks = remarks[i] || null;\n      obj.totalweight = totalweight[i] || null;\n      obj.readystock = readystock[i] || null;\n      obj.firstround = firstround[i] || null;\n      obj.secondround = secondround[i] || null;\n      obj.thirdround = thirdround[i] || null;\n      AddedIteminfo.push(obj);\n    });\n    const { data } = this.state;\n    data['AddedIteminfo'] = AddedIteminfo;\n    this.setState({ loading: true });\n    console.log(JSON.stringify(data));\n    this.props\n      .submit(data)\n      .then(() => {\n        this.setState({ loading: false, errors: {}, success: true });\n        if (this.props.ID == undefined) \n        this.myFormRef.reset();\n      })\n      .catch(err => {\n        console.log(err)\n        this.setState({ loading: false, errors: {}, success: true });\n        if (this.props.ID == undefined) \n        this.myFormRef.reset();\n      });\n  };\n\n  toggle = () => {\n    this.setState({ ...this.state, success: false });\n  };\n\n  handleInvalidSubmit = () => {\n    console.log('invalid submit');\n  };\n  render() {\n    const { data, errors, loading, success } = this.state;\n    return (\n      <div>\n        <div>\n          {!!success ? (\n            // <Alert color=\"info\">Purchase Order is generated successfully</Alert>\n            <Modal\n              isOpen={success}\n              toggle={this.toggle}\n              className={this.props.className}\n            >\n              <ModalHeader toggle={this.toggle}>Work Order</ModalHeader>\n              <ModalBody>Work order is edited/generated successfully</ModalBody>\n              <ModalFooter>\n                <Button color='primary' onClick={this.toggle}>\n                  Ok\n                </Button>\n              </ModalFooter>\n            </Modal>\n          ) : null}\n        </div>\n        <AvForm\n          onValidSubmit={this.handleValidSubmit}\n          onInvalidSubmit={this.handleInvalidSubmit}\n          ref={el => (this.myFormRef = el)}\n        >\n          <Card>\n            <CardHeader>Work order</CardHeader>\n            <CardBody>\n              <Row>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='workorderno'>Work Order No</Label>\n                    <span className='required-label'>*</span>\n                    <AvField\n                      name='workorderno'\n                      type='text'\n                      id='workorderno'\n                      value={data.workorderno || null}\n                      onChange={this.handleChange}\n                      validate={{\n                        required: {\n                          value: true,\n                          errorMessage: 'Please enter DC'\n                        }\n                      }}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={3}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='companydetails'>Company Name & address </Label>\n                    <AvField\n                      name='companydetails'\n                      type='text'\n                      id='companydetails'\n                      value={data.companydetails}\n                      onChange={e => this.handleChange(e)}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <Label className='small-font-size' for='contactperson'>Contact Person</Label>\n                  <AvField\n                    name='contactperson'\n                    type='text'\n                    id='contactperson'\n                    value={data.contactperson || ' ' || null}\n                    onChange={e => this.handleChange(e)}\n                  />\n                </Col>\n                <Col sm={2}>\n                  <Label className='small-font-size' for='officeno'>Office Number</Label>\n                  <AvField\n                    name='officeno'\n                    type='number'\n                    id='officeno'\n                    value={data.officeno || ' ' || null}\n                    onChange={e => this.handleChange(e)}\n                  />\n                </Col>\n              </Row>\n              <Row>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='deliveryschedule'>Delivery Schedule</Label>\n                    <DatePicker\n                    autoComplete=\"new-password\"\n                      selected={data.deliveryschedule}\n                      onChange={this.handleChangeDeliveryschedule}\n                      className='form-control'\n                      autoComplete=\"new-password\"\n                      dateFormat='dd/MM/yyyy'\n                      id='deliveryschedule'\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <Label className='small-font-size' for='orderdate'>Order Date</Label>\n                  <DatePicker\n                  autoComplete=\"new-password\"\n                    selected={data.orderdate}\n                    onChange={this.handleChangeDeliveryDate}\n                    className='form-control'\n                    autoComplete=\"new-password\"\n                    dateFormat='dd/MM/yyyy'\n                    id='orderdate'\n                  />\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='deliveryaddress'>Delivery Address</Label>\n                    <AvField\n                      name='deliveryaddress'\n                      type='text'\n                      id='deliveryaddress'\n                      value={data.deliveryaddress}\n                      onChange={this.handleChange}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='distance'>Distance(KM)</Label>\n                    <AvField\n                      name='distance'\n                      type='text'\n                      id='distance'\n                      value={data.distance}\n                      onChange={this.handleChange}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='sitecontactperson'>Site contact person</Label>\n                    <AvField\n                      name='sitecontactperson'\n                      type='text'\n                      id='sitecontactperson'\n                      value={data.sitecontactperson}\n                      onChange={this.handleChange}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={2}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='gstno'>GST No</Label>\n                    <AvField\n                      name='gstno'\n                      type='text'\n                      id='gstno'\n                      value={data.gstno}\n                      onChange={this.handleChange}\n                    />\n                  </AvGroup>\n                </Col>\n                <Col sm={1}>\n                  <AvGroup>\n                    <Label className='small-font-size' for='pono'>PO NO</Label>\n                    <AvField\n                      name='pono'\n                      type='number'\n                      id='pono'\n                      value={data.pono}\n                      onChange={this.handleChange}\n                    />\n                  </AvGroup>\n                </Col>\n              </Row>\n              <Row>\n                <div className='mg-t-20'>\n                  <Button color='info' onClick={this.handleClick} type='button'>\n                    Add Item\n                  </Button>\n                </div>\n              </Row>\n              <div className='purchaseorder-item-row'>\n                {data.values.map((values, index) => {\n                  return (\n                    <div key={index}>\n                      <div className='purchaseorder-table'>\n                        <Row key={index}>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for='selectitem'>Item Code</Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                type='select'\n                                name={`selectitem${index}`}\n                                value={data.selectedItemlist.id[index]}\n                                onChange={e => this.selectitemchange(e, index)}\n                                required={true}\n                              >\n                                <option value=''>select Item</option>\n                                {this.createSelectItems()}\n                              </AvField>\n                            </AvGroup>\n                          </Col>\n                          <Col sm={2}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`masteritemdescription${index}`}>\n                                Description\n                              </Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                name={`masteritemdescription${index}`}\n                                type='text'\n                                id='masteritemdescription'\n                                value={\n                                  data.selectedItemlist.itemdescription[index]\n                                }\n                                onChange={this.onChange}\n                                validate={{\n                                  required: {\n                                    value: true,\n                                    errorMessage:\n                                      'Please enter Item Description'\n                                  }\n                                \n                                 \n                                }}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`totalweight${index}`}>Total weight</Label>\n                              <AvField\n                                name={`totalweight${index}`}\n                                type='text'\n                                id={`totalweight${index}`}\n                                value={\n                                  data.selectedItemlist.totalweight[index] \n                                \n                                }\n                                onChange={e => this.weightChange(e, index)}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`quantity${index}`}>Quantity</Label>\n                              <span className='required-label'>*</span>\n                              <AvField\n                                name={`quantity${index}`}\n                                type='number'\n                                id={`quantity${index}`}\n                                value={\n                                  data.selectedItemlist.quantity[index]\n                                }\n                                onChange={e => this.quantityChange(e, index)}\n                                validate={{\n                                  required: {\n                                    value: true,\n                                    errorMessage: 'Please enter Item Quantity'\n                                  },\n                                  minLength: {\n                                    value: 1,\n                                    errorMessage: 'quantity value is required'\n                                  },\n                                  pattern: {\n                                    value: '^[0-9.]*$',\n                                    errorMessage: 'Please enter valid quantity'\n                                  }\n                                }}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`readystock${index}`}>Ready stock</Label>\n                              <AvField\n                                name={`readystock${index}`}\n                                type='text'\n                                id={`readystock${index}`}\n                                value={\n                                  data.selectedItemlist.readystock[index]\n                                }\n                                onChange={e => this.stockChange(e, index)}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`firstround${index}`} >1st round</Label>\n                              <AvField\n                                name={`firstround${index}`}\n                                type='text'\n                                id={`firstround${index}`}\n                                value={\n                                  data.selectedItemlist.firstround[index]\n                                }\n                                onChange={e => this.firstChange(e, index)}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`secondround${index}`}>2nd round</Label>\n                              <AvField\n                                name={`secondround${index}`}\n                                type='text'\n                                id={`secondround${index}`}\n                                value={\n                                  data.selectedItemlist.secondround[index]\n                                }\n                                onChange={e => this.secondChange(e, index)}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`thirdround${index}`}>3rd round</Label>\n                              <AvField\n                                name={`thirdround${index}`}\n                                type='text'\n                                id={`thirdround${index}`}\n                                value={\n                                  data.selectedItemlist.thirdround[index]\n                                }\n                                onChange={e => this.thirdChange(e, index)}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={2}>\n                            <AvGroup>\n                              <Label className='small-font-size' for={`remarks${index}`}>Remarks</Label>\n                              <AvField\n                                name={`remarks${index}`}\n                                type='text'\n                                id={`remarks${index}`}\n                                value={\n                                  data.selectedItemlist.remarks[index]\n                                }\n                                onChange={e => this.remarkChange(e, index)}\n                              />\n                            </AvGroup>\n                          </Col>\n                          <Col sm={1}>\n                            <Button\n                              type='button'\n                              color='danger'\n                              onClick={e => this.removeClick(e, index)}\n                              style={{ marginTop: '30px' }}\n                            >\n                              -\n                            </Button>\n                          </Col>\n                        </Row>\n                      </div>\n                    </div>\n                  );\n                })}\n              </div>\n              <Row>\n                <div className='mg-20'>\n                  <Button\n                    color='primary'\n                    disabled={loading}\n                    className='lgn-loader'\n                  >\n                    Submit\n                    {/* {loading} */}\n                  </Button>\n                </div>\n              </Row>\n            </CardBody>\n          </Card>\n        </AvForm>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    supplierdetaillistvalue: state.supplierdetaillistvalue,\n    masteritemlistvalues: state.masteritemlistvalues,\n    materialoptionlistvalues: state.masteritemtypenamevalue,\n    currencylistvalues: state.currencylistvalue,\n    uomlistvalues: state.uomlistvalue,\n    locationlistvalue: state.locationlistvalue,\n    purchaseorderlistvalues: state.purchaseorderlistvalue,\n    challanlistvalues: state.challanlistvalues,\n    orderlistvalues: state.orderlistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  null\n)(OrderForm);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport {\n  getMasterItemList,\n  getMasterItemTypes\n} from '../../../../actions/Transaction';\nimport { connect } from 'react-redux';\nimport { getUomList } from '../../../../actions/uom';\nimport { getCustomerList } from '../../../../actions/customerContact';\nimport { addorder } from '../../../../actions/order';\nimport { updateaddorder } from '../../../../actions/order';\nimport { getorder } from '../../../../actions/order';\nimport OrderForm from './OrderForm';\nimport CustomLoader from '../../../../Components/loader/loader';\n\nclass AddOrder extends React.Component {\n  state = {\n    loading: false,\n    ID:this.props.match.params.id\n  };\n  componentDidMount() {\n    this.props.getCustomerList();\n    this.props.getMasterItemTypes();\n    this.props.getMasterItemList();\n    this.props.getUomList();\n    this.props.getorder();\n  }\n  \n  componentWillReceiveProps() {\n    \n  }\n\n  submit = data => {\n    console.log(data);\n    this.dataHandler(true);\n\n    if(this.props.match.params.id != undefined){\n      data['_id'] = this.props.match.params.id;\n      return this.props\n      .updateaddorder(data)\n      .then(data => {\n        this.dataHandler(false);\n        return data;\n      })\n      .catch(err => {\n        this.dataHandler(false);\n        throw err;\n      });\n    }\n    else{\n      return this.props\n      .addorder(data)\n      .then(data => {\n        this.dataHandler(false);\n        return data;\n      })\n      .catch(err => {\n        this.dataHandler(false);\n        throw err;\n      });\n    }\n\n  };\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n  render() {\n    const { loading,ID } = this.state;\n    return (\n      <div className='container mg-t-20'>\n        {loading ? <CustomLoader /> : null}\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to='/admin_dashboard'>Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to='/transaction_page'>Transactions</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to='/work-order'>Work Order</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>Add Work order</BreadcrumbItem>\n        </Breadcrumb>\n        <div>\n          <OrderForm submit={this.submit} ID={ID}/>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  {\n    getMasterItemList,\n    getMasterItemTypes,\n    getUomList,\n    getorder,\n    getCustomerList,\n    addorder,\n    updateaddorder\n  }\n)(AddOrder);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { getorder } from '../../../../actions/order';\nimport { Button, Alert } from 'reactstrap';\nimport DataTable from '../../../../Components/Table/DatatablePage';\nimport CustomLoader from '../../../../Components/loader/loader';\n\nclass ViewOrder extends React.Component {\n  state = {\n    count: 0,\n    loading: true,\n    orderlistvalues: []\n  };\n  componentDidMount() {\n    this.props.getorder();\n    console.log(this.props);\n    if (this.props.orderlistvalues) {\n      let orderlist = Object.values(this.props.orderlistvalues);\n      orderlist.sort(function(a, b){\n        return parseInt(b.workorderno) - parseInt(a.workorderno);\n      });\n      const orderlistvalues = orderlist.map(quotationvalue => {\n        return {\n          workorderno: quotationvalue.workorderno,\n          companyname: quotationvalue.companydetails,\n          contactperson: quotationvalue.contactperson,\n          officeno: quotationvalue.officeno,\n          view: (\n            <div className=\"actionbuttons\">\n              <Button\n                Label\n                color='primary'\n                onClick={() => {\n                  this.updateButton(quotationvalue._id);\n                }}\n              >\n                Print\n              </Button>\n              <Button\n                Label\n                color='primary'\n                onClick={() => {\n                  this.updateworkorder(quotationvalue._id);\n                }}\n              >\n                Edit\n              </Button>\n              </div>\n          )\n        };\n      });\n      this.setState({ ...this.state, orderlistvalues });\n      this.dataHandler(false);\n    }\n  }\n  componentWillReceiveProps(props) {\n    let orderlist = Object.values(props.orderlistvalues);\n    //orderlist= orderlist.sort((a, b) => b.workorderno.toLowerCase().localeCompare(a.workorderno.toLowerCase()));\n    orderlist.sort(function(a, b){\n      return parseInt(b.workorderno) - parseInt(a.workorderno);\n    });\n    console.log(props);\n    const orderlistvalues = orderlist.map(quotationvalue => {\n      return {\n        workorderno: quotationvalue.workorderno,\n        companyname: quotationvalue.companydetails,\n        contactperson: quotationvalue.contactperson,\n        officeno: quotationvalue.officeno,\n        view: (\n          <div className=\"actionbuttons\">\n            <Button\n              Label\n              color='primary'\n              onClick={() => {\n                this.updateButton(quotationvalue._id);\n              }}\n            >\n              Print\n            </Button>\n            <Button\n              Label\n              color='primary'\n              onClick={() => {\n                this.updateworkorder(quotationvalue._id);\n              }}\n            >\n              Edit\n            </Button>\n            </div>\n        )\n      };\n    });\n    this.setState({ ...this.state, orderlistvalues });\n    this.dataHandler(false);\n  }\n\n  updateButton = id => {\n    // let path = `/view_invoicepdf/${id}`;\n    // window.open(path, '_blank');\n    let path = `/view_orderpdf/${id}`;\n    //window.open(path, \"_blank\");\n    this.props.history.push(path);\n  };\n\n\n  updateworkorder= id => {\n    // let path = `/view_invoicepdf/${id}`;\n    // window.open(path, '_blank');\n    let path = `/editworkorder/${id}`;\n    //window.open(path, \"_blank\");\n    this.props.history.push(path);\n  };\n\n\n  dataHandler = value => {\n    this.setState({ loading: value });\n  };\n\n  render() {\n    const { loading, count, orderlistvalues } = this.state;\n    console.log(orderlistvalues);\n    const columnvalue = [\n      {\n        label: 'Work order',\n        field: 'workorderno',\n        sort: 'asc',\n        width: 40\n      },\n      {\n        label: 'Company Name',\n        field: 'companyname',\n        sort: 'asc',\n        width: 40\n      },\n      {\n        label: 'Contact Person',\n        field: 'contactperson',\n        sort: 'asc',\n        width: 40\n      },\n      {\n        label: 'Office Number',\n        field: 'officeno',\n        sort: 'asc',\n        width: 40\n      },\n      {\n        label: 'Print/Edit',\n        field: 'view',\n        sort: 'asc',\n        width: 40\n      }\n    ];\n    return (\n      <div className='container mg-t-20'>\n        {loading ? <CustomLoader /> : null}\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to='/admin_dashboard'>Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to='/transaction_page'>Transactions</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to='/work-order'>Work order</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>List</BreadcrumbItem>\n        </Breadcrumb>\n        <div>\n          <DataTable \n          rowvalues={orderlistvalues} \n          columnvalue={columnvalue}\n          className=\"orderlist\" />\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    orderlistvalues: state.orderlistvalues\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { getorder }\n)(ViewOrder);\n","import React from 'react';\nimport logo from '../../../../Images/logo.png';\nimport client from '../../../../Images/client.png';\n\nimport { connect } from 'react-redux';\nimport moment from 'moment';\nimport {\n  Document,\n  Page,\n  Text,\n  View,\n  StyleSheet,\n  Image\n} from '@react-pdf/renderer';\nimport {\n  TableCell,\n  Table,\n  TableHeader,\n  TableBody,\n  DataTableCell\n} from '@david.kucsai/react-pdf-table';\nimport styled from '@react-pdf/styled-components';\n\n// Create styles\nconst styles = StyleSheet.create({\n  textcenter: { textAlign: 'center' },\n  textright: { textAlign: 'right' },\n  textleft: { textAlign: 'left' },\n  paddingleft: { paddingLeft: 5 },\n  margin: {\n    margin: 5\n  },\n  pagepadding: {\n    padding: 20\n  },\n  section: {\n    position: 'relative',\n    display: 'flex',\n    flexDirection: 'row',\n    overflow: 'hidden'\n  },\n  headerfont3: {\n    textAlign: 'left',\n    padding: 3,\n    fontSize: 10\n  },\n  headerfont4: {\n    textAlign: 'left',\n    padding: 3,\n    fontSize: 10\n  },\n  section_column: {\n    position: 'relative',\n    display: 'flex',\n    flexDirection: 'column',\n    overflow: 'hidden'\n  },\n  myHeight: {\n    height: '100px'\n  },\n  headerfont: {\n    fontSize: 10,\n    fontWeight: 'bold'\n  },\n  descriptionText: {\n    fontSize: 10,\n    fontWeight: 'normal'\n  },\n  headerfont2: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    textAlign: 'right'\n  },\n  headerfontleft: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    textAlign: 'left'\n  },\n  billingaddress: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    textAlign: 'left',\n    height: 70\n  },\n  shippingaddress: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    textAlign: 'left',\n    height: 130\n  },\n  row: {\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  dcaddress: {\n    fontSize: 10\n  },\n  dcaddress_left: {\n    fontSize: 10\n  },\n  view_border: {\n    border: '1pt solid #000',\n    flexGrow: 1,\n    height: 100\n  },\n  column: {\n    width: 190\n  },\n  headerwidth: {\n    width: 210,\n    padding: 20\n  },\n  headerwidthdate: {\n    width: 210,\n    paddingTop: 23,\n    fontSize: 10\n  },\n  headerwidthlogo: {\n    width: 350,\n    fontSize: 10\n  },\n  logo: {\n    width: 70\n  },\n  header_name: {\n    width: 350,\n    fontWeight: 'bold',\n    fontSize: 18,\n    textAlign: 'center',\n    paddingLeft: 100\n  },\n  header_sub_name: {\n    width: '100%',\n    fontSize: 10,\n    textAlign: 'center'\n  },\n  header_sub_name_phone: {\n    width: '100%',\n    fontSize: 10,\n    fontWeight: 'bolder',\n    textAlign: 'center'\n  },\n  header_tintext: {\n    fontSize: 10,\n    fontWeight: 900\n  },\n  header_sub_name3: {\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  headerwidthAddress: {\n    width: 260,\n    fontSize: 10,\n    padding: 2,\n    textAlign: 'right'\n  },\n  refstyle: {\n    paddingBottom: 20,\n    fontSize: 10\n  },\n  headerpadding: {\n    padding: 20\n  },\n  flexgrow: {\n    flexGrow: 1\n  },\n  fontsize18: {\n    fontSize: 10\n  },\n  kindattend: {\n    paddingTop: 15,\n    fontSize: 10\n  },\n  yourref: {\n    fontSize: 13,\n    paddingBottom: 10\n  },\n  main: {\n    fontSize: 10\n  },\n  tableheaderbgcolor: {\n    backgroundColor: 'red',\n    color: 'red',\n    background: 'red'\n  },\n  footerfixed: {\n    position: 'absolute',\n    bottom: 0,\n    width: '100%'\n  }\n});\n\nconst Small = ({ children }) => {\n  return (\n    <Text style={{ fontSize: 10, padding: 5 }}>{children}</Text>\n  )\n}\nconst Description = ({ children }) => {\n  return (\n    <Text style={{ fontSize: 10, padding: 5, textAlign: 'left', wordWrap: 'break-word' }}>{children}</Text>\n  )\n}\n\nconst SmallBold = ({ children }) => {\n  return (\n    <Text style={{ fontSize: 10, fontWeight: 'bold' }}>{children}</Text>\n  )\n}\n\n// Create Document Component\n\nconst MyDocument = ({ orderlistvalues, data_cond }) => {\n  console.log(JSON.stringify(orderlistvalues));\n  let data = orderlistvalues.addeditemlist;\n  let totalwt = 0\n  if(data.length > 0){\n   \n    for(var i=0;i<data.length;i++){\n      totalwt += parseFloat(data[i].totalweight)\n    }\n  }\n  console.log('data');\n  console.log(totalwt);\n  totalwt = parseFloat(totalwt)\n  totalwt = totalwt.toFixed(2)\n  const totalrs = orderlistvalues.totalvalue ? orderlistvalues.totalvalue : '';\n  const taxableAmount = orderlistvalues.taxableamount;\n  const date = moment(orderlistvalues.date).format('DD MMM, YYYY');\n  const podate = moment(orderlistvalues.podate).format('DD MMM, YYYY');\n  const purchaseorderdate = moment(orderlistvalues.purchaseorderdate).format(\n    'DD MMM, YYYY'\n  );\n  const billingaddress = orderlistvalues.billingaddress;\n  const vendorcode = orderlistvalues.vendorcode;\n  const {\n    freightcharges,\n    subtotal,\n    cgst,\n    sgst,\n    igst,\n    total,\n    grandtotal,\n    deliverychallannumber,\n    goodsDescription,\n    invoicenumber,\n    roundoffamount\n  } = orderlistvalues;\n\n  let {\n    workorderno,\n    companydetails,\n    contactperson,\n    officeno,\n    deliveryschedule,\n    orderdate,\n    gstno,\n    deliveryaddress,\n    distance,\n    sitecontactperson,\n    pono\n  } = orderlistvalues;\n  //orderdate = new Date(orderdate)\n  const purchaseordernumber = orderlistvalues.purchaseordernumber;\n\n  const tax = orderlistvalues.tax ? orderlistvalues.tax : '';\n  const taxpercentage = orderlistvalues.tax ? orderlistvalues.tax / 100 : '';\n  // const grandtotal = taxpercentage * totalrs;\n  //   const selectecontactlist = orderlistvalues.selectedcontactlist[0]\n  //     ? orderlistvalues.selectedcontactlist[0].suppliercontactname\n  //     : \"\";\n  const cond_data = data_cond;\n  const tableComponentTwo = [];\n  for (let i = 0; i < data.length; i++) {\n    if (data[i] && data[i + 1]) {\n      tableComponentTwo.push([data[i], data[i + 1]]);\n    } else {\n      tableComponentTwo.push([data[i]]);\n    }\n    ++i;\n  }\n  const datalength = tableComponentTwo.length - 1;\n  const tableComponent = tableComponentTwo.map((data, i) => {\n    if (i >= 1 && i === datalength) {\n      return (\n        <Page size='A4' style={styles.pagepadding} wrap key={i}>\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={data}\n          >\n            <TableHeader\n              textAlign={'center'}\n              style={{ backgroundColor: 'tomato' }}\n            >\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Text style={styles.headerfont}>SL No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont}>Particular</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Weight Each kgs(+/-5%)</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Rate/{'\\n'}Each RS</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Dist %</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>\n                  After Dist Rate/Each{'\\n'}Rs\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Qty</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Total RS</Text>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell\n                weighting={0.08}\n                style={styles.padding}\n                getContent={r => r.slno}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.6}\n                getContent={r => {\n                  return (\n                    <View>\n                      <Text>{r.itemname + '\\n'}</Text>\n                      <Text>{'\\n'}</Text>\n                      <Image\n                        src={`${process.env.REACT_APP_BASE_URL}/${r.itemimage}`}\n                      />\n                      <Text>{'\\n'}</Text>\n                    </View>\n                  );\n                }}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => {\n                  return r.weighteach;\n                }}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.costperunit} />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.quantity} />\n              <DataTableCell weighting={0.2} getContent={r => r.totalcost} />\n            </TableBody>\n          </Table>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1.087}>\n                <Text style={styles.headerfont2}>Taxable Amount</Text>\n              </TableCell>\n              <TableCell weighting={0.13}>\n                <Text style={{ textAlign: 'center' }}>{taxableAmount}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1.087}>\n                <Text style={styles.headerfont2}>GST %</Text>\n              </TableCell>\n              <TableCell weighting={0.13}>\n                <Text style={{ textAlign: 'center' }}>{tax}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={1.087}>\n                <Text style={styles.headerfont2}>Grand Total Rs</Text>\n              </TableCell>\n              <TableCell weighting={0.13}>\n                <Text style={{ textAlign: 'center' }}>\n                  {(grandtotal + +totalrs).toFixed(2)}\n                </Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n        </Page>\n      );\n    } else if (i >= 1) {\n      return (\n        <Page size='A4' style={styles.pagepadding} wrap key={i}>\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={data}\n          >\n            <TableHeader\n              textAlign={'center'}\n              style={{ backgroundColor: 'tomato' }}\n            >\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Text style={styles.headerfont}>SL No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont}>Particular</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Weight Each kgs(+/-5%)</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Rate/{'\\n'}Each RS</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Dist %</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>\n                  After Dist Rate/Each{'\\n'}Rs\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Qty</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Total RS</Text>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell\n                weighting={0.08}\n                style={styles.padding}\n                getContent={r => r.slno}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.6}\n                getContent={r => {\n                  return (\n                    <View>\n                      <Text>{r.itemname + '\\n'}</Text>\n                      <Text>{'\\n'}</Text>\n                      <Image\n                        src={`${process.env.REACT_APP_BASE_URL}/${r.itemimage}`}\n                      />\n                      <Text>{'\\n'}</Text>\n                    </View>\n                  );\n                }}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.weighteach} />\n              <DataTableCell weighting={0.2} getContent={r => r.costperunit} />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.quantity} />\n              <DataTableCell weighting={0.2} getContent={r => r.totalcost} />\n            </TableBody>\n          </Table>\n        </Page>\n      );\n    } else if (i < 1 && i === datalength) {\n      return (\n        <View>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.1}>\n                <Text style={{ textAlign: 'center' }}>Slno</Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Text style={{ textAlign: 'center' }}>Particulars</Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Text style={{ textAlign: 'center' }}>Remarks</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          {/* 8 starts here */}\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.1}>\n                <Text style={{ textAlign: 'center' }}>1</Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Text>Company Name & address</Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Text style={{ textAlign: 'center' }}>{companydetails}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.1}>\n                <Text style={{ textAlign: 'center' }}>2</Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Text>Contact person</Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Text style={{ textAlign: 'center' }}>{contactperson}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.1}>\n                <Text style={{ textAlign: 'center' }}>3</Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Text>Off / Mob no</Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Text style={{ textAlign: 'center' }}>{officeno}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.1}>\n                <Text style={{ textAlign: 'center' }}>4</Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Text>Delivery Schedule</Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Text style={{ textAlign: 'center' }}>{deliveryschedule}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.1}>\n                <Text style={{ textAlign: 'center' }}>5</Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Text>Delivery address</Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Text style={{ textAlign: 'center' }}>{deliveryaddress}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.1}>\n                <Text style={{ textAlign: 'center' }}>6</Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Text>Site contact person</Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Text style={{ textAlign: 'center' }}>{contactperson}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.1}>\n                <Text style={{ textAlign: 'center' }}>7</Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Text>GST No</Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Text style={{ textAlign: 'center' }}>{gstno}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.1}>\n                <Text style={{ textAlign: 'center' }}>8</Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Text>PO No</Text>\n              </TableCell>\n              <TableCell weighting={0.5}>\n                <Text style={{ textAlign: 'center' }}>{pono}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={data}\n            key={i}\n          >\n            <TableHeader\n              textAlign={'center'}\n              style={{ backgroundColor: 'tomato' }}\n            >\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Text style={styles.headerfont}>SL No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont}>Material</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Total weight</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>qty</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Ready stock</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>1st trip</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>2nd trip</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>3rd trip</Text>\n              </TableCell>\n              <TableCell weighting={0.4}>\n                <Text style={styles.headerfont}>Remarks</Text>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell\n                weighting={0.08}\n                style={styles.padding}\n                getContent={r => r.slno}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.6}\n                getContent={r => r.itemname}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.totalweight} />\n              <DataTableCell weighting={0.2} getContent={r => r.quantity} />\n              <DataTableCell weighting={0.2} getContent={r => r.readystock} />\n              <DataTableCell weighting={0.2} getContent={r => r.firstround} />\n              <DataTableCell weighting={0.2} getContent={r => r.secondround} />\n              <DataTableCell weighting={0.2} getContent={r => r.thirdround} />\n              <DataTableCell weighting={0.4} getContent={r => r.remarks} />\n            </TableBody>\n          </Table>\n          \n          <Text>{'\\n'}</Text>\n          \n          <Text>{'\\n'}</Text>\n          <Text>{'\\n'}</Text>\n          <Text>{'\\n'}</Text>\n          <Text>{'\\n'}</Text>\n          <View style={styles.header_sub_name3}>\n            <Text style={styles.header_tintext}>Managing Director</Text>\n            <Text style={styles.header_tintext}>Manger</Text>\n            <Text style={styles.header_tintext}>Prepared by</Text>\n          </View>\n          {/* ends here */}\n        </View>\n      );\n    } else {\n      return (\n        <View>\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={data}\n            key={i}\n          >\n            <TableHeader textAlign={'center'} style={styles.tableheaderbgcolor}>\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Text style={styles.headerfont}>SL No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont}>Particular</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Weight Each kgs(+/-5%)</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Rate/{'\\n'}Each RS</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Dist %</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>\n                  After Dist Rate/Each{'\\n'}Rs\n                </Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Qty</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont}>Total RS</Text>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell\n                weighting={0.08}\n                style={styles.padding}\n                getContent={r => r.slno}\n              />\n              <DataTableCell\n                style={styles.padding}\n                weighting={0.6}\n                getContent={r => {\n                  return (\n                    <View>\n                      <Text>{r.itemname + '\\n'}</Text>\n                      <Text>{'\\n'}</Text>\n                      <Image\n                        src={`${process.env.REACT_APP_BASE_URL}/${r.itemimage}`}\n                      />\n                      <Text>{'\\n'}</Text>\n                    </View>\n                  );\n                }}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.weighteach} />\n              <DataTableCell weighting={0.2} getContent={r => r.costperunit} />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell\n                weighting={0.2}\n                getContent={r => r.itemdiscount.toString()}\n              />\n              <DataTableCell weighting={0.2} getContent={r => r.quantity} />\n              <DataTableCell weighting={0.2} getContent={r => r.totalcost} />\n            </TableBody>\n          </Table>\n        </View>\n      );\n    }\n  });\n\n  return (\n    <Document>\n      <Page size='A4' style={styles.pagepadding} wrap>\n        <View style={styles.section}>\n          <Image src={logo} />\n          <Text style={styles.logo}></Text>\n          <Text style={styles.headerwidthAddress}>\n          <SmallBold>Office & Works</SmallBold>{'\\n'}\n            Plot no.40 & 41 (corner) Road, no. 5,{'\\n'}\n            KIADB Obadenahalli industrial Area,{'\\n'}\n            3rd phase Doddaballapura,{'\\n'}\n            Bangalore Rural District.-561203{'\\n'}\n            Karnataka, INDIA{'\\n'}\n            GST No. 29AAGCP4018E1ZJ{'\\n'}\n            Mob: +91 9900069150{'\\n'}\n            Email id: info@pondhan.com{'\\n'}\n            Visit Us: www.pondhan.com{'\\n'}\n          </Text>\n        </View>\n        <Text style={{ fontSize: 14, fontWeight: 900, textAlign: 'center', margin: 8 }}>WORK ORDER</Text>\n        <Text style={{ fontSize: 12, fontWeight: 500, textAlign: 'right', margin: 8 }}>Workorder Date : {orderdate}</Text>\n        <View>\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.1}>\n                <Text style={styles.headerfont3}>Slno</Text>\n              </TableCell>\n              <TableCell weighting={0.4}>\n                <Text style={[styles.headerfont3, { textAlign: 'left' }]}>Particulars</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={[styles.headerfont3, { textAlign: 'left' }]}>Remarks</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n          {/* 8 starts here */}\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.1}>\n                <Text style={styles.headerfont3}>1</Text>\n              </TableCell>\n              <TableCell weighting={0.4}>\n                <Text style={styles.headerfont4}>Workorder No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont4}>{workorderno}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.1}>\n                <Text style={styles.headerfont3}>2</Text>\n              </TableCell>\n              <TableCell weighting={0.4}>\n                <Text style={styles.headerfont4}>Company Name & address</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont4}>{companydetails}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.1}>\n                <Text style={styles.headerfont3}>3</Text>\n              </TableCell>\n              <TableCell weighting={0.4}>\n                <Text style={styles.headerfont4}>Contact person</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont4}>{contactperson}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.1}>\n                <Text style={styles.headerfont3}>4</Text>\n              </TableCell>\n              <TableCell weighting={0.4}>\n                <Text style={styles.headerfont4}>Off / Mob no</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont4}>{officeno}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n\n          {/* <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.1}>\n                <Text style={styles.headerfont3}>5</Text>\n              </TableCell>\n              <TableCell weighting={0.4}>\n                <Text style={styles.headerfont4}>Workorder Date</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont4}>{orderdate}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table> */}\n\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.1}>\n                <Text style={styles.headerfont3}>5</Text>\n              </TableCell>\n              <TableCell weighting={0.4}>\n                <Text style={styles.headerfont4}>Delivery Schedule</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont4}>{deliveryschedule}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.1}>\n                <Text style={styles.headerfont3}>6</Text>\n              </TableCell>\n              <TableCell weighting={0.4}>\n                <Text style={styles.headerfont4}>Delivery address</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont4}>{deliveryaddress}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.1}>\n                <Text style={styles.headerfont3}>7</Text>\n              </TableCell>\n              <TableCell weighting={0.4}>\n                <Text style={styles.headerfont4}>Site contact person</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont4}>{contactperson}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.1}>\n                <Text style={styles.headerfont3}>8</Text>\n              </TableCell>\n              <TableCell weighting={0.4}>\n                <Text style={styles.headerfont4}>GST No</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont4}>{gstno}</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n\n          \n\n          <Table style={styles.section}>\n            <TableHeader>\n              <TableCell weighting={0.1}>\n                <Text style={styles.headerfont3}>9</Text>\n              </TableCell>\n              <TableCell weighting={0.4}>\n                <Text style={styles.headerfont4}>Distance</Text>\n              </TableCell>\n              <TableCell weighting={0.6}>\n                <Text style={styles.headerfont4}>{distance} Km</Text>\n              </TableCell>\n            </TableHeader>\n          </Table>\n\n          \n          <Text>{'\\n'}</Text>\n\n          <Table\n            style={(styles.section, styles.padding, styles.tableheaderbgcolor)}\n            data={data}\n          >\n            <TableHeader\n              textAlign={'center'}\n              style={{ backgroundColor: 'tomato' }}\n            >\n              <TableCell weighting={0.08} style={{ backgroundColor: 'tomato' }}>\n                <Text style={styles.headerfont3}>SL</Text>\n              </TableCell>\n              <TableCell weighting={0.7}>\n                <Text style={styles.headerfont3}>Material</Text>\n              </TableCell>\n              <TableCell weighting={0.3}>\n                <Text style={styles.headerfont3}>Total weight</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont3}>qty</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont3}>Ready stock</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont3}>1st trip</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont3}>2nd trip</Text>\n              </TableCell>\n              <TableCell weighting={0.2}>\n                <Text style={styles.headerfont3}>3rd trip</Text>\n              </TableCell>\n              <TableCell weighting={0.3}>\n                <Text style={styles.headerfont3}>Remarks</Text>\n              </TableCell>\n            </TableHeader>\n            <TableBody textAlign={'center'}>\n              <DataTableCell\n                weighting={0.08}\n               \n                getContent={r => <Text style={styles.headerfont4}>{r.slno}</Text>}\n              />\n              <DataTableCell\n                \n                weighting={0.7}\n                getContent={r => <Text style={styles.headerfont4}>{r.itemname}</Text>}\n              />\n              <DataTableCell  weighting={0.3} getContent={r => <Text style={styles.headerfont4}>{r.totalweight}</Text>} />\n              <DataTableCell weighting={0.2} getContent={r => <Text style={styles.headerfont4} >{r.quantity}</Text>} />\n              <DataTableCell weighting={0.2} getContent={r => <Text style={styles.headerfont4} >{r.readystock}</Text>} />\n              <DataTableCell weighting={0.2} getContent={r => <Text style={styles.headerfont4} >{r.firstround}</Text>} />\n              <DataTableCell  weighting={0.2} getContent={r => <Text style={styles.headerfont4}>{r.secondround}</Text>} />\n              <DataTableCell  weighting={0.2} getContent={r => <Text style={styles.headerfont4}>{r.thirdround}</Text>} />\n              <DataTableCell  weighting={0.3} getContent={r => <Text style={styles.headerfont4}>{r.remarks}</Text>} />\n            </TableBody>\n          </Table>\n          <Text>{'\\n'}</Text>\n          <Text style={styles.headerfont4}>Total Weight : {totalwt}</Text>\n          <Text>{'\\n'}</Text>\n          <Text>{'\\n'}</Text>\n          <Text>{'\\n'}</Text>\n\n          <View style={styles.header_sub_name3}>\n            <Text style={styles.header_tintext}>Managing Director</Text>\n            <Text style={styles.header_tintext}>Manger</Text>\n            <Text style={styles.header_tintext}>Prepared by</Text>\n          </View>\n          {/* ends here */}\n        </View>\n      </Page>\n    </Document>\n  );\n};\n\nexport default MyDocument;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ReactPDF from '@react-pdf/renderer';\nimport moment from 'moment';\nimport { PDFViewer } from '@react-pdf/renderer';\nimport { getorder } from '../../../../actions/order';\nimport MyDocument from './Component';\nimport logo from '../../../../Images/logo.png';\nimport './ViewOrder';\n\nclass ViewOrderPdf extends React.Component {\n  state = {\n    orderlistvalues: {},\n    status: false,\n    link: ''\n  };\n  componentDidMount() {\n    this.props.getorder();\n    const quotationid = this.props.match.params.id;\n    console.log(this.props.orderlistvalues);\n    const orderlistvalues = this.props.orderlistvalues[quotationid];\n    orderlistvalues.requestdeliverydate = moment(orderlistvalues.date).format(\n      'DD MMM, YYYY'\n    );\n    orderlistvalues.deliveryschedule = moment(\n      orderlistvalues.deliveryschedule\n    ).format('DD MMM, YYYY');\n    \n    orderlistvalues.orderdate = moment(\n      orderlistvalues.orderdate\n    ).format('DD MMM, YYYY');\n\n    orderlistvalues.addeditemlist = orderlistvalues.addeditemlist.map(\n      (itemlist, i) => {\n\n        return {\n          slno: (i + 1).toString(),\n          itemname: itemlist.itemdescription ? itemlist.itemdescription : '',\n          weighteach: itemlist.id.masteritemunitwt\n            ? itemlist.id.masteritemunitwt\n            : '',\n          itemimage: itemlist.id.masteritemimage\n            ? itemlist.id.masteritemimage\n            : '',\n          quantity: itemlist.quantity ? itemlist.quantity.toString() : '',\n          // itemdiscount: itemlist.itemdiscount.toString()\n          //   ? itemlist.itemdiscount\n          //   : \"0\",\n          remarks: itemlist.remarks ? itemlist.remarks.toString() : '',\n          totalweight: itemlist.totalweight\n            ? itemlist.totalweight.toString()\n            : '',\n          readystock: itemlist.readystock ? itemlist.readystock.toString() : '',\n          firstround: itemlist.firstround ? itemlist.firstround.toString() : '',\n          secondround: itemlist.secondround\n            ? itemlist.secondround.toString()\n            : '',\n          thirdround: itemlist.thirdround ? itemlist.thirdround.toString() : '',\n          unit: itemlist.itemuom ? itemlist.itemuom.uomname.toString() : ''\n        };\n      }\n    );\n    const customerid = orderlistvalues.customerid;\n    const customernumber = orderlistvalues.customernumber;\n    const customername = orderlistvalues.customername;\n    console.log('--COMPONENTDIDMOUNT--');\n    console.log(orderlistvalues);\n    setTimeout(() => {\n      this.setState({\n        ...this.state.purchaseorderlistvalues,\n        orderlistvalues,\n        status: true\n      });\n    },5000);\n    this.dynamicClick();\n  }\n  dynamicClick() {\n    if (document.getElementsByClassName('pdf-class')) {\n      if (\n        document.getElementsByClassName('pdf-class')[0].children.length <= 1\n      ) {\n        setTimeout(() => {\n          this.dynamicClick();\n        }, 4000);\n      } else if (\n        document.getElementsByClassName('pdf-class')[0].children.length > 1\n      ) {\n        this.setState({\n          link: document.getElementsByClassName('pdf-class')[0].children[1].src\n          // status : undefined,\n        },()=>{\n          setTimeout(() => {\n            document.getElementById('D1').click();\n            this.props.history.push('/orderlist');\n          }, 300);\n        });\n\n      }\n    } else {\n    }\n  }\n  render() {\n    const data_cond = [\n      {\n        slno: '1',\n        title: 'Invoices',\n        value: '2 copies Invoices (original & duplicate)'\n      },\n      {\n        slno: '2',\n        title: 'Tax & Duty',\n        value: 'Included'\n      },\n      {\n        slno: '3',\n        title: 'Payment Schedule',\n        value: '15 days from the date of delivery'\n      },\n      {\n        slno: '4',\n        title: 'Delivery Schedule',\n        value: 'Immediately'\n      },\n      {\n        slno: '5',\n        title: 'Billing address & GST No',\n        value:\n          'M/s Pondhan Scaffolding Pvt Ltd \\n Plot no. 40/41, Road no.5, Obedanahalli,'\n      },\n      {\n        slno: '6',\n        title: 'Delivery Address',\n        value: 'M/s Pondhan Scaffolding Pvt Ltd'\n      }\n    ];\n    const { status, orderlistvalues, link } = this.state;\n    console.log(this.state.orderlistvalues);\n    return (\n      <div>\n        <div className='pdf-class'>\n          Downloading file.Please wait.\n          {/* {!status && (\n          <h1 style={{ 'position': 'absolute','left': '50%','top': '50%','transform': 'translate(-50%, -50%);'}}>Downloading file.Please wait.</h1>\n        )} */}\n          <a href={link} download id='D1'></a>\n          {status && (\n            <PDFViewer>\n              <MyDocument\n                orderlistvalues={this.state.orderlistvalues}\n                data_cond={data_cond}\n                logo={logo}\n              />\n            </PDFViewer>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\nfunction mapStateToProps(state) {\n  return {\n    orderlistvalues: state.orderlistvalues\n  };\n}\nexport default connect(\n  mapStateToProps,\n  { getorder }\n)(ViewOrderPdf);\n","import React from \"react\";\nimport { Button } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport { getUser } from \"../../actions/actions\";\nimport DataTable from \"../../Components/Table/DatatablePage\";\nimport moment from \"moment\";\n\nclass AdminRole extends React.Component {\n  state = {\n    count: \"\",\n    userdata: []\n  };\n\n  updateButton = id => {\n    let path = `/updateuser/${id}`;\n    this.props.history.push(path);\n  };\n\n  componentDidMount() {\n    this.props.getUser().catch(err => {\n      console.log(err);\n    });\n  }\n\n  componentWillReceiveProps(props) {\n    const userlist = Object.values(props.userlist);\n    const userdata = userlist.map((userdata, i) => {\n      return {\n        title: userdata.title,\n        name: `${userdata.firstname} ${userdata.lastname}`,\n        email: userdata.email,\n        phone: userdata.phone,\n        startdat: moment(userdata.startdate).format(\"DD MMM, YYYY\"),\n        enddate: userdata.enddate ? moment(userdata.enddate).format(\"DD MMM, YYYY\"):\" \",\n        persontype: userdata.persontype,\n        department: userdata.department,\n        job: userdata.job,\n        location: userdata.location,\n        view: (\n          <Button\n            color=\"primary\"\n            onClick={() => {\n              this.updateButton(userdata.id);\n            }}\n          >\n            Edit\n          </Button>\n        )\n      };\n    });\n    this.setState({ userdata });\n  }\n  render() {\n    const columnvalue = [\n      {\n        label: \"Title\",\n        field: \"title\",\n        sort: \"asc\",\n        width: 75\n      },\n      {\n        label: \"Full Name\",\n        field: \"name\",\n        sort: \"asc\",\n        width: 75\n      },\n      {\n        label: \"Email\",\n        field: \"email\",\n        sort: \"asc\",\n        width: 270\n      },\n      {\n        label: \"Phone\",\n        field: \"phone\",\n        sort: \"asc\",\n        width: 200\n      },\n      {\n        label: \"Start date\",\n        field: \"startdate\",\n        sort: \"asc\",\n        width: 100\n      },\n      {\n        label: \"End date\",\n        field: \"enddate\",\n        sort: \"asc\",\n        width: 150\n      },\n      {\n        label: \"Person type\",\n        field: \"persontype\",\n        sort: \"asc\",\n        width: 100\n      },\n      {\n        label: \"Department\",\n        field: \"department\",\n        sort: \"asc\",\n        width: 100\n      },\n      {\n        label: \"Job\",\n        field: \"job\",\n        sort: \"asc\",\n        width: 100\n      },\n      {\n        label: \"Location\",\n        field: \"location\",\n        sort: \"asc\",\n        width: 100\n      },\n      {\n        label: \"Edit\",\n        field: \"Edit\",\n        width: 100\n      }\n    ];\n    return (\n      <div style={{ overflow: \"hidden\" }} className=\"mg-t-20\">\n        <DataTable columnvalue={columnvalue} rowvalues={this.state.userdata} />\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    userlist: state.userlist\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  { getUser }\n)(AdminRole);\n","import React from \"react\";\n\nclass EmployeeRole extends React.Component {\n  render() {\n    return (\n      <div className=\"container\">\n        <h6>Employee List</h6>\n      </div>\n    );\n  }\n}\n\nexport default EmployeeRole;\n","\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\n\nclass BOMPage extends Component {\n  render() {\n    return (\n      <div>\n        <div className='container mg-t-20'>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to='/admin_dashboard'>Home</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link to='/transaction_page'>Setup</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>BOM</BreadcrumbItem>\n          </Breadcrumb>\n          <div class='admin-dashboard-icons'>\n            <ul className='clearfix'>\n                \n\n            <li className=\"bg-colo-lg-red\">\n              <div className=\"icon-eleme\">\n                <Link to=\"/addproduct\">\n                  <i className=\"fas fa-plus-circle fa-3x\"></i>\n                  <div style={{ paddingTop: \"5px\" }}>\n                    <span>Add BOM</span>\n                  </div>\n                </Link>\n              </div>\n            </li>\n            <li className=\"bg-colo-lg-red\">\n              <div className=\"icon-eleme\">\n                <Link to=\"/viewproductlist\">\n                  <i className=\"fas fa-list fa-3x\"></i>\n                  <div style={{ paddingTop: \"5px\" }}>\n                    <span>BOM List</span>\n                  </div>\n                </Link>\n              </div>\n            </li> \n\n\n\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default BOMPage;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nclass ChallanPage extends Component {\n  render() {\n    return (\n      <div>\n        <div className='container mg-t-20'>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to='/admin_dashboard'>Home</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link to='/transaction_page'>Transaction</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Delivery challan</BreadcrumbItem>\n          </Breadcrumb>\n          <div class='admin-dashboard-icons'>\n            <ul className='clearfix'>\n              <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                  <Link to='/addchallan'>\n                    <i class='fas fa-plus-circle fa-3x'></i>\n                    <div style={{ 'padding-top': '5px' }}>\n                      <span>Add Challan</span>\n                    </div>\n                  </Link>\n                </div>\n              </li>\n\n              <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                  <Link to='/challanlist'>\n                    <i class='fas fa-list fa-3x'></i>\n                    <div style={{ 'padding-top': '5px' }}>\n                      <span>Challan List</span>\n                    </div>\n                  </Link>\n                </div>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default ChallanPage;\n","\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nclass CRMPage extends Component {\n  render() {\n    return (\n      <div>\n        <div className='container mg-t-20'>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to='/admin_dashboard'>Home</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link to='/transaction_page'>Transaction</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>CRM</BreadcrumbItem>\n          </Breadcrumb>\n          <div class='admin-dashboard-icons'>\n            <ul className='clearfix'>\n          \n\n            <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                    <Link to='/enquiry'>\n                    <i className='fas fa-envelope fa-3x'></i>\n                    <div style={{ paddingTop: '5px' }}>\n                        <span>New Enquiry</span>\n                    </div>\n                    </Link>\n                </div>\n                </li>\n                     \n                <li className='bg-color-lg-blue'>\n                  <div className='icon-eleme'>\n                    <Link to='/quotationpage'>\n                      <i className='fas fa-credit-card fa-3x'></i>\n                      <div style={{ paddingTop: '5px' }}>\n                        <span>Quotations</span>\n                      </div>\n                    </Link>\n                  </div>\n                </li>\n                <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                    <Link to='/customerlist'>\n                    <i className='fas fa-users fa-3x'></i>\n                    <div style={{ paddingTop: '5px' }}>\n                        <span>Customer Transaction</span>\n                    </div>\n                    </Link>\n                </div>\n            </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default CRMPage;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\n\nclass CustomerPage extends React.Component {\n  render() {\n    return (\n      <div className=\"container mg-t-20\">\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to=\"/admin_dashboard\">Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/inventory_page\">Setup</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>customer</BreadcrumbItem>\n        </Breadcrumb>\n        <div class=\"admin-dashboard-icons\">\n          <ul className=\"clearfix\">\n            <li className=\"bg-colo-lg-red\">\n              <div className=\"icon-eleme\">\n                <Link to=\"/AddCustomer\">\n                  <i class=\"fas fa-plus-circle fa-3x\"></i>\n                  <div style={{ \"padding-top\": \"5px\" }}>\n                    <span>Add Customer</span>\n                  </div>\n                </Link>\n              </div>\n            </li>\n    \n            <li className=\"bg-colo-lg-red\">\n              <div className=\"icon-eleme\">\n                <Link to=\"/customerinfo\">\n                  <i class=\"fas fa-list fa-3x\"></i>\n                  <div style={{ \"padding-top\": \"5px\" }}>\n                    <span>Customer List</span>\n                  </div>\n                </Link>\n              </div>\n            </li>\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default CustomerPage;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\n\nclass InventoryPage extends React.Component {\n  render() {\n    return (\n      <div className=\"container mg-20\">\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to=\"/admin_dashboard\">Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>Setup</BreadcrumbItem>\n        </Breadcrumb>\n        <div className=\"admin-dashboard-icons\" style={{'top': '55%', 'width': '55%'}}>\n          <ul className=\"clearfix\">\n            {/* <li className=\"bg-color-lg-blue\">\n              <div className=\"icon-eleme\">\n                <Link to=\"/mitemtype\">\n                  <i className=\"fas fa-dolly-flatbed fa-3x\"></i>\n                  <div style={{ paddingTop: \"5px\" }}>\n                    <span>Item Type</span>\n                  </div>\n                </Link>\n              </div>\n            </li> */}\n            {/* <li className=\"bg-color-lg-blue\">\n              <div className=\"icon-eleme\">\n                <Link to=\"/masteritemtypelist\">\n                  <i className=\"fas fa-dolly-flatbed fa-3x\"></i>\n                  <div style={{ paddingTop: \"5px\" }}>\n                    <span>Item Type List</span>\n                  </div>\n                </Link>\n              </div>\n            </li> */}\n            {/* \n             */}\n            <li className=\"bg-colo-lg-red\">\n              <div className=\"icon-eleme\">\n                <Link to=\"/itemspage\">\n                  <i className=\"fas fa-cart-plus fa-3x\"></i>\n                  <div style={{ paddingTop: \"5px\" }}>\n                    <span>Items</span>\n                  </div>\n                </Link>\n              </div>\n            </li>\n\n          {/* <li className='bg-colo-lg-red'>\n            <div className='icon-eleme'>\n              <Link to='/productbilling'>\n                <i className='fas fa-kaaba fa-3x'></i>\n                <div style={{ paddingTop: '5px' }}>\n                  <span>Item Cost</span>\n                </div>\n              </Link>\n            </div>\n          </li> */}\n\n      \n\n             <li className=\"bg-colo-lg-red\">\n              <div className=\"icon-eleme\">\n                <Link to=\"/bomproductlist\">\n                  <i className=\"fa fa-cog fa-3x\"></i>\n                  <div style={{ paddingTop: \"5px\" }}>\n                    <span>BOM</span>\n                  </div>\n                </Link>\n              </div>\n            </li> \n            \n            <li className=\"bg-colo-lg-red\">\n              <div className=\"icon-eleme\">\n                <Link to=\"/supplier\">\n                  <i className=\"fas fa-cubes fa-3x\"></i>\n                  <div style={{ paddingTop: \"5px\" }}>\n                    <span>Suppliers</span>\n                  </div>\n                </Link>\n              </div>\n            </li>\n            <li className=\"bg-colo-lg-red\">\n              <div className=\"icon-eleme\">\n                <Link to=\"/customer\">\n                  <i className=\"fas fa-users fa-3x\"></i>\n                  <div style={{ paddingTop: \"5px\" }}>\n                    <span>Customers</span>\n                  </div>\n                </Link>\n              </div>\n            </li>\n            <li className=\"bg-colo-lg-red\">\n              <div className=\"icon-eleme\">\n                <Link to=\"/financialYearAdd\">\n                  <i className=\"fas fa-calendar-plus fa-3x\"></i>\n                  <div style={{ paddingTop: \"5px\" }}>\n                    <span>Add/Update FinancialYear</span>\n                  </div>\n                </Link>\n              </div>\n            </li>            \n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default InventoryPage;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\n\nclass InvoicePage extends Component {\n  render() {\n    return (\n      <div>\n        <div className='container mg-t-20'>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to='/admin_dashboard'>Home</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link to='/transaction_page'>Transaction</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Invoice</BreadcrumbItem>\n          </Breadcrumb>\n          <div class='admin-dashboard-icons'>\n            <ul className='clearfix'>\n              <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                  <Link to='/invoice1'>\n                    <i class='fas fa-file-invoice fa-3x'></i>\n                    <div style={{ 'padding-top': '5px' }}>\n                      <span>Normal Invoice</span>\n                    </div>\n                  </Link>\n                </div>\n              </li>\n\n               <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                  <Link to='/invoice2'>\n                    <i class='fas fa-file-invoice fa-3x'></i>\n                    <div style={{ 'padding-top': '5px' }}>\n                      <span>Proforma Invoice</span>\n                    </div>\n                  </Link>\n                </div>\n              </li> \n\n\n\n\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default InvoicePage;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\n\nclass InvoicePage1 extends Component {\n  render() {\n    return (\n      <div>\n        <div className='container mg-t-20'>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to='/admin_dashboard'>Home</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link to='/transaction_page'>Transaction</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Invoice</BreadcrumbItem>\n          </Breadcrumb>\n          <div class='admin-dashboard-icons'>\n            <ul className='clearfix'>\n              <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                  <Link to='/addinvoice'>\n                    <i class='fas fa-plus-circle fa-3x'></i>\n                    <div style={{ 'padding-top': '5px' }}>\n                      <span>Add Invoice</span>\n                    </div>\n                  </Link>\n                </div>\n              </li>\n\n               \n              <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                  <Link to='/invoicelist'>\n                    <i class='fas fa-list fa-3x'></i>\n                    <div style={{ 'padding-top': '5px' }}>\n                      <span>Invoice List</span>\n                    </div>\n                  </Link>\n                </div>\n              </li>\n\n           \n\n\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default InvoicePage1;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\n\nclass InvoicePage2 extends Component {\n  render() {\n    return (\n      <div>\n        <div className='container mg-t-20'>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to='/admin_dashboard'>Home</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link to='/transaction_page'>Transaction</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Proforma Invoice</BreadcrumbItem>\n          </Breadcrumb>\n          <div class='admin-dashboard-icons'>\n            <ul className='clearfix'>\n      \n               <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                  <Link to='/addproformainvoice'>\n                    <i class='fas fa-plus-circle fa-3x'></i>\n                    <div style={{ 'padding-top': '5px' }}>\n                      <span>Add Proforma Invoice</span>\n                    </div>\n                  </Link>\n                </div>\n              </li> \n\n\n               <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                  <Link to='/proformainvoicelist'>\n                    <i class='fas fa-list fa-3x'></i>\n                    <div style={{ 'padding-top': '5px' }}>\n                      <span>Proforma Invoice List</span>\n                    </div>\n                  </Link>\n                </div>\n              </li>\n\n\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default InvoicePage2;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\n\nclass ItemsPage extends React.Component {\n  render() {\n    return (\n      <div className=\"container mg-t-20\">\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to=\"/admin_dashboard\">Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/inventory_page\">setup</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>Items</BreadcrumbItem>\n        </Breadcrumb>\n        <div className=\"admin-dashboard-icons\">\n          <ul className=\"clearfix\">\n          <li className=\"bg-colo-lg-red\">\n              <div className=\"icon-eleme\">\n                <Link to=\"/madditem\">\n                  <i className=\"fas fa-plus-circle fa-3x\"></i>\n                  <div style={{ paddingTop: \"5px\" }}>\n                    <span>Add Item</span>\n                  </div>\n                </Link>\n              </div>\n            </li>\n            <li className=\"bg-colo-lg-red\">\n              <div className=\"icon-eleme\">\n                <Link to=\"/mitemlistvalues\">\n                  <i className=\"fas fa-list fa-3x\"></i>\n                  <div style={{ paddingTop: \"5px\" }}>\n                    <span>Item List</span>\n                  </div>\n                </Link>\n              </div>\n            </li>\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ItemsPage;\n","\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nclass ManufacturingPage extends Component {\n  render() {\n    return (\n      <div>\n        <div className='container mg-t-20'>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to='/admin_dashboard'>Home</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link to='/transaction_page'>Transaction</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Manufacturing</BreadcrumbItem>\n          </Breadcrumb>\n          <div class='admin-dashboard-icons'>\n            <ul className='clearfix'>\n            <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/work-order'>\n              <i className='fas fa-shopping-cart fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>Work Order</span>\n              </div>\n            </Link>\n          </div>\n        </li>\n        <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/production'>\n              <i className='fas fa-industry fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>Production</span>\n              </div>\n            </Link>\n          </div>\n        </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default ManufacturingPage;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nclass MoveOrder extends Component {\n  render() {\n    return (\n      <div>\n        <div className='container mg-t-20'>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to='/admin_dashboard'>Home</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link to='/transaction_page'>Transaction</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Move Order</BreadcrumbItem>\n          </Breadcrumb>\n          <div class='admin-dashboard-icons'>\n            <ul className='clearfix'>\n              <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                  <Link to='/move'>\n                    <i class='fas fa-plus-circle fa-3x'></i>\n                    <div style={{ 'padding-top': '5px' }}>\n                      <span>Add Move Order</span>\n                    </div>\n                  </Link>\n                </div>\n              </li>\n\n              <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                  <Link to='/moveorderlist'>\n                    <i class='fas fa-list fa-3x'></i>\n                    <div style={{ 'padding-top': '5px' }}>\n                      <span>Move Order List</span>\n                    </div>\n                  </Link>\n                </div>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default MoveOrder;\n","\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nclass OnHandPage extends Component {\n  render() {\n    return (\n      <div>\n        <div className='container mg-t-20'>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to='/admin_dashboard'>Home</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link to='/transaction_page'>Transaction</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link to='/quantitypage'>Quantity</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>On Hand</BreadcrumbItem>\n          </Breadcrumb>\n          <div class='admin-dashboard-icons'>\n            <ul className='clearfix'>\n                \n                <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                    <Link to='/addonhand'>\n                    <i className='fas fa-plus-circle fa-3x'></i>\n                    <div style={{ paddingTop: '5px' }}>\n                        <span>Update On Hand Qty</span>\n                    </div>\n                    </Link>\n                </div>\n                </li>\n\n                <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                    <Link to='/totalitemquantity'>\n                    <i className='fas fa-folder fa-3x'></i>\n                    <div style={{ paddingTop: '5px' }}>\n                        <span>View On hand Qty</span>\n                    </div>\n                    </Link>\n                </div>\n                </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default OnHandPage;\n\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nclass ProductionPage extends Component {\n  render() {\n    return (\n      <div>\n        <div className='container mg-t-20'>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to='/admin_dashboard'>Home</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n            <Link to='/manufacturing'>Manufacturing</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Production</BreadcrumbItem>\n          </Breadcrumb>\n          <div class='admin-dashboard-icons'>\n            <ul className='clearfix'>\n              <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                  <Link to='/add-production'>\n                    <i class='fas fa-plus-circle fa-3x'></i>\n                    <div style={{ 'padding-top': '5px' }}>\n                      <span>Add Production</span>\n                    </div>\n                  </Link>\n                </div>\n              </li>\n              \n              <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                  <Link to='/productionlist'>\n                    <i class='fas fa-list fa-3x'></i>\n                    <div style={{ 'padding-top': '5px' }}>\n                      <span>Production list</span>\n                    </div>\n                  </Link>\n                </div>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default ProductionPage;\n","\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nclass PurchaceOrderPage extends Component {\n  render() {\n    return (\n      <div>\n        <div className='container mg-t-20'>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to='/admin_dashboard'>Home</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link to='/transaction_page'>Transaction</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Purchase Order</BreadcrumbItem>\n          </Breadcrumb>\n          <div class='admin-dashboard-icons'>\n            <ul className='clearfix'>\n                <li className='bg-color-lg-blue'>\n            <div className='icon-eleme'>\n                <Link to='/purchase_order'>\n                <i className='fas fa-gift fa-3x'></i>\n                <div style={{ paddingTop: '5px' }}>\n                    <span>Purchase Order</span>\n                </div>\n                </Link>\n            </div>\n            </li>\n            <li className='bg-color-lg-blue'>\n            <div className='icon-eleme'>\n                <Link to='/view_purchaseorderlist'>\n                <i className='fas fa-gift fa-3x'></i>\n                <div style={{ paddingTop: '5px' }}>\n                    <span>View Purchase Order List</span>\n                </div>\n                </Link>\n            </div>\n            </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default PurchaceOrderPage;\n","\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nclass QuantityPage extends Component {\n  render() {\n    return (\n      <div>\n        <div className='container mg-t-20'>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to='/admin_dashboard'>Home</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link to='/transaction_page'>Transaction</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Quantity</BreadcrumbItem>\n          </Breadcrumb>\n          <div class='admin-dashboard-icons'>\n            <ul className='clearfix'>\n                <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                    <Link to='/receipt_screen'>\n                    <i className='fas fa-folder fa-3x'></i>\n                    <div style={{ paddingTop: '5px' }}>\n                        <span>PO receipts</span>\n                    </div>\n                    </Link>\n                </div>\n                </li>\n\n                <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                    <Link to='/onhand'>\n                    <i className='fas fa-folder fa-3x'></i>\n                    <div style={{ paddingTop: '5px' }}>\n                        <span>On hand</span>\n                    </div>\n                    </Link>\n                </div>\n                </li>\n\n                {/* <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                    <Link to='/totalitemquantity'>\n                    <i className='fas fa-folder fa-3x'></i>\n                    <div style={{ paddingTop: '5px' }}>\n                        <span>On hand Old</span>\n                    </div>\n                    </Link>\n                </div>\n                </li> */}\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default QuantityPage;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nclass QuotationPage extends Component {\n  render() {\n    return (\n      <div>\n        <div className='container mg-t-20'>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to='/admin_dashboard'>Home</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link to='/crmlist'>CRM</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Quotation</BreadcrumbItem>\n          </Breadcrumb>\n          <div class='admin-dashboard-icons'>\n            <ul className='clearfix'>\n               <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                    <Link to='/addquotation'>\n                    <i className='fas fa-plus-circle fa-3x'></i>\n                    <div style={{ paddingTop: '5px' }}>\n                        <span>Add Quotation</span>\n                    </div>\n                    </Link>\n                </div>\n                </li>\n                <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                    <Link to='/quotationlist'>\n                    <i className='fas fa-list fa-3x'></i>\n                    <div style={{ paddingTop: '5px' }}>\n                        <span>List Quotation</span>\n                    </div>\n                    </Link>\n                </div>\n                </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default QuotationPage;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\n\nclass SupplierPage extends React.Component {\n  render() {\n    return (\n      <div className=\"container mg-t-20\">\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to=\"/admin_dashboard\">Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem>\n            <Link to=\"/inventory_page\">setup</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>Supplier</BreadcrumbItem>\n        </Breadcrumb>\n        <div className=\"admin-dashboard-icons\">\n          <ul className=\"clearfix\">\n            <li className=\"bg-colo-lg-red\">\n              <div className=\"icon-eleme\">\n                <Link to=\"/supplier_detail\">\n                  <i className=\"fas fa-plus-circle fa-3x\"></i>\n                  <div style={{ paddingTop: \"5px\" }}>\n                    <span>Add Supplier</span>\n                  </div>\n                </Link>\n              </div>\n            </li>\n            <li className=\"bg-colo-lg-red\">\n              <div className=\"icon-eleme\">\n                <Link to=\"/supplier_list\">\n                  <i className=\"fas fa-list fa-3x\"></i>\n                  <div style={{ paddingTop: \"5px\" }}>\n                    <span>Supplier List</span>\n                  </div>\n                </Link>\n              </div>\n            </li>\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SupplierPage;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\n\nclass TransactionPage extends React.Component {\n  render() {\n    const adminMenu = (\n      <React.Fragment>\n     \n\n        <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/crmlist'>\n              <i className='fas fa-users fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>CRM</span>\n              </div>\n            </Link>\n          </div>\n        </li>\n\n\n        <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/purchase_orderpage'>\n              <i className='fas fa-gift fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>Purchase Order</span>\n              </div>\n            </Link>\n          </div>\n        </li>\n        {/*  */}\n        \n        {/*  */}\n\n        <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/quantitypage'>\n              <i className='fas fa-cart-arrow-down fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>Inventory</span>\n              </div>\n            </Link>\n          </div>\n        </li>\n\n        \n   \n        \n        {/* <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/addquotation'>\n              <i className='fas fa-users fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>Add Quotation</span>\n              </div>\n            </Link>\n          </div>\n        </li>\n        <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/quotationlist'>\n              <i className='fas fa-users fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>View Quotation</span>\n              </div>\n            </Link>\n          </div>\n        </li> */}\n      \n\n        \n        <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/invoice'>\n              <i className='fas fa-file-invoice fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>Invoice</span>\n              </div>\n            </Link>\n          </div>\n        </li>\n        <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/delivery-challan'>\n              <i className='fas fa-truck fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>Delivery Challan</span>\n              </div>\n            </Link>\n          </div>\n        </li>\n\n\n          <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/manufacturing'>\n              <i className='fas fa-industry fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>Manufacturing</span>\n              </div>\n            </Link>\n          </div>\n        </li>\n\n        <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/move-order'>\n              <i className='fas fa-forward fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>Move Order</span>\n              </div>\n            </Link>\n          </div>\n        </li>\n      </React.Fragment>\n    );\n    const financeMenu = (\n      <React.Fragment>\n        <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/invoice'>\n              <i className='fas fa-file-invoice fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>Invoice</span>\n              </div>\n            </Link>\n          </div>\n        </li>\n        <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/delivery-challan'>\n              <i className='fas fa-truck fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>Delivery Challan</span>\n              </div>\n            </Link>\n          </div>\n        </li>\n      </React.Fragment>\n    );\n    const purchaseMenu = (\n      <React.Fragment>\n        {/* <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/purchase_order'>\n              <i className='fas fa-kaaba fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>Purchase Order</span>\n              </div>\n            </Link>\n          </div>\n        </li>\n        <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/view_purchaseorderlist'>\n              <i className='fas fa-kaaba fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>View Purchase Order</span>\n              </div>\n            </Link>\n          </div>\n        </li> */}\n        <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/purchase_orderpage'>\n              <i className='fas fa-gift fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>Purchase Order</span>\n              </div>\n            </Link>\n          </div>\n        </li>\n      </React.Fragment>\n    );\n    const salesMenu = (\n      <React.Fragment>\n        {/* <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/enquiry'>\n              <i className='fas fa-envelope fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>New Enquiry</span>\n              </div>\n            </Link>\n          </div>\n        </li> */}\n\n        <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/crmlist'>\n              <i className='fas fa-users fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>CRM</span>\n              </div>\n            </Link>\n          </div>\n        </li>\n      </React.Fragment>\n    );\n    const storeMenu = (\n      <React.Fragment>\n        {/* <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/receipt_screen'>\n              <i className='fas fa-dolly-flatbed fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>Receive quantity</span>\n              </div>\n            </Link>\n          </div>\n        </li>\n        <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/totalitemquantity'>\n              <i className='fas fa-users fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>On hand quantity</span>\n              </div>\n            </Link>\n          </div>\n        </li> */}\n         <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/quantitypage'>\n              <i className='fas fa-folder fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>Quantity</span>\n              </div>\n            </Link>\n          </div>\n        </li>\n\n      </React.Fragment>\n    );\n    const productionMenu = (\n      <React.Fragment>\n        \n        \n        <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/manufacturing'>\n              <i className='fas fa-industry fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>Manufacturing</span>\n              </div>\n            </Link>\n          </div>\n        </li>\n\n      \n        <li className='bg-color-lg-blue'>\n          <div className='icon-eleme'>\n            <Link to='/move-order'>\n              <i className='fas fa-forward fa-3x'></i>\n              <div style={{ paddingTop: '5px' }}>\n                <span>Move Order</span>\n              </div>\n            </Link>\n          </div>\n        </li>\n      </React.Fragment>\n    );\n    return (\n      <div className='container mg-20'>\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to='/admin_dashboard'>Home</Link>\n          </BreadcrumbItem>\n          <BreadcrumbItem active>Transactions</BreadcrumbItem>\n        </Breadcrumb>\n        <div className='admin-dashboard-icons' style={{'top': '55%','width': '55%'}}>\n          <ul className='clearfix'>\n            {this.props.role === 'management'\n              ? adminMenu\n              : this.props.role === 'finance'\n              ? financeMenu\n              : this.props.role === 'purchase'\n              ? purchaseMenu\n              : this.props.role === 'sales'\n              ? salesMenu\n              : this.props.role === 'stores'\n              ? storeMenu\n              : this.props.role === 'production'\n              ? productionMenu\n              : ''}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\nfunction mapStateToProps(state) {\n  return {\n    role: state.user.role\n  };\n}\nexport default connect(mapStateToProps)(TransactionPage);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nclass WorkOrderPage extends Component {\n  render() {\n    return (\n      <div>\n        <div className='container mg-t-20'>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to='/admin_dashboard'>Home</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link to='/manufacturing'>Manufacturing</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem active>Work order</BreadcrumbItem>\n          </Breadcrumb>\n          <div class='admin-dashboard-icons'>\n            <ul className='clearfix'>\n              <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                  <Link to='/addorder'>\n                    <i class='fas fa-plus-circle fa-3x'></i>\n                    <div style={{ 'padding-top': '5px' }}>\n                      <span>Add Work Order</span>\n                    </div>\n                  </Link>\n                </div>\n              </li>\n\n              <li className='bg-color-lg-blue'>\n                <div className='icon-eleme'>\n                  <Link to='/orderlist'>\n                    <i class='fas fa-list fa-3x'></i>\n                    <div style={{ 'padding-top': '5px' }}>\n                      <span>Work Order List</span>\n                    </div>\n                  </Link>\n                </div>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default WorkOrderPage;\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nconst GuestRoute = ({ isAuthenticated, component: Component, ...rest }) => (\n  <Route\n    {...rest}\n    render={props =>\n      !isAuthenticated ? <Component {...props} /> : <Redirect to=\"/dashboard\" />\n    }\n  />\n);\n\nGuestRoute.propTypes = {\n  // component: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    isAuthenticated: !!state.user.token\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  null\n)(GuestRoute);\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nconst UserRoute = ({\n  isAuthenticated,\n  roles,\n  role,\n  component: Component,\n  ...rest\n}) => (\n  <Route\n    {...rest}\n    render={props => {\n      // return isAuthenticated ? <Component {...props} /> : <Redirect to=\"/\" />\n      if (!isAuthenticated) {\n        return <Redirect to='/login' />;\n      }\n      if (typeof roles === 'string') {\n        if (!(role === roles)) {\n          return <Redirect to='/' />;\n        }\n      } else if (!roles.includes(role)) {\n        return <Redirect to='/' />;\n      }\n      return <Component {...props} />;\n    }}\n  />\n);\n\nUserRoute.propTypes = {\n  // component: PropTypes.func.isRequired,\n  // role: PropTypes.array.isRequired\n};\n\nfunction mapStateToProps(state) {\n  return {\n    isAuthenticated: !!state.user.token,\n    role: state.user.role\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  null\n)(UserRoute);\n","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport Header from './Components/Header/Header';\nimport AddUser from './Containers/AddUser/AddUser';\nimport UpdateUser from './Containers/AddUser/UpdateUser';\nimport AdminDashboard from './Containers/Admin/AdminDashboard';\nimport ProductBilling from './Containers/Billing/ProductBilling';\nimport LoginPage from './Containers/LoginPage/LoginPage';\nimport AddMaterial from './Containers/Material/AddMaterial';\nimport AddMaterialType from './Containers/Material/AddMaterialType';\nimport UpdateMaterial from './Containers/Material/UpdateMaterial';\nimport UpdateMaterialType from './Containers/Material/UpdateMaterialType';\nimport ProductList from './Containers/Product/Product';\nimport ViewProduct from './Containers/Product/ViewProduct';\nimport ViewProductList from './Containers/Product/ViewProductList';\nimport AddCustomer from './Containers/SetUp/Customer/Customer';\nimport Transaction from './Containers/SetUp/Customer/Transaction';\nimport UpdateCustomer from './Containers/SetUp/Customer/UpdateCustomer';\nimport ViewCustomerTable from './Containers/SetUp/Customer/ViewCustomerTable';\nimport CustomerInfo from './Containers/SetUp/CustomerInfo/CustomerInfo';\nimport CustomerQuotationList from './Containers/SetUp/CustomerInfo/CustomerQuotation/CustomerQuotationList';\nimport AddFinancialYear from './Containers/SetUp/FinancialYear/AddFinancialYear';\nimport AddChalan from './Containers/Transaction/Challan/Challan/AddChalan';\nimport ViewChallan from './Containers/Transaction/Challan/View/ViewChallan';\nimport ViewChallanPdf from './Containers/Transaction/Challan/View/ViewChallanPdf';\nimport EnquiryPage from './Containers/Transaction/Enquiry';\nimport AddInvoice from './Containers/Transaction/Invoice/Invoice/AddInvoice';\nimport AddProformaInvoice from './Containers/Transaction/Invoice/Invoice/AddProformaInvoice';\nimport ViewInvoice from './Containers/Transaction/Invoice/View/ViewInvoice';\nimport ViewInvoicePdf from './Containers/Transaction/Invoice/View/ViewInvoicePdf';\nimport ViewProformaInvoice from './Containers/Transaction/Invoice/View/ViewProformaInvoice';\nimport ViewProformaInvoicePdf from './Containers/Transaction/Invoice/View/ViewProformaInvoicePdf';\nimport AddMasterItemList from './Containers/Transaction/Item/ItemList/AddMasterItemList';\nimport MasterItemList from './Containers/Transaction/Item/ItemList/MasterItemListValues';\nimport UpdateMasterItemList from './Containers/Transaction/Item/ItemList/UpdateMasterItemList';\nimport MasterItemType from './Containers/Transaction/Item/ItemType/ItemMasterType';\nimport MasterItemTypeList from './Containers/Transaction/Item/ItemType/ItemMasterTypeList';\nimport UpdateMasterItemType from './Containers/Transaction/Item/ItemType/UpdateItemMasterType';\nimport ReceiptScreen from './Containers/Transaction/ItemScreening/ReceiptScreen/ReceiptScreen';\nimport ViewReceiptPdf from './Containers/Transaction/ItemScreening/ReceiptScreen/ViewReceipt';\nimport MoveOrderScreen from './Containers/Transaction/MoveOrder/MoveOrderScreen';\nimport ViewMoveOrder from './Containers/Transaction/MoveOrder/View/ViewMoveOrder';\nimport AddOnHand from './Containers/Transaction/OnHand/AddOnHand';\nimport AddProduction from './Containers/Transaction/ProductionScreen/Production/AddProduction';\nimport ViewProudction from './Containers/Transaction/ProductionScreen/View/ViewProudction';\nimport PurchaseOrder from './Containers/Transaction/PurchaseOrder/PurchaseOrder';\nimport ViewPurchaseOrderList from './Containers/Transaction/PurchaseOrder/ViewPurchaseOrderList';\nimport ViewPurchaseOrderPdf from './Containers/Transaction/PurchaseOrder/ViewPurchaseOrderPdf';\nimport AddQuotation from './Containers/Transaction/Quotation/Quotation/AddQuotation';\nimport ViewQuotation from './Containers/Transaction/Quotation/View/ViewQuotation';\nimport ViewQuotationPdf from './Containers/Transaction/Quotation/View/ViewQuotationPdf';\nimport SupplierContact from './Containers/Transaction/Supplier/SupplierContact/SupplierContact';\nimport SupplierDetail from './Containers/Transaction/Supplier/SupplierDetail/SupplierDetail';\nimport SupplierDetailUpdate from './Containers/Transaction/Supplier/SupplierDetail/SupplierDetailUpdate';\nimport SupplierList from './Containers/Transaction/Supplier/SupplierDetail/Supplierlist';\nimport TotalQuantity from './Containers/Transaction/TotalQuantityScreen/TotalQuantity';\nimport AddOrder from './Containers/Transaction/WorkOrder/Order/AddOrder';\nimport ViewOrder from './Containers/Transaction/WorkOrder/View/ViewOrder';\nimport ViewOrderPdf from './Containers/Transaction/WorkOrder/View/ViewOrderPdf';\nimport ViewAdmin from './Containers/View/AdminRole';\nimport ViewEmployee from './Containers/View/EmployeeRole';\nimport './global/global.scss';\nimport BOMPage from './Pages/BOMPage';\nimport ChallanPage from './Pages/Challan';\nimport CRMPage from './Pages/CRMPage';\nimport CustomerPage from './Pages/CustomerPage';\nimport InventoryPage from './Pages/InventoryPage';\nimport InvoicePage from './Pages/InvoicePage';\nimport InvoicePage1 from './Pages/InvoicePage1';\nimport InvoicePage2 from './Pages/InvoicePage2';\nimport ItemsPage from './Pages/ItemsPage';\nimport ManufacturingPage from './Pages/ManufacturingPage';\nimport MoveOrder from './Pages/MoveOrder';\nimport OnHandPage from './Pages/OnHandPage';\nimport ProductionPage from './Pages/Production';\nimport PurchaceOrderPage from './Pages/PurchaceOrderPage';\nimport QuantityPage from './Pages/QuantityPage';\nimport QuotationPage from './Pages/QuotationPage';\nimport SupplierPage from './Pages/SupplierPage';\nimport TransactionPage from './Pages/TransactionPage';\nimport WorkOrderPage from './Pages/WorkOrder';\nimport GuestRoute from './Routes/GuestRoute';\nimport UserRoute from './Routes/UserRoute';\nimport { Roles } from './Services/Roles';\n\n\n\n\n\n\n\n\n\n\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div>\n        <Header />\n        <Route path='/' exact component={LoginPage} />\n        <GuestRoute path='/login' exact component={LoginPage} />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/admin_dashboard'\n          exact\n          component={AdminDashboard}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.ITADMIN]}\n          path='/adduser'\n          exact\n          component={AddUser}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.ITADMIN]}\n          path='/adminlist'\n          exact\n          component={ViewAdmin}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/employeelist'\n          exact\n          component={ViewEmployee}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.ITADMIN]}\n          path='/updateuser/:id'\n          exact\n          component={UpdateUser}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.SALES]}\n          path='/enquiry'\n          exact\n          component={EnquiryPage}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/addproduct'\n          exact\n          component={ProductList}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/viewproductlist'\n          exact\n          component={ViewProductList}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/bomproductlist'\n          exact\n          component={BOMPage}\n        />\n\n\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/viewproduct/:id'\n          exact\n          component={ViewProduct}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/add_itemtype'\n          exact\n          component={AddMaterialType}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/update_itemtype/:id'\n          exact\n          component={UpdateMaterialType}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/additem'\n          exact\n          component={AddMaterial}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/update_material/:id'\n          exact\n          component={UpdateMaterial}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/productbilling'\n          exact\n          component={ProductBilling}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/inventory_page'\n          exact\n          component={InventoryPage}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[\n            Roles.ADMIN,\n            Roles.FINANCE,\n            Roles.PURCHASE,\n            Roles.SALES,\n            Roles.STORE,\n            Roles.PRODUCTION\n          ]}\n          path='/transaction_page'\n          exact\n          component={TransactionPage}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.FINANCE]}\n          path='/invoice'\n          exact\n          component={InvoicePage}\n        />\n          <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.FINANCE]}\n          path='/invoice1'\n          exact\n          component={InvoicePage1}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.FINANCE]}\n          path='/invoice2'\n          exact\n          component={InvoicePage2}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.FINANCE]}\n          path='/delivery-challan'\n          exact\n          component={ChallanPage}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.PRODUCTION]}\n          path='/addonhand'\n          exact\n          component={AddOnHand}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.PRODUCTION]}\n          path='/move-order'\n          exact\n          component={MoveOrder}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.PRODUCTION]}\n          path='/move'\n          exact\n          component={MoveOrderScreen}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.PRODUCTION]}\n          path='/moveorderlist'\n          exact\n          component={ViewMoveOrder}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.PRODUCTION]}\n          path='/work-order'\n          exact\n          component={WorkOrderPage}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.PRODUCTION]}\n          path='/editworkorder/:id'\n          exact\n          component={AddOrder}\n        />\n\n\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.PRODUCTION]}\n          path='/manufacturing'\n          exact\n          component={ManufacturingPage}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/customer'\n          exact\n          component={CustomerPage}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/financialYearAdd'\n          exact\n          component={AddFinancialYear}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.SALES]}\n          path='/transaction/:id'\n          exact\n          component={Transaction}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/supplier'\n          exact\n          component={SupplierPage}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/quotationpage'\n          exact\n          component={QuotationPage}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.STORE]}\n          path='/quantitypage'\n          exact\n          component={QuantityPage}\n        />\n\n\n\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/itemspage'\n          exact\n          component={ItemsPage}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/mitemtype'\n          exact\n          component={MasterItemType}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/mitemtypelist'\n          exact\n          component={MasterItemType}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/masteritemtypelist'\n          exact\n          component={MasterItemTypeList}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/madditem'\n          exact\n          component={AddMasterItemList}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/mitemlistvalues'\n          exact\n          component={MasterItemList}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/m_updateitemlist/:id'\n          exact\n          component={UpdateMasterItemList}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/update_mitemtype/:id'\n          exact\n          component={UpdateMasterItemType}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.PURCHASE]}\n          path='/purchase_order'\n          exact\n          component={PurchaseOrder}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.PURCHASE]}\n          path='/purchase_orderpage'\n          exact\n          component={PurchaceOrderPage}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.PURCHASE]}\n          path='/view_purchaseorderpdf/:id'\n          exact\n          component={ViewPurchaseOrderPdf}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.PURCHASE]}\n          path='/view_purchaseorderlist'\n          exact\n          component={ViewPurchaseOrderList}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/supplier_detail'\n          exact\n          component={SupplierDetail}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/supplier_contact'\n          exact\n          component={SupplierContact}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.PURCHASE]}\n          path='/purchase_order_update/:id'\n          exact\n          component={PurchaseOrder}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/supplierdetail_update/:id'\n          exact\n          component={SupplierDetailUpdate}\n        />\n\n\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/supplier_list'\n          exact\n          component={SupplierList}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.STORE]}\n          path='/receipt_screen'\n          exact\n          component={ReceiptScreen}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.STORE]}\n          path='/viewreceipt'\n          exact\n          component={ViewReceiptPdf}\n        />\n\n\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.STORE]}\n          path='/totalitemquantity'\n          exact\n          component={TotalQuantity}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.STORE]}\n          path='/onhand'\n          exact\n          component={OnHandPage}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/AddCustomer'\n          exact\n          component={AddCustomer}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.SALES]}\n          path='/customerlist'\n          exact\n          component={ViewCustomerTable}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.SALES]}\n          path='/crmlist'\n          exact\n          component={CRMPage}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/updatecustomer/:id'\n          exact\n          component={UpdateCustomer}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/customerinfo'\n          exact\n          component={CustomerInfo}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/addquotation'\n          exact\n          component={AddQuotation}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/editquotation/:id'\n          exact\n          component={AddQuotation}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/quotationlist'\n          exact\n          component={ViewQuotation}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/view_quotationpdf/:id'\n          exact\n          component={ViewQuotationPdf}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/customerquotationlist/:id'\n          exact\n          component={CustomerQuotationList}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.FINANCE]}\n          path='/addinvoice'\n          exact\n          component={AddInvoice}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.FINANCE]}\n          path='/addproformainvoice'\n          exact\n          component={AddProformaInvoice}\n        />\n\n\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.FINANCE]}\n          path='/editinvoice/:id'\n          exact\n          component={AddInvoice}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.FINANCE]}\n          path='/editproformainvoice/:id'\n          exact\n          component={AddProformaInvoice}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.FINANCE]}\n          path='/addchallan'\n          exact\n          component={AddChalan}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.FINANCE]}\n          path='/editchallan/:id'\n          exact\n          component={AddChalan}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.PRODUCTION]}\n          path='/addorder'\n          exact\n          component={AddOrder}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.PRODUCTION]}\n          path='/orderlist'\n          exact\n          component={ViewOrder}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.FINANCE]}\n          path='/invoicelist'\n          exact\n          component={ViewInvoice}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.FINANCE]}\n          path='/proformainvoicelist'\n          exact\n          component={ViewProformaInvoice}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.FINANCE]}\n          path='/challanlist'\n          exact\n          component={ViewChallan}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={Roles.ADMIN}\n          path='/productionlist'\n          exact\n          component={ViewProudction}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.FINANCE]}\n          path='/view_invoicepdf/:id'\n          exact\n          component={ViewInvoicePdf}\n        />\n\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.FINANCE]}\n          path='/view_proformainvoicepdf/:id'\n          exact\n          component={ViewProformaInvoicePdf}\n        />\n\n\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.PRODUCTION]}\n          path='/view_orderpdf/:id'\n          exact\n          component={ViewOrderPdf}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.FINANCE]}\n          path='/view_challanpdf/:id'\n          exact\n          component={ViewChallanPdf}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.PRODUCTION]}\n          path='/production'\n          exact\n          component={ProductionPage}\n        />\n        <UserRoute\n          location={this.props.location}\n          roles={[Roles.ADMIN, Roles.PRODUCTION]}\n          path='/add-production'\n          exact\n          component={AddProduction}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux';\nimport storage from 'redux-persist/lib/storage';\nimport user from '../reducer/user';\nimport userlist from '../reducer/userlist';\nimport materialoptionlist from '../reducer/materialoptionlist';\nimport materiallistvalues from '../reducer/materiallistvalues';\nimport productlistvalues from '../reducer/productlistvalues';\nimport masteritemtypenamevalue from '../reducer/masteritemtypenamevalue';\nimport masteritemtypelistvalues from '../reducer/masteritemlistnamevalue';\nimport suppliercontactlistvalue from '../reducer/suppliercontactlistvalue';\nimport supplierdetaillistvalue from '../reducer/supplierdetaillistvalue';\nimport uomlistvalue from '../reducer/uomlistvalue';\nimport currencylistvalue from '../reducer/currencylistvalue';\nimport locationlistvalue from '../reducer/locationlistvalue';\nimport purchaseorderlistvalue from '../reducer/purchaseorderlistvalue';\nimport receiptlistvalues from '../reducer/receiptlistvalues';\nimport customerlistvalues from '../reducer/customerlistvalues';\nimport quotationlistvalues from '../reducer/quotationlistvalues';\nimport invoicelistvalues from '../reducer/invoicelistvalues';\nimport proformainvoicelistvalues from '../reducer/proformainvoicelistvalues';\n\nimport challanlistvalues from '../reducer/challanlistvalues';\nimport orderlistvalues from '../reducer/orderlistvalues';\nimport productionlistvalues from '../reducer/productionlistvalues';\nimport moveorderlistvalues from '../reducer/moveorderlistvalues';\nimport customertransationvalues from '../reducer/customertransationvalues';\n\nimport { USER_LOGGED_OUT } from '../Services/types';\n\nconst appReducer = combineReducers({\n  user: user,\n  userlist: userlist,\n  materialoption: materialoptionlist,\n  materiallistvalues: materiallistvalues,\n  productlistvalues: productlistvalues,\n  masteritemtypenamevalue: masteritemtypenamevalue,\n  masteritemlistvalues: masteritemtypelistvalues,\n  suppliercontactlistvalue: suppliercontactlistvalue,\n  supplierdetaillistvalue: supplierdetaillistvalue,\n  uomlistvalue: uomlistvalue,\n  currencylistvalue: currencylistvalue,\n  locationlistvalue: locationlistvalue,\n  purchaseorderlistvalue: purchaseorderlistvalue,\n  receiptlistvalues: receiptlistvalues,\n  customerlistvalues: customerlistvalues,\n  customertransationvalues: customertransationvalues,\n  quotationlistvalues: quotationlistvalues,\n  invoicelistvalues: invoicelistvalues,\n  proformainvoicelistvalues: proformainvoicelistvalues,\n  challanlistvalues: challanlistvalues,\n  orderlistvalues: orderlistvalues,\n  productionlistvalues: productionlistvalues,\n  moveorderlistvalues: moveorderlistvalues\n});\n\nconst rootReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_LOGGED_OUT:\n      state = {};\n      storage.removeItem('persist:root');\n      return {};\n    default:\n      return appReducer(state, action);\n  }\n};\n\nexport default rootReducer;\n","import storage from \"redux-persist/lib/storage\";\nimport { USER_LOGGED_IN } from \"../Services/types\";\nimport { USER_LOGGED_OUT } from \"../Services/types\";\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case USER_LOGGED_IN:\n      return action.user;\n    case USER_LOGGED_OUT:\n      storage.removeItem(\"persist:root\");\n      return {};\n    default:\n      return state;\n  }\n}\n","import { USER_FETCHED } from \"../Services/types\";\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case USER_FETCHED:\n      return { ...state, ...action.userlist.entities.users };\n    default:\n      return state;\n  }\n}\n","import { MATERIAL_OPTIONS } from \"../Services/types\";\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case MATERIAL_OPTIONS:\n      return {\n        ...state,\n        ...action.materialoption.entities.materialoptions\n      };\n    default:\n      return state;\n  }\n}\n","import { MATERIAL_VALUES_FETCHED } from \"../Services/types\";\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case MATERIAL_VALUES_FETCHED:\n      return {\n        ...state,\n        ...action.materialsvalues.entities.materialslistvalue\n      };\n    default:\n      return state;\n  }\n}\n","import { PRODUCT_VALUES_FETCHED } from \"../Services/types\";\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case PRODUCT_VALUES_FETCHED:\n      return {\n        ...state,\n        ...action.productlistvalues.entities.productlistvalues\n      };\n    default:\n      return state;\n  }\n}\n","import { MASTER_ITEM_TYPES } from \"../Services/types\";\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case MASTER_ITEM_TYPES:\n      return {\n        ...state,\n        ...action.MasterItemTypeName.entities.masteritemtypenamevalue\n      };\n    default:\n      return state;\n  }\n}\n","import { MASTER_ITEM_LIST } from \"../Services/types\";\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case MASTER_ITEM_LIST:\n      return {\n        ...state,\n        ...action.MasterItemTypeList.entities.masteritemtypelistvalues\n      };\n    default:\n      return state;\n  }\n}\n","import { SUPPLIER_CONTACT_LIST } from \"../Services/types\";\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case SUPPLIER_CONTACT_LIST:\n      return {\n        ...state,\n        ...action.suppliercontactlistvalue.entities.suppliercontactlistvalue\n      };\n    default:\n      return state;\n  }\n}\n","import { SUPPLIER_DETAIL_LIST } from \"../Services/types\";\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case SUPPLIER_DETAIL_LIST:\n      return {\n        ...state,\n        ...action.supplierdetaillistvalue.entities.supplierdetaillistvalue\n      };\n    default:\n      return state;\n  }\n}\n","import { UOM_LIST } from \"../Services/types\";\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case UOM_LIST:\n      return {\n        ...state,\n        ...action.uomlist.entities.uomlistvalue\n      };\n    default:\n      return state;\n  }\n}\n","import { CURRENCY_LIST } from \"../Services/types\";\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case CURRENCY_LIST:\n      return {\n        ...state,\n        ...action.currencylist.entities.currencylistvalue\n      };\n    default:\n      return state;\n  }\n}\n","import { Location_LIST } from \"../Services/types\";\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case Location_LIST:\n      return {\n        ...state,\n        ...action.locationlist.entities.locationlistvalue\n      };\n    default:\n      return state;\n  }\n}\n","import { PURCHASE_ORDER_LIST } from \"../Services/types\";\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case PURCHASE_ORDER_LIST:\n      return {\n        ...state,\n        ...action.purchaseorderlistvalues.entities.purchaseorderlistvalue\n      };\n    default:\n      return state;\n  }\n}\n","import { PO_RECEIPT_LIST } from \"../Services/types\";\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case PO_RECEIPT_LIST:\n      return {\n        ...state,\n        ...action.receiptlistvalues.entities.receiptlistvalues\n      };\n    default:\n      return state;\n  }\n}\n","import {\n  ADD_CUSTOMER_CONTACT,\n  CUSTOMER_CONTACT_FETCHED\n} from \"../Services/types\";\n\nexport default function(state = {}, action) {\n  console.log(state)\n  switch (action.type) {\n    case CUSTOMER_CONTACT_FETCHED:\n    \n    case ADD_CUSTOMER_CONTACT:\n      return {\n        ...state,\n        ...action.customerlist.entities.customerlistvalues\n      };\n    default:\n      return state;\n  }\n}\n","import {\n    CUSTOMERTRANSACTION_FETCHED,\n    ADD_CUSTOMER_TRANSACTION\n  } from \"../Services/types\";\n  \n  export default function(state = {}, action) {\n    console.log(action)\n    switch (action.type) {\n      case CUSTOMERTRANSACTION_FETCHED:\n      return {\n        ...state,\n        ...action.customerlist.entities.customertransationvalues\n      };\n      case ADD_CUSTOMER_TRANSACTION:\n        return {\n          ...state,\n          ...action.customerlist.entities.customertransationvalues\n        };\n      default:\n        return state;\n    }\n  }\n  ","import { ADD_QUOTATION, QUOTATION_FETCHED } from \"../Services/types\";\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case QUOTATION_FETCHED:\n    case ADD_QUOTATION:\n      return {\n        ...state,\n        ...action.quotationlist.entities.quotationlistvalues\n      };\n    default:\n      return state;\n  }\n}\n","import { ADD_INVOICE, INVOICE_FETCHED } from \"../Services/types\";\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case INVOICE_FETCHED:\n    case ADD_INVOICE:\n      return {\n        ...state,\n        ...action.invoicelist.entities.invoicelistvalues\n      };\n    default:\n      return state;\n  }\n}\n","\n\nimport { ADD_PROFORMA_INVOICE, PROFORMAINVOICE_FETCHED } from \"../Services/types\";\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case PROFORMAINVOICE_FETCHED:\n    case ADD_PROFORMA_INVOICE:\n      return {\n        ...state,\n        ...action.proformainvoicelist.entities.proformainvoicelistvalues\n      };\n    default:\n      return state;\n  }\n}\n","import { ADD_CHALLAN, CHALLAN_FETCHED } from \"../Services/types\";\n\nexport default function(state = {}, action) {\n  console.log(action)\n  switch (action.type) {\n    case CHALLAN_FETCHED:\n    case ADD_CHALLAN:\n      return {\n        ...state,\n        ...action.challanlist.entities.challanlistvalues\n      };\n    default:\n      return state;\n  }\n}\n","import { ADD_ORDER, ORDER_FETCHED } from '../Services/types';\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case ADD_ORDER:\n    case ORDER_FETCHED:\n      return {\n        ...state,\n        ...action.orderlist.entities.orderlistvalues\n      };\n    default:\n      return state;\n  }\n}\n","import { ADD_PRODUCTION, PRODUCTION_FETCHED } from '../Services/types';\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case PRODUCTION_FETCHED:\n    case ADD_PRODUCTION:\n      return {\n        ...state,\n        ...action.productionlist.entities.productionlistvalues\n      };\n    default:\n      return state;\n  }\n}\n","import { ADD_MOVEORDER, MOVEORDER_FETCHED } from '../Services/types';\n\nexport default function(state = {}, action) {\n  switch (action.type) {\n    case MOVEORDER_FETCHED:\n    case ADD_MOVEORDER:\n      return {\n        ...state,\n        ...action.moverorderlist.entities.moveorderlistvalues\n      };\n    default:\n      return state;\n  }\n}\n","import { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { persistReducer } from \"redux-persist\";\nimport LocalStorage from \"redux-persist/lib/storage\";\nimport thunk from \"redux-thunk\";\nimport logger from \"redux-logger\";\nimport rootReducer from \"./rootReducer\";\n\nconst persistConfig = {\n  key: \"root\",\n  storage: LocalStorage\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst store = createStore(\n  persistedReducer,\n  composeWithDevTools(applyMiddleware(thunk, logger))\n);\n\nexport default store;\n","import { persistStore } from \"redux-persist\";\nimport store from \"./store\";\n\nexport default persistStore(store);\n","import { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { faCalendarPlus, faCube, faDollyFlatbed, faHome, faKaaba, faUser, faUserFriends, faUsers, faUsersCog } from \"@fortawesome/free-solid-svg-icons\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport jwtDecode from \"jwt-decode\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { userLoggedIn } from \"./actions/actions\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport persistor from \"./Store/persistStore\";\nimport store from \"./Store/store\";\nimport setAuthorizationHeader from \"./utils/setAuthorizationHeader\";\n\nlibrary.add(\n  faHome,\n  faDollyFlatbed,\n  faCube,\n  faKaaba,\n  faUsers,\n  faUser,\n  faUsersCog,\n  faUserFriends,\n  faCalendarPlus\n);\n\n// const store = createStore(\n//     rootReducer,\n//     composeWithDevTools(applyMiddleware(thunk))\n// );\n\nif (localStorage.Mob_JWT) {\n  const token = localStorage.Mob_JWT;\n  setAuthorizationHeader(token);\n  var decoded = jwtDecode(localStorage.Mob_JWT);\n  const userinfo = {\n    email: decoded.email,\n    role: decoded.role,\n    token: localStorage.Mob_JWT\n  };\n  store.dispatch(userLoggedIn(userinfo));\n}\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App component={App} />\n      </PersistGate>\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/client.e1af59ba.png\";"],"sourceRoot":""}